{"version":3,"file":"static/js/283.e8ebfa2e.chunk.js","mappings":"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","sources":["apis/hxc.ts","utils/request.ts","views/userControl/dellog.tsx","views/userControl/one.tsx","views/userControl/two.tsx","views/userControl/index.tsx","../node_modules/rc-switch/es/index.js","../node_modules/antd/es/switch/index.js"],"sourcesContent":["import axios from '../utils/request';\r\nexport const getList = (data: any): Promise<any> => {\r\n  return axios.request({\r\n    url: \"/getList\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\n};\r\nexport const getUserList = (params: any): Promise<any> => {\r\n  return axios.request({\r\n    url: \"/getUserList\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\nexport const HXCsetObj = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCsetObj\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\nexport const HXCGetCodes = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCGetCodes\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n\r\nexport const HXCGetRandom = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCGetRandom\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n\r\n//忘记密码页面，发送验证码\r\nexport const setPassCode = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/setPassCode\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n//修改密码页面，点击确定\r\nexport const HXCxiuPass = (params: any): Promise<any> => {\r\n  console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCxiuPass\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n//用户管理页获取用户数据\r\nexport const HXCGetUserData = (): Promise<any> => {\r\n  return axios.request({\r\n    url: \"/HXCGetUserData\",\r\n    method: \"GET\",\r\n  });\r\n};\r\n\r\n//修改管理员状态（启用/禁用）\r\nexport const HXCxiuType = (params: any): Promise<any> => {\r\n  console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCxiuType\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n//删除 管理员\r\nexport const HXCDelUser = (params: any): Promise<any> => {\r\n  console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCDelUser\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n//点击编辑 把点击的那一条id传入服务器  筛选出来。\r\nexport const HXCScreenUser = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCScreenUser\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n//点击编辑弹窗中的确定按钮\r\nexport const HXCEnitOk = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCEnitOk\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n//点击添加弹窗中的确定按钮\r\nexport const HXCAddOk = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCAddOk\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n//user页面精确搜索\r\nexport const HXCUserSearch = (params: any): Promise<any> => {\r\n  // console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCUserSearch\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n\r\n// 获取删除弹窗中的数据\r\nexport const HXCDelLogList = (): Promise<any> => {\r\n  return axios.request({\r\n    url: \"/HXCDelLogList\",\r\n    method: \"GET\",\r\n  });\r\n};\r\n//删除记录里的恢复\r\nexport const HXCRegainDel = (params: any): Promise<any> => {\r\n  console.log(params);\r\n  return axios.request({\r\n    url: \"/HXCRegainDel\",\r\n    method: \"GET\",\r\n    params,\r\n  });\r\n};\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\n// const host1=\"http://192.168.1.169:4000\";\r\n// const host_dev=\"http://localhost:4000\";\r\nconst api = \"/api\";\r\nconst request = axios.create({\r\n  baseURL: api,\r\n  timeout: 5000,\r\n});\r\nrequest.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    // const token = window.localStorage.getItem(\"token\");\r\n    // if (token && config.headers) {\r\n    //   config.headers.Authorization = `Bearer ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  () => {\r\n    throw new Error(\"发起请求出错\");\r\n  }\r\n);\r\nrequest.interceptors.response.use(\r\n  (res) => {\r\n    return res.data;\r\n  },\r\n  (err) => {\r\n    if (err && err.response && err.response.status) {\r\n      const status = err.response.status;\r\n      switch (status) {\r\n      case 504:\r\n      case 500:\r\n      case 404:\r\n        console.error(\"服务器异常\");\r\n        break;\r\n      case 401:\r\n        console.error(\"未授权\");\r\n        break;\r\n      case 403:\r\n        console.error(\"无权访问\");\r\n        break;\r\n      case 422:\r\n        console.error(\"参数出错\");\r\n        break;\r\n      default:\r\n        console.error(\"未知错误\");\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport default request;\r\n","import React from 'react';\r\nimport './dellog.less';\r\nimport {CloseOutlined} from '@ant-design/icons';\r\n\r\nconst DelLog = (props:any) => {\r\n  return (\r\n    <div>\r\n      <div className=\"mc\">\r\n        <div className='alertBox'>\r\n          {/* 顶部标题 */}\r\n          <div className=\"top\">\r\n            <p>{props.title}</p>\r\n            {/* <p className='iconfont iconclose' onClick={() => {props.alertClose(); }}></p> */}\r\n            <CloseOutlined onClick={() => {props.alertClose(); }} className='iconfont'/>\r\n          </div>\r\n          {/* 内容部分 */}\r\n          <div className=\"main\" style={props.style}>\r\n            {props.children}\r\n          </div>\r\n          {/* 底部 */}\r\n          <div className=\"bot\">\r\n            {props.btnslot}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DelLog;","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport * as API from \"../../apis/hxc\";\r\nimport \"./userControl.less\";\r\n// import ExportJsonExcel from \"js-export-excel\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nimport DelLog from \"./dellog\";\r\n\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Switch,\r\n  Modal,\r\n  Radio,\r\n  Button,\r\n  message,\r\n  Input,\r\n} from \"antd\";\r\nconst { Search } = Input;\r\n\r\n// //防抖\r\nconst useDebounce = function (value: any, timeout: number): [any] {\r\n  const [state, setState] = useState(value);\r\n  const refContainer = useRef(false);\r\n  useEffect(() => {\r\n    if (refContainer.current) {\r\n      const someValue = \"输入中...\";\r\n      setState(someValue);\r\n    } else {\r\n      refContainer.current = true;\r\n    }\r\n    const timer = setTimeout(() => setState(value), timeout);\r\n    return () => clearTimeout(timer);\r\n  }, [value, timeout]);\r\n  return [state];\r\n};\r\n\r\nconst UserControl: React.FC = (_props: any) => {\r\n  const [data, setData] = useState([]); //user获取数据\r\n  const [visible, setVisible] = useState(false); //点击删除 出现弹窗\r\n  const [delId, setDelId] = useState(\"\"); //点击删除 获取该条数据ID\r\n\r\n  const [enit, setEnit] = useState(\"\"); //点击编辑，存该条数据ID\r\n  const [isEnit, setIsEnit] = useState(false); //点击 编辑出现弹窗\r\n  const [userList, setUserList] = useState([]); //点击编辑获取 该条数据\r\n\r\n  //编辑弹窗\r\n  const [enitUser, setEnitUser] = useState(\"\"); //点击编辑 用户账号的修改\r\n  const [enitPass, setEnitPass] = useState(\"\"); //点击编辑 密码的修改\r\n  const [enitUserName, setEnitUserName] = useState(\"\"); //点击编辑 密码的修改\r\n  const [enitUserPhone, setEnitUserPhone] = useState(\"\"); //点击编辑 手机号的修改\r\n  const [roles, setRoles] = useState(); //编辑弹筐里 管理员的选择\r\n  const [qiyong, setQiYong] = useState(); //编辑弹窗里 是否启用（单选框）\r\n\r\n  //添加\r\n  const [isAdd, setIsAdd] = useState(false); //控制添加弹窗\r\n  const [addUser, setAddUser] = useState(\"\"); //添加   用户账号\r\n\r\n  const load = useCallback(\r\n    debounce((nextValue) => setAddUser(nextValue), 1000),\r\n    [setAddUser]\r\n  );\r\n\r\n  const [addPass, setAddPass] = useState(\"\"); //添加   密码\r\n  const [addUserName, setUserName] = useState(\"\"); //添加 用户姓名\r\n  const [addPhone, setAddPhone] = useState(\"\"); //添加 用户手机号\r\n  const [addRoles, setAddRoles] = useState(1); //添加 用户角色\r\n  const [addType, setAddType] = useState(1); //添加 用户状态（启用/禁用）\r\n  const [isSed, setIsSed] = useState(false); //当添加弹框里 手机号输入 不正确时 给input框添加一个样式。\r\n\r\n  //删除历史记录弹窗\r\n  const [alertShow, setAlertShow] = useState(false);\r\n  const [delList, setDelList] = useState([]); //获取删除弹窗的数据\r\n\r\n  //防抖\r\n  const phoneChone = (e: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    const { value: nextValue } = e.target;\r\n    setAddUser(nextValue);\r\n    load(nextValue);\r\n  };\r\n\r\n  //实时更新 点击编辑时 弹筐里的数据\r\n  useEffect(() => {\r\n    setUserEnit(enit);\r\n  }, [enit]);\r\n\r\n  //user获取数据\r\n  useEffect(() => {\r\n    API.HXCGetUserData().then((res) => {\r\n      const data = res.data;\r\n      const list: any = localStorage.getItem(\"token\");\r\n      const lists = JSON.parse(list);\r\n      const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n      data.splice(i, 1);\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  //改变状态（启用/禁用）\r\n  const switchChange = (record: any, e: boolean, text: any) => {\r\n    const id = record.id;\r\n    const type = e;\r\n    API.HXCxiuType({ id, type }).then((res) => {\r\n      // console.log(res.data);\r\n    });\r\n  };\r\n\r\n  //点击删除   弹窗\r\n  const setTan = (id: React.SetStateAction<string>) => {\r\n    setVisible(true);\r\n    setDelId(id);\r\n  };\r\n  //点击弹窗内的确定按钮\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    const token = JSON.parse(localStorage.getItem(\"token\") || \"0\");\r\n    // console.log(token);\r\n    API.HXCDelUser({ delId, token }).then((res) => {\r\n      // console.log(res.data);\r\n      const data = res.data;\r\n      const list: any = localStorage.getItem(\"token\");\r\n      const lists = JSON.parse(list);\r\n      const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n      data.splice(i, 1);\r\n      setData(data);\r\n    });\r\n  };\r\n  //点击弹窗内的取消按钮\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  //编辑\r\n  //点击编辑按钮弹出框\r\n  async function setUserEnit(id: React.SetStateAction<string>) {\r\n    const userid = id;\r\n    setEnit(id);\r\n    setIsEnit(true);\r\n    const a = await API.HXCScreenUser({ userid });\r\n    setUserList(a.data);\r\n    if (a.data[0] && a.data[0].user) setEnitUser(a.data[0].user);\r\n    if (a.data[0] && a.data[0].password) setEnitPass(a.data[0].password);\r\n    if (a.data[0] && a.data[0].userName) setEnitUserName(a.data[0].userName);\r\n    if (a.data[0] && a.data[0].phone) setEnitUserPhone(a.data[0].phone);\r\n    if (a.data[0] && a.data[0].roles) setRoles(a.data[0].roles);\r\n  }\r\n\r\n  //点击编辑弹框 确定按钮\r\n  const enitOk = () => {\r\n    API.HXCEnitOk({\r\n      enitUser,\r\n      enitPass,\r\n      enitUserName,\r\n      enitUserPhone,\r\n      roles,\r\n      enit,\r\n    }).then((res) => {\r\n      const data = res.data;\r\n      const list: any = localStorage.getItem(\"token\");\r\n      const lists = JSON.parse(list);\r\n      const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n      data.splice(i, 1);\r\n      setData(data);\r\n      setEnit(\"\");\r\n    });\r\n    setIsEnit(false);\r\n  };\r\n\r\n  //点击编辑弹框 取消按钮\r\n  const enitCancel = () => {\r\n    setEnit(\"\");\r\n    setIsEnit(false);\r\n  };\r\n\r\n  //编辑弹窗里 是否启用单选框\r\n  // const qiyongChange = (e: any) => {\r\n  //   setQiYong(e.target.value);\r\n  //   console.log(e.target.value);\r\n  // };\r\n  //编辑弹窗里 权限管理\r\n  const enitRoles = (e: any) => {\r\n    setRoles(e.target.value);\r\n    // console.log(e.target.value);\r\n  };\r\n\r\n  //添加\r\n  const addUserTan = () => {\r\n    setIsAdd(true);\r\n  };\r\n  //添加弹框中的确定按钮\r\n  const addOk = () => {\r\n    setIsAdd(false);\r\n    if (addUser.length > 0 && addPass.length > 0 && addPhone.length > 0) {\r\n      setTimeout(() => {\r\n        API.HXCAddOk({\r\n          addUser,\r\n          addPass,\r\n          addUserName,\r\n          addPhone,\r\n          addRoles,\r\n          addType,\r\n        }).then((res) => {\r\n          // setData(res.data);\r\n          // console.log(res.code);\r\n          const data = res.data;\r\n          const list: any = localStorage.getItem(\"token\");\r\n          const lists = JSON.parse(list);\r\n          const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n          data.splice(i, 1);\r\n          setData(data);\r\n        });\r\n      }, 500);\r\n    } else {\r\n      message.warning(\"数据不能为空\", 3);\r\n    }\r\n    //点击添加弹框确定按钮后 清空input\r\n    setAddUser(\"\");\r\n    setAddPass(\"\");\r\n    setUserName(\"\");\r\n    setAddPhone(\"\");\r\n    setAddRoles(1);\r\n    setAddType(1);\r\n  };\r\n\r\n  //添加弹框 手机号 失去焦点时 正则判断\r\n  const addPhuneBlur = () => {\r\n    const TELTYPE =\r\n      /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n    if (TELTYPE.test(addPhone) === false) {\r\n      setIsSed(true);\r\n      message.warning(\"手机号格式不正确\", 3);\r\n    }\r\n  };\r\n  //获取焦点是样式去掉\r\n  const addPhoneFocus = () => {\r\n    setIsSed(false);\r\n  };\r\n  //添加弹框中的取消按钮\r\n  const addCancel = () => {\r\n    setIsAdd(false);\r\n  };\r\n\r\n  //搜索\r\n  const onSearch = (value: any) => {\r\n    // console.log(value);\r\n    API.HXCUserSearch({ value }).then((res) => {\r\n      if (value === \"\") {\r\n        const data = res.data;\r\n        const list: any = localStorage.getItem(\"token\");\r\n        const lists = JSON.parse(list);\r\n        const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n        data.splice(i, 1);\r\n        setData(data);\r\n      } else {\r\n        setData(res.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  //封装弹窗 关闭\r\n  const del = () => {\r\n    setAlertShow(false);\r\n  };\r\n  //封装弹窗 关闭\r\n  const alertClose = () => {\r\n    setAlertShow(false);\r\n  };\r\n  //封装弹窗 打开\r\n  const tan = () => {\r\n    setAlertShow(true);\r\n    API.HXCDelLogList().then((res) => {\r\n      setDelList(res.data);\r\n    });\r\n  };\r\n\r\n  //删除记录里的 回复按钮\r\n  const regain = (newId: any) => {\r\n    console.log(newId, \"--------296\");\r\n\r\n    API.HXCRegainDel({ newId }).then((res) => {\r\n      const data = res.data;\r\n      const list: any = localStorage.getItem(\"token\");\r\n      const lists = JSON.parse(list);\r\n      const i = data.findIndex((item: { id: any }) => item.id === lists.id);\r\n      data.splice(i, 1);\r\n      setData(data);\r\n\r\n      setDelList(res.data3);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"用户账号\",\r\n      dataIndex: \"user\",\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"userName\",\r\n    },\r\n    {\r\n      title: \"手机号\",\r\n      dataIndex: \"phone\",\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"roles\",\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <span>\r\n            {record.roles == 1 ? (\r\n              <span>\r\n                <a>超级管理员</a>\r\n              </span>\r\n            ) : (\r\n              <span>管理员</span>\r\n            )}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    // {\r\n    //   title: '账户描述',\r\n    //   dataIndex: 'intro',\r\n    // },\r\n    {\r\n      title: \"账户状态\",\r\n      dataIndex: \"type\",\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <Switch\r\n            size=\"small\"\r\n            checkedChildren=\"启用\"\r\n            unCheckedChildren=\"禁用\"\r\n            onChange={(e) => switchChange(record, e, text)}\r\n            defaultChecked={text == 1 ? true : false}\r\n          ></Switch>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      render: (text: any, record: any) => (\r\n        <Space size=\"middle\">\r\n          <a\r\n            onClick={() => {\r\n              setUserEnit(record.id);\r\n            }}\r\n          >\r\n            编辑\r\n          </a>\r\n          <a\r\n            onClick={() => {\r\n              setTan(record.id);\r\n            }}\r\n          >\r\n            删除\r\n          </a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  //删除记录\r\n  const delColumns = [\r\n    {\r\n      title: \"用户账号\",\r\n      dataIndex: \"user\",\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"userName\",\r\n    },\r\n    {\r\n      title: \"手机号\",\r\n      dataIndex: \"phone\",\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"roles\",\r\n      render: (text: any, record: any) => {\r\n        return (\r\n          <span>\r\n            {record.roles == 1 ? (\r\n              <span>\r\n                <a>超级管理员</a>\r\n              </span>\r\n            ) : (\r\n              <span>管理员</span>\r\n            )}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"操作人\",\r\n      dataIndex: \"people\",\r\n    },\r\n    {\r\n      title: \"恢复\",\r\n      render: (text: any, record: any) => (\r\n        <Space size=\"middle\">\r\n          <a\r\n            onClick={() => {\r\n              regain(record.newId);\r\n            }}\r\n          >\r\n            恢复\r\n          </a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"user_box_header\">\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              addUserTan();\r\n            }}\r\n          >\r\n            &nbsp;&nbsp;新增&nbsp;&nbsp;\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Space direction=\"vertical\">\r\n            <Search\r\n              placeholder=\"请输入用户名、账号、手机号\"\r\n              onSearch={onSearch}\r\n              enterButton\r\n            />\r\n          </Space>\r\n        </div>\r\n      </div>\r\n      {data.length > 0 ? (\r\n        <Table columns={columns} dataSource={data} rowKey=\"id\" />\r\n      ) : null}\r\n      {/* 删除弹窗 */}\r\n      <div>\r\n        <Modal\r\n          title=\"删除\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <p>确定要删除该管理员码？</p>\r\n        </Modal>\r\n      </div>\r\n\r\n      {/* 编辑弹窗 */}\r\n      <div className=\"user_enit\">\r\n        {userList.length > 0 ? (\r\n          <Modal\r\n            title=\"编辑弹窗\"\r\n            visible={isEnit}\r\n            onOk={enitOk}\r\n            onCancel={enitCancel}\r\n            okText=\"确认\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <p className=\"enit_p\">\r\n              用户账号：\r\n              <input\r\n                type=\"text\"\r\n                value={enitUser}\r\n                onChange={(e) => {\r\n                  setEnitUser(e.target.value);\r\n                }}\r\n              />\r\n            </p>\r\n            <p>\r\n              用户密码：\r\n              <input\r\n                type=\"text\"\r\n                value={enitPass}\r\n                onChange={(e) => {\r\n                  setEnitPass(e.target.value);\r\n                }}\r\n              />\r\n            </p>\r\n            <p>\r\n              用户姓名：\r\n              <input\r\n                type=\"text\"\r\n                value={enitUserName}\r\n                onChange={(e) => {\r\n                  setEnitUserName(e.target.value);\r\n                }}\r\n              />\r\n            </p>\r\n            <p>\r\n              手机号&nbsp;&nbsp;&nbsp;&nbsp;：\r\n              <input\r\n                type=\"text\"\r\n                value={enitUserPhone}\r\n                onChange={(e) => {\r\n                  setEnitUserPhone(e.target.value);\r\n                }}\r\n              />\r\n            </p>\r\n            <div>\r\n              角&nbsp;&nbsp;&nbsp;&nbsp;色&nbsp;&nbsp;&nbsp;&nbsp;：\r\n              <Radio.Group onChange={enitRoles} value={roles}>\r\n                <Radio value={\"2\"}>普通管理员</Radio>\r\n                <Radio value={\"1\"}>超级管理员</Radio>\r\n              </Radio.Group>\r\n            </div>\r\n            {/* <div>\r\n                是否启用：<Radio.Group onChange={qiyongChange} value={qiyong}>\r\n                  <Radio value={1}>是</Radio>\r\n                  <Radio value={2}>否</Radio>\r\n                </Radio.Group>\r\n              </div> */}\r\n          </Modal>\r\n        ) : null}\r\n      </div>\r\n      {/* 添加 */}\r\n      <div>\r\n        <Modal\r\n          title=\"添加管理员\"\r\n          visible={isAdd}\r\n          onOk={addOk}\r\n          onCancel={addCancel}\r\n          okText=\"确认\"\r\n          cancelText=\"取消\"\r\n        >\r\n          <p className=\"enit_p\">\r\n            用户账号：\r\n            <input type=\"text\" value={addUser} onChange={phoneChone} />\r\n            {/* setAddUser(e.target.value); console.log(addUser); */}\r\n          </p>\r\n          <p>\r\n            用户密码：\r\n            <input\r\n              type=\"text\"\r\n              value={addPass}\r\n              onChange={(e) => {\r\n                setAddPass(e.target.value);\r\n              }}\r\n            />\r\n          </p>\r\n          <p>\r\n            用户姓名：\r\n            <input\r\n              type=\"text\"\r\n              value={addUserName}\r\n              onChange={(e) => {\r\n                setUserName(e.target.value);\r\n              }}\r\n            />\r\n          </p>\r\n          <p>\r\n            手机号&nbsp;&nbsp;&nbsp;&nbsp;：\r\n            <input\r\n              type=\"text\"\r\n              className={isSed ? \"sedd\" : \"\"}\r\n              value={addPhone}\r\n              onChange={(e) => {\r\n                setAddPhone(e.target.value);\r\n              }}\r\n              onBlur={() => {\r\n                addPhuneBlur();\r\n              }}\r\n              onFocus={() => {\r\n                addPhoneFocus();\r\n              }}\r\n            />\r\n          </p>\r\n          <div>\r\n            角&nbsp;&nbsp;&nbsp;&nbsp;色&nbsp;&nbsp;&nbsp;&nbsp;：\r\n            <Radio.Group\r\n              onChange={(e) => {\r\n                setAddRoles(e.target.value);\r\n              }}\r\n              value={addRoles}\r\n            >\r\n              <Radio value={1}>普通管理员</Radio>\r\n              <Radio value={2}>超级管理员</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div>\r\n            是否启用：\r\n            <Radio.Group\r\n              onChange={(e) => {\r\n                setAddType(e.target.value);\r\n              }}\r\n              value={addType}\r\n            >\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={2}>否</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      <div>\r\n        {alertShow ? (\r\n          <DelLog\r\n            title=\"删除记录\"\r\n            btnslot={\r\n              <>\r\n                <p onClick={del}>返回</p>\r\n              </>\r\n            }\r\n            style={{}}\r\n            alertClose={alertClose}\r\n          >\r\n            <div>\r\n              {delList.length > 0 ? (\r\n                <Table\r\n                  columns={delColumns}\r\n                  dataSource={delList}\r\n                  rowKey=\"newId\"\r\n                  pagination={false}\r\n                  bordered={true}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </DelLog>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            tan();\r\n          }}\r\n        >\r\n          删除记录\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UserControl;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as API from '../../apis/hxc';\r\nimport './userControl.less';\r\nimport DelLog from './dellog';\r\n\r\nimport { Table, Tag, Space, Switch, Modal, Radio, Button, message, Input } from 'antd';\r\nconst { Search } = Input;\r\n\r\nconst UserControl: React.FC = (_props: any) => {\r\n  const [data, setData] = useState([]);//user获取数据\r\n\r\n  //删除历史记录弹窗\r\n  const [alertShow, setAlertShow] = useState(false);\r\n  const [delList, setDelList] = useState([]);//获取删除弹窗的数据\r\n\r\n  //user获取数据\r\n  useEffect(() => {\r\n    API.HXCGetUserData().then((res) => {\r\n      // setData(res.data);\r\n      const data = res.data;\r\n      const list: any = localStorage.getItem('token');\r\n      const lists = JSON.parse(list);\r\n      // console.log(lists);\r\n      const i = data.findIndex((item: { id: any; }) => item.id === lists.id);\r\n      // console.log(i);\r\n      data.splice(i, 1);\r\n      // console.log(data);\r\n      setData(data);\r\n    });\r\n    return () => {\r\n      console.log(213);\r\n\r\n    };\r\n  }, []);\r\n\r\n  //查看\r\n  const see = (record: any) => {\r\n    console.log(record);\r\n\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: '用户账号',\r\n      dataIndex: 'user',\r\n    },\r\n    {\r\n      title: '用户名',\r\n      dataIndex: 'userName',\r\n    },\r\n    {\r\n      title: '手机号',\r\n      dataIndex: 'phone',\r\n    },\r\n    {\r\n      title: '角色',\r\n      dataIndex: 'roles',\r\n      render: (text: any, record: any) => {\r\n        return <span>\r\n          {\r\n            record.roles == 1 ? <span><a>超级管理员</a></span> : <span>管理员</span>\r\n          }\r\n        </span>;\r\n      }\r\n    },\r\n  ];\r\n  //删除记录\r\n  const delColumns = [\r\n    {\r\n      title: '用户账号',\r\n      dataIndex: 'user',\r\n    },\r\n    {\r\n      title: '用户名',\r\n      dataIndex: 'userName',\r\n    },\r\n    {\r\n      title: '手机号',\r\n      dataIndex: 'phone',\r\n    },\r\n    {\r\n      title: '角色',\r\n      dataIndex: 'roles',\r\n      render: (text: any, record: any) => {\r\n        return <span>\r\n          {\r\n            record.roles == 1 ? <span><a>超级管理员</a></span> : <span>管理员</span>\r\n          }\r\n        </span>;\r\n      }\r\n    },\r\n    {\r\n      title: '操作人',\r\n      dataIndex: 'people'\r\n    },\r\n    // {\r\n    //   title: '恢复',\r\n    //   render: (text: any, record: any) => (\r\n    //     <Space size=\"middle\">\r\n    //       <a onClick={() => { regain(record.newId); }}>恢复</a>\r\n    //     </Space>\r\n    //   ),\r\n    // },\r\n  ];\r\n\r\n  //封装弹窗 打开\r\n  const tan = () => {\r\n    setAlertShow(true);\r\n    API.HXCDelLogList().then((res) => {\r\n      setDelList(res.data);\r\n    });\r\n  };\r\n  //封装弹窗 关闭\r\n  const del = () => {\r\n    setAlertShow(false);\r\n  };\r\n  //封装弹窗 关闭\r\n  const alertClose = () => {\r\n    setAlertShow(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='user_box_header'>\r\n      </div>\r\n      {\r\n        data.length > 0 ? <Table columns={columns} dataSource={data} rowKey=\"id\" /> : null\r\n      }\r\n      <div>\r\n        <Button onClick={() => { tan(); }}>删除记录</Button>\r\n      </div>\r\n      <div>\r\n        {\r\n          alertShow ? <DelLog title='删除记录'\r\n            btnslot={<><p onClick={del}>返回</p></>}\r\n            style={{}} alertClose={alertClose}>\r\n            <div>\r\n              {\r\n                delList.length > 0 ? <Table columns={delColumns} dataSource={delList} rowKey=\"newId\" pagination={false} bordered={true} /> : null\r\n              }\r\n            </div>\r\n          </DelLog> : null\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default UserControl;","import React, { Component } from 'react';\r\nimport One from './one';\r\nimport Two from './two';\r\n\r\ninterface Istate {\r\n  i: string,\r\n}\r\nexport default class index extends Component {\r\n  state = {\r\n    obj: {},\r\n    i: '',\r\n  };\r\n  render() {\r\n    const { i } = this.state;\r\n    // console.log(i);\r\n    return (\r\n      <div>\r\n        {\r\n          i === '1' ? <One></One> : <Two></Two>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const list: any = localStorage.getItem('token');\r\n    // const obj = JSON.parse(list);\r\n    // const n = obj.roles;\r\n    // this.setState({ obj: obj, i: n });\r\n  }\r\n  UNSAFE_componentWillMount() {\r\n    const list: any = localStorage.getItem('token');\r\n    const obj = JSON.parse(list);\r\n    const n = obj.roles;\r\n    this.setState({ obj: obj, i: n });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import * as API from '../../apis/hxc';\r\n// import './userControl.less';\r\n\r\n// import { Table, Tag, Space, Switch, Modal, Radio, Button, message, Input } from 'antd';\r\n// const { Search } = Input;\r\n\r\n// const UserControl: React.FC = (_props: any) => {\r\n//   const [data, setData] = useState([]);//user获取数据\r\n//   const [visible, setVisible] = useState(false);//点击删除 出现弹窗\r\n//   const [delId, setDelId] = useState('');//点击删除 获取该条数据ID\r\n\r\n\r\n//   const [enit, setEnit] = useState('');//点击编辑，存该条数据ID\r\n//   const [isEnit, setIsEnit] = useState(false);//点击 编辑出现弹窗\r\n//   const [userList, setUserList] = useState([]);//点击编辑获取 该条数据\r\n\r\n\r\n//   //编辑弹窗\r\n//   const [enitUser, setEnitUser] = useState('');//点击编辑 用户账号的修改\r\n//   const [enitPass, setEnitPass] = useState('');//点击编辑 密码的修改\r\n//   const [enitUserName, setEnitUserName] = useState('');//点击编辑 密码的修改\r\n//   const [enitUserPhone, setEnitUserPhone] = useState('');//点击编辑 手机号的修改\r\n//   const [roles, setRoles] = useState();//编辑弹筐里 管理员的选择\r\n//   const [qiyong, setQiYong] = useState();//编辑弹窗里 是否启用（单选框）\r\n\r\n\r\n//   //添加\r\n//   const [isAdd, setIsAdd] = useState(false);//控制添加弹窗\r\n//   const [addUser, setAddUser] = useState('');//添加   用户账号\r\n//   const [addPass, setAddPass] = useState('');//添加   密码\r\n//   const [addUserName, setUserName] = useState('');//添加 用户姓名\r\n//   const [addPhone, setAddPhone] = useState('');//添加 用户手机号\r\n//   const [addRoles, setAddRoles] = useState(1);//添加 用户角色\r\n//   const [addType, setAddType] = useState(1);//添加 用户状态（启用/禁用）\r\n//   const [isSed, setIsSed] = useState(false);//当添加弹框里 手机号输入 不正确时 给input框添加一个样式。\r\n\r\n\r\n//   //实时更新 点击编辑时 弹筐里的数据\r\n//   useEffect(() => {\r\n//     setUserEnit(enit);\r\n//   }, [enit]);\r\n\r\n//   //user获取数据\r\n//   useEffect(() => {\r\n//     API.HXCGetUserData().then((res) => {\r\n//       // setData(res.data);\r\n//       const data = res.data;\r\n//       const list: any = localStorage.getItem('token');\r\n//       const lists = JSON.parse(list);\r\n//       // console.log(lists);\r\n//       const i = data.findIndex((item: { id: any; }) => item.id === lists.id);\r\n//       // console.log(i);\r\n//       data.splice(i, 1);\r\n//       // console.log(data);\r\n//       setData(data);\r\n//     });\r\n//   }, []);\r\n\r\n//   //改变状态（启用/禁用）\r\n//   const switchChange = (record: any, e: boolean, text: any) => {\r\n//     const id = record.id;\r\n//     const type = e;\r\n//     API.HXCxiuType({ id, type }).then((res) => {\r\n//       // console.log(res.data);\r\n//     });\r\n//   };\r\n\r\n\r\n//   //点击删除   弹窗\r\n//   const setTan = (id: React.SetStateAction<string>) => {\r\n//     setVisible(true);\r\n//     setDelId(id);\r\n//   };\r\n//   //点击弹窗内的确定按钮\r\n//   const handleOk = () => {\r\n//     setVisible(false);\r\n//     API.HXCDelUser({ delId }).then((res) => {\r\n//       // console.log(res.data);\r\n//       setData(res.data);\r\n//     });\r\n//   };\r\n//   //点击弹窗内的取消按钮\r\n//   const handleCancel = () => {\r\n//     setVisible(false);\r\n//   };\r\n\r\n//   //编辑\r\n//   //点击编辑按钮弹出框\r\n//   async function setUserEnit(id: React.SetStateAction<string>) {\r\n//     const userid = id;\r\n//     setEnit(id);\r\n//     setIsEnit(true);\r\n//     const a = await API.HXCScreenUser({ userid });\r\n//     setUserList(a.data);\r\n//   }\r\n\r\n//   //点击编辑弹框 确定按钮\r\n//   const enitOk = () => {\r\n//     API.HXCEnitOk({ enitUser, enitPass, enitUserName, enitUserPhone, roles, qiyong, enit }).then((res) => {\r\n//       const aa = res.data;\r\n//       const list = aa.filter((item: { id: string; }) => item.id == enit);\r\n//       console.log(list);\r\n//       // setRoles(list[0].roles);\r\n//       // setQiYong(list[0].type);\r\n//       setData(aa);\r\n//       setEnit('');\r\n//     });\r\n//     setIsEnit(false);\r\n//   };\r\n\r\n//   //点击编辑弹框 取消按钮\r\n//   const enitCancel = () => {\r\n//     setEnit('');\r\n//     setIsEnit(false);\r\n//   };\r\n\r\n//   //编辑弹窗里 是否启用单选框\r\n//   const qiyongChange = (e: any) => {\r\n//     setQiYong(e.target.value);\r\n//     console.log(e.target.value);\r\n\r\n//   };\r\n//   //编辑弹窗里 权限管理\r\n//   const enitRoles = (e: any) => {\r\n//     setRoles(e.target.value);\r\n//     console.log(e.target.value);\r\n\r\n//   };\r\n\r\n\r\n//   //添加\r\n//   const addUserTan = () => {\r\n//     setIsAdd(true);\r\n//   };\r\n//   //添加弹框中的确定按钮\r\n//   const addOk = () => {\r\n//     setIsAdd(false);\r\n//     if (addUser.length > 0 && addPass.length > 0 && addPhone.length > 0) {\r\n//       setTimeout(() => {\r\n//         API.HXCAddOk({ addUser, addPass, addUserName, addPhone, addRoles, addType }).then((res) => {\r\n//           setData(res.data);\r\n//           // console.log(res.code);\r\n//         });\r\n//       }, 500);\r\n//     } else {\r\n//       message.warning('数据不能为空', 3);\r\n//     }\r\n\r\n//   };\r\n\r\n//   //添加弹框 手机号 失去焦点时 正则判断\r\n//   const addPhuneBlur = () => {\r\n//     const TELTYPE = /^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$/;\r\n//     if (TELTYPE.test(addPhone) === false) {\r\n//       setIsSed(true);\r\n//       message.warning('手机号格式不正确', 3);\r\n//     }\r\n//   };\r\n//   //获取焦点是样式去掉\r\n//   const addPhoneFocus = () => {\r\n//     setIsSed(false);\r\n//   };\r\n//   //添加弹框中的取消按钮\r\n//   const addCancel = () => {\r\n//     setIsAdd(false);\r\n//   };\r\n\r\n//   //搜索\r\n//   const onSearch = (value: any) => {\r\n//     // console.log(value);\r\n//     API.HXCUserSearch({ value }).then((res) => {\r\n//       // console.log(res.data);\r\n//       setData(res.data);\r\n//     });\r\n//   };\r\n\r\n//   const columns = [\r\n//     {\r\n//       title: '用户账号',\r\n//       dataIndex: 'user',\r\n//     },\r\n//     {\r\n//       title: '用户名',\r\n//       dataIndex: 'userName',\r\n//     },\r\n//     {\r\n//       title: '手机号',\r\n//       dataIndex: 'phone',\r\n//     },\r\n//     {\r\n//       title: '角色',\r\n//       dataIndex: 'roles',\r\n//       render: (text: any, record: any) => {\r\n//         return <span>\r\n//           {\r\n//             record.roles == 1 ? <span><a>超级管理员</a></span> : <span>管理员</span>\r\n//           }\r\n//         </span>;\r\n//       }\r\n//     },\r\n//     {\r\n//       title: '账户描述',\r\n//       dataIndex: 'intro',\r\n//     },\r\n//     {\r\n//       title: '账户状态',\r\n//       dataIndex: 'type',\r\n//       render: (text: any, record: any) => {\r\n//         return <Switch\r\n//           size=\"small\"\r\n//           checkedChildren=\"启用\" unCheckedChildren=\"禁用\"\r\n//           onChange={e => switchChange(record, e, text)}\r\n//           defaultChecked={text == 1 ? true : false}\r\n//         ></Switch>;\r\n//       }\r\n//     },\r\n\r\n//     {\r\n//       title: '操作',\r\n//       render: (text: any, record: any) => (\r\n//         <Space size=\"middle\">\r\n//           <a onClick={() => { setUserEnit(record.id); }}>编辑</a>\r\n//           <a onClick={() => { setTan(record.id); }}>删除</a>\r\n//         </Space>\r\n//       ),\r\n//     },\r\n//   ];\r\n//   return (\r\n//     <div>\r\n//       <div className='user_box_header'>\r\n//         <div>\r\n//           <Button type=\"primary\" onClick={() => { addUserTan(); }}>&nbsp;&nbsp;新增&nbsp;&nbsp;</Button>\r\n//         </div>\r\n//         <div>\r\n//           <Space direction=\"vertical\">\r\n//             <Search placeholder=\"请输入用户名、账号、手机号\" onSearch={onSearch} enterButton />\r\n//           </Space>\r\n//         </div>\r\n//       </div>\r\n//       {\r\n//         data.length > 0 ? <Table columns={columns} dataSource={data} rowKey=\"id\" /> : null\r\n//       }\r\n//       {/* 删除弹窗 */}\r\n//       <div>\r\n//         <Modal title=\"删除\" visible={visible} onOk={handleOk} onCancel={handleCancel} okText=\"确认\" cancelText=\"取消\">\r\n//           <p>确定要删除该管理员码？</p>\r\n//         </Modal>\r\n//       </div>\r\n\r\n//       {/* 编辑弹窗 */}\r\n//       <div className='user_enit'>\r\n//         {\r\n//           userList.length > 0 ? <Modal title=\"编辑弹窗\" visible={isEnit} onOk={enitOk} onCancel={enitCancel} okText=\"确认\" cancelText=\"取消\">\r\n//             <p className='enit_p'>\r\n//               用户账号：<input type=\"text\" defaultValue={userList[0]['user']} onChange={(e) => { setEnitUser(e.target.value); }} />\r\n//             </p>\r\n//             <p>\r\n//               用户密码：<input type=\"text\" defaultValue={userList[0]['password']} onChange={(e) => { setEnitPass(e.target.value); }} />\r\n//             </p>\r\n//             <p>\r\n//               用户姓名：<input type=\"text\" defaultValue={userList[0]['userName']} onChange={(e) => { setEnitUserName(e.target.value); }} />\r\n//             </p>\r\n//             <p>\r\n//               手机号&nbsp;&nbsp;&nbsp;&nbsp;：<input type=\"text\" defaultValue={userList[0]['phone']} onChange={(e) => { setEnitUserPhone(e.target.value); }} />\r\n//             </p>\r\n//             <div>\r\n//               角&nbsp;&nbsp;&nbsp;&nbsp;色&nbsp;&nbsp;&nbsp;&nbsp;：<Radio.Group onChange={enitRoles} value={roles}>\r\n//                 <Radio value={2}>普通管理员</Radio>\r\n//                 <Radio value={1}>超级管理员</Radio>\r\n//               </Radio.Group>\r\n//             </div>\r\n//             <div>\r\n//               是否启用：<Radio.Group onChange={qiyongChange} value={qiyong}>\r\n//                 <Radio value={1}>是</Radio>\r\n//                 <Radio value={2}>否</Radio>\r\n//               </Radio.Group>\r\n//             </div>\r\n//           </Modal> : null\r\n//         }\r\n//       </div>\r\n//       {/* 添加 */}\r\n//       <div>\r\n//         <Modal title=\"添加管理员\" visible={isAdd} onOk={addOk} onCancel={addCancel} okText=\"确认\" cancelText=\"取消\">\r\n//           <p className='enit_p'>\r\n//             用户账号：<input type=\"text\" value={addUser} onChange={(e) => { setAddUser(e.target.value); }} />\r\n//           </p>\r\n//           <p>\r\n//             用户密码：<input type=\"text\" value={addPass} onChange={(e) => { setAddPass(e.target.value); }} />\r\n//           </p>\r\n//           <p>\r\n//             用户姓名：<input type=\"text\" value={addUserName} onChange={(e) => { setUserName(e.target.value); }} />\r\n//           </p>\r\n//           <p>\r\n//             手机号&nbsp;&nbsp;&nbsp;&nbsp;：<input type=\"text\" className={isSed ? 'sedd' : ''} value={addPhone} onChange={(e) => { setAddPhone(e.target.value); }} onBlur={() => { addPhuneBlur(); }} onFocus={() => { addPhoneFocus(); }} />\r\n//           </p>\r\n//           <div>\r\n//             角&nbsp;&nbsp;&nbsp;&nbsp;色&nbsp;&nbsp;&nbsp;&nbsp;：<Radio.Group onChange={(e) => { setAddRoles(e.target.value); }} value={addRoles}>\r\n//               <Radio value={1}>普通管理员</Radio>\r\n//               <Radio value={2}>超级管理员</Radio>\r\n//             </Radio.Group>\r\n//           </div>\r\n//           <div>\r\n//             是否启用：<Radio.Group onChange={(e) => { setAddType(e.target.value); }} value={addType}>\r\n//               <Radio value={1}>是</Radio>\r\n//               <Radio value={2}>否</Radio>\r\n//             </Radio.Group>\r\n//           </div>\r\n//         </Modal>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default UserControl;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcSwitch from 'rc-switch';\nimport classNames from 'classnames';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport Wave from '../_util/wave';\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport devWarning from '../_util/devWarning';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      loading = _a.loading,\n      _a$className = _a.className,\n      className = _a$className === void 0 ? '' : _a$className,\n      disabled = _a.disabled,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"loading\", \"className\", \"disabled\"]);\n\n  devWarning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?');\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: disabled || loading,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nSwitch.displayName = 'Switch';\nexport default Switch;"],"names":["HXCsetObj","params","axios","url","method","HXCGetCodes","HXCGetRandom","setPassCode","HXCxiuPass","console","log","HXCGetUserData","HXCxiuType","HXCDelUser","HXCScreenUser","HXCEnitOk","HXCAddOk","HXCUserSearch","HXCDelLogList","HXCRegainDel","request","baseURL","timeout","interceptors","use","config","Error","response","res","data","err","status","error","props","className","title","CloseOutlined","onClick","alertClose","style","children","btnslot","Search","Input","_props","useState","setData","visible","setVisible","delId","setDelId","enit","setEnit","isEnit","setIsEnit","userList","setUserList","enitUser","setEnitUser","enitPass","setEnitPass","enitUserName","setEnitUserName","enitUserPhone","setEnitUserPhone","roles","setRoles","isAdd","setIsAdd","addUser","setAddUser","load","useCallback","debounce","nextValue","addPass","setAddPass","addUserName","setUserName","addPhone","setAddPhone","addRoles","setAddRoles","addType","setAddType","isSed","setIsSed","alertShow","setAlertShow","delList","setDelList","useEffect","setUserEnit","API","then","list","localStorage","getItem","lists","JSON","parse","i","findIndex","item","id","splice","a","userid","user","password","userName","phone","columns","dataIndex","render","text","record","size","checkedChildren","unCheckedChildren","onChange","e","type","switchChange","defaultChecked","delColumns","newId","data3","direction","placeholder","onSearch","value","enterButton","length","dataSource","rowKey","onOk","token","onCancel","okText","cancelText","target","setTimeout","message","onBlur","test","onFocus","pagination","bordered","index","state","obj","this","n","setState","Component","Switch","React","_ref","ref","_classNames","_ref$prefixCls","prefixCls","checked","disabled","loadingIcon","onKeyDown","restProps","_objectWithoutProperties","_useMergedState","useMergedState","defaultValue","_useMergedState2","_slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","event","mergedChecked","switchClassName","classNames","_defineProperty","concat","Object","assign","role","which","KeyCode","ret","displayName","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_a","customizePrefixCls","customizeSize","loading","_a$className","devWarning","_React$useContext","ConfigContext","getPrefixCls","SizeContext","LoadingOutlined","classes","Wave","insertExtraNode","RcSwitch","_extends","__ANT_SWITCH"],"sourceRoot":""}