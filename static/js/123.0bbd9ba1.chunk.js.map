{"version":3,"file":"static/js/123.0bbd9ba1.chunk.js","mappings":"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","sources":["apis/examEdit.ts","store/actions/index.ts","store/actions/demo.ts","store/actions/examEdit.ts","utils/request.ts","components/exam-left-nav/children/question-type-list.tsx","components/exam-left-nav/children/question-store.tsx","components/exam-left-nav/children/exam-outline.tsx","components/exam-left-nav/index.tsx","components/exam-right-nav/index.tsx","utils/compress.js","components/question-store/choices/index.tsx","components/question-store/gap-filling/index.tsx","components/question-store/short-answer/index.tsx","views/examination/issue-project.tsx","views/examination/data-report.tsx","views/examination/index.tsx"],"sourcesContent":["import axios from \"../utils/request\";\r\nimport { IWindowStoreTypeItem } from \"../components/exam-left-nav/children/question-store\";\r\n\r\nexport const getExam = (data: {\r\n  exam_id?: number;\r\n}): Promise<IExamListResponse> =>\r\n  axios.request({\r\n    url: \"/examEdit/getExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const insertQuestion = (data: {\r\n  question_type: string;\r\n  exam_id?: number;\r\n  creator_id?: number;\r\n}): Promise<{ code: string }> =>\r\n  axios.request({\r\n    url: \"/examEdit/insertQuestion\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addNewProject = (data: {\r\n  creator_id: number;\r\n}): Promise<{ code: string; exam_id: number }> =>\r\n  axios.request({\r\n    url: \"/examEdit/addNewProject\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyProject = (data: {\r\n  exam_id: number;\r\n  creator_id: number;\r\n}): Promise<{ code: string; insertId: number }> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyProject\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getExamList = (data: {\r\n  creator_id: number;\r\n}): Promise<{ code: string; examList: IExamItem[] }> =>\r\n  axios.request({\r\n    url: \"/examEdit/getExamList\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getQuesStore = (data: {\r\n  creator_id: number;\r\n}): Promise<IStoreResponse> =>\r\n  axios.request({\r\n    url: \"/examEdit/getQuesStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\ninterface IReqData extends IFocusQuestion {\r\n  exam_id: number;\r\n}\r\nexport const quesEditItem = (data: IReqData): Promise<{ code: string }> =>\r\n  axios.request({\r\n    url: \"/examEdit/quesEditItem\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionType = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  type: string;\r\n}): Promise<{\r\n  code: string;\r\n  optionArray: Array<{ option_name: string; option_image: string }>;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionType\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionScore = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  score: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionScore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionAnswer = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  answer: string;\r\n}): Promise<{\r\n  code: string;\r\n  answer: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionAnswer\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const deleteQuestion = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/deleteQuestion\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getIssueStatus = (data: {\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  isStart: number;\r\n  examLink: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/getIssueStatus\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\ntype PickerValue = moment.Moment | null | undefined;\r\nexport const issueExam = (data: {\r\n  exam_id: number;\r\n  duration: PickerValue;\r\n}): Promise<{\r\n  code: string;\r\n  examLink: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/issueExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addNewType = (data: {\r\n  type_name: string;\r\n  creator_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addNewType\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addQuesToStore = (data: {\r\n  id: number;\r\n  creator_id: number;\r\n  store_type_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addQuesToStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const cancelCollect = (data: {\r\n  id: number;\r\n  id_in_store: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/cancelCollect\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeImage = (data: {\r\n  id: number;\r\n  index: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeImage\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addOption = (data: {\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n  optionListRes: IOptionItem[];\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addOption\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeOption = (data: {\r\n  id: number;\r\n  index: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeOption\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const editExamMSG = (data: {\r\n  exam_id: number;\r\n  examTitle: string;\r\n  welcomeHolder: string;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/editExamMSG\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const stopIssue = (data: {\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/stopIssue\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyFromStore = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyFromStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyFromTemp = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyFromTemp\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const updateStoreList = (data: {\r\n  creator_id: number;\r\n  storeWindowList: IWindowStoreTypeItem[];\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/updateStoreList\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeExam = (data: {\r\n  creator_id: number;\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\n","import demo from \"./demo\";\r\nimport examEdit from \"./examEdit\";\r\nconst action = {\r\n  demo,\r\n  examEdit,\r\n};\r\n\r\nexport default action;\r\n","import * as TYPE from \"../action-types\";\n\nconst action = {\n  demoTest(payload: object) {\n    return {\n      type: TYPE.DEMO,\n      payload,\n    };\n  },\n};\n\nexport default action;","import * as TYPE from \"../action-types\";\r\n\r\nconst action = {\r\n  setOriginList(payload: object) {\r\n    return {\r\n      type: TYPE.SETORIGINLIST,\r\n      payload,\r\n    };\r\n  },\r\n  setStepStatus(payload: object) {\r\n    return {\r\n      type: TYPE.SETSTEPSTATUE,\r\n      payload,\r\n    };\r\n  },\r\n  setQuesFocus(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESFOCUS,\r\n      payload,\r\n    };\r\n  },\r\n  // setFocusMsg(payload: object) {\r\n  //   return {\r\n  //     type: TYPE.SETFOCUSMSG,\r\n  //     payload,\r\n  //   };\r\n  // },\r\n  setQuesType(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESTYPE,\r\n      payload,\r\n    };\r\n  },\r\n  setExamId(payload: object) {\r\n    return {\r\n      type: TYPE.SETEXAMID,\r\n      payload,\r\n    };\r\n  },\r\n  updateQuesList(payload: object) {\r\n    return {\r\n      type: TYPE.UPDATEQUESLIST,\r\n      payload,\r\n    };\r\n  },\r\n  setFocusMsg(payload: object) {\r\n    return {\r\n      type: TYPE.SETFOCUSMSG,\r\n      payload,\r\n    };\r\n  },\r\n  changeShowSerial(payload: object) {\r\n    return {\r\n      type: TYPE.CHANGESHOWSERIAL,\r\n      payload,\r\n    };\r\n  },\r\n  setHiddenHolder(payload: object) {\r\n    return {\r\n      type: TYPE.SETHIDDENHOLDER,\r\n      payload,\r\n    };\r\n  },\r\n  setLoginId(payload: object) {\r\n    return {\r\n      type: TYPE.SETLOGINID,\r\n      payload,\r\n    };\r\n  },\r\n  setTypeList(payload: object) {\r\n    return {\r\n      type: TYPE.SETTYPELIST,\r\n      payload,\r\n    };\r\n  },\r\n  setQuestionStore(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESTIONSTORE,\r\n      payload,\r\n    };\r\n  },\r\n  setExamStatus(payload: object) {\r\n    return {\r\n      type: TYPE.SETEXAMSTATUS,\r\n      payload,\r\n    };\r\n  },\r\n  scrollToBottom() {\r\n    document.documentElement.scrollTo({\r\n      behavior: \"smooth\",\r\n      top: document.documentElement.scrollHeight,\r\n    });\r\n    return {\r\n      type: \"\",\r\n      payload: {},\r\n    };\r\n  },\r\n  scrollToActiveQues(index: number) {\r\n    const top = document\r\n      .querySelector(\r\n        `.normal-question-list .question-item:nth-child(${index + 1})`\r\n      )\r\n      ?.getBoundingClientRect().top;\r\n    // console.log(index, top);\r\n    document.documentElement.scrollTo({\r\n      behavior: \"smooth\",\r\n      top: top ? top - 75 + document.documentElement.scrollTop : 0,\r\n    });\r\n    return {\r\n      type: \"\",\r\n      payload: {},\r\n    };\r\n  },\r\n};\r\n\r\nexport default action;\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\n// const host1=\"http://192.168.1.169:4000\";\r\n// const host_dev=\"http://localhost:4000\";\r\nconst api = \"/api\";\r\nconst request = axios.create({\r\n  baseURL: api,\r\n  timeout: 5000,\r\n});\r\nrequest.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    // const token = window.localStorage.getItem(\"token\");\r\n    // if (token && config.headers) {\r\n    //   config.headers.Authorization = `Bearer ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  () => {\r\n    throw new Error(\"发起请求出错\");\r\n  }\r\n);\r\nrequest.interceptors.response.use(\r\n  (res) => {\r\n    return res.data;\r\n  },\r\n  (err) => {\r\n    if (err && err.response && err.response.status) {\r\n      const status = err.response.status;\r\n      switch (status) {\r\n      case 504:\r\n      case 500:\r\n      case 404:\r\n        console.error(\"服务器异常\");\r\n        break;\r\n      case 401:\r\n        console.error(\"未授权\");\r\n        break;\r\n      case 403:\r\n        console.error(\"无权访问\");\r\n        break;\r\n      case 422:\r\n        console.error(\"参数出错\");\r\n        break;\r\n      default:\r\n        console.error(\"未知错误\");\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport default request;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Popover } from \"antd\";\r\nimport action from \"../../../store/actions\";\r\nimport { insertQuestion, getExam } from \"../../../apis/examEdit\";\r\ninterface IProps {\r\n  exam_id?: number;\r\n  // init:()=>void\r\n  setOriginList: (payload: { questionList: Array<never> }) => void;\r\n  login_id?: number;\r\n  scrollToBottom?: () => void;\r\n}\r\ninterface IState {\r\n  typeList: ITypeItem[];\r\n  msgList: ITypeItem[];\r\n}\r\ninterface ITypeItem {\r\n  name: string;\r\n  icon: string;\r\n}\r\nclass QuestionTypeList extends Component<IProps, IState> {\r\n  state = {\r\n    typeList: [\r\n      { name: \"单选题\", icon: \"icon-danxuan\", question_type: \"1\" },\r\n      { name: \"多选题\", icon: \"icon-duoxuankuang\", question_type: \"2\" },\r\n      { name: \"判断题\", icon: \"icon-panduan2\", question_type: \"3\" },\r\n      { name: \"多项填空\", icon: \"icon-tiankong\", question_type: \"4\" },\r\n      { name: \"简答题\", icon: \"icon-jianda2\", question_type: \"5\" },\r\n    ],\r\n    msgList: [\r\n      { name: \"姓名\", icon: \"icon-xingmingzhengjian\" },\r\n      { name: \"手机\", icon: \"icon-dianhua\" },\r\n      { name: \"班级\", icon: \"icon-banjiguanli\" },\r\n    ],\r\n  };\r\n  addQuestion = async (type: string, exam_id: number | undefined) => {\r\n    const { scrollToBottom } = this.props;\r\n    const insertRes = await insertQuestion({\r\n      question_type: type,\r\n      exam_id,\r\n      creator_id: this.props.login_id,\r\n    });\r\n    // console.log(insertRes);\r\n    if (insertRes.code === \"1001\") {\r\n      const examRes = await getExam({ exam_id });\r\n      this.props.setOriginList({\r\n        questionList: examRes.question_list,\r\n      });\r\n      if (scrollToBottom) scrollToBottom();\r\n    }\r\n  };\r\n  render() {\r\n    const { typeList } = this.state;\r\n    const { addQuestion } = this;\r\n    const { exam_id } = this.props;\r\n    return (\r\n      <div className=\"type-list\">\r\n        <div className=\"list-title\">考试题型</div>\r\n        <div className=\"list-content\">\r\n          {typeList.map((item) => (\r\n            <div key={item.icon} style={{ position: \"relative\" }}>\r\n              <Button\r\n                size=\"small\"\r\n                style={{\r\n                  marginLeft: 20,\r\n                  width: 160,\r\n                  height: 40,\r\n                  fontSize: \"16px\",\r\n                  textAlign: \"left\",\r\n                }}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  addQuestion(item.question_type, exam_id);\r\n                }}\r\n              >\r\n                <i\r\n                  style={{ fontStyle: \"normal\", fontSize: 18 }}\r\n                  className={`iconfont ${item.icon}`}\r\n                ></i>\r\n                <span className=\"itemName\">{item.name}</span>\r\n              </Button>\r\n              <Popover\r\n                placement=\"right\"\r\n                trigger=\"hover\"\r\n                overlayClassName=\"store-question-preview\"\r\n                content={\r\n                  <div className=\"preview-question\">\r\n                    <div className=\"preview-title\">\r\n                      {item.question_type === \"1\" ? \"请选择一个选项\" : \"\"}\r\n                      {item.question_type === \"2\"\r\n                        ? \"请选择以下选项 (多选)\"\r\n                        : \"\"}\r\n                      {item.question_type === \"3\"\r\n                        ? \"请判断本项叙述是否正确？\"\r\n                        : \"\"}\r\n                      {item.question_type === \"4\" ? \"请填写以下内容\" : \"\"}\r\n                      {item.question_type === \"5\" ? \"请简要阐述你的观点\" : \"\"}\r\n                    </div>\r\n                    {item.question_type === \"5\" ? (\r\n                      <textarea cols={21} rows={2}></textarea>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {item.question_type === \"1\" ||\r\n                    item.question_type === \"2\" ? (\r\n                        <ul className=\"preview-option\">\r\n                          {[1, 2, 3, 4].map((option) => (\r\n                            <li\r\n                              key={option}\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                padding: \"3px 0\",\r\n                              }}\r\n                            >\r\n                              <input\r\n                                style={{ marginRight: 5 }}\r\n                                readOnly\r\n                                disabled\r\n                                type={\r\n                                  item.question_type === \"2\"\r\n                                    ? \"checkbox\"\r\n                                    : \"radio\"\r\n                                }\r\n                              />\r\n                              <span>{`选项${option}`}</span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    {item.question_type === \"3\" ? (\r\n                      <ul className=\"preview-option\">\r\n                        {[\"是\", \"否\"].map((option) => (\r\n                          <li\r\n                            key={option}\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              padding: \"3px 0\",\r\n                            }}\r\n                          >\r\n                            <input\r\n                              style={{ marginRight: 5 }}\r\n                              readOnly\r\n                              disabled\r\n                              type={\"radio\"}\r\n                            />\r\n                            <span>{`${option}`}</span>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {item.question_type === \"4\" ? (\r\n                      <ul className=\"preview-option\">\r\n                        {[1, 2].map((option) => (\r\n                          <li\r\n                            key={option}\r\n                            style={{\r\n                              display: \"block\",\r\n                              alignItems: \"center\",\r\n                              padding: \"3px 0\",\r\n                            }}\r\n                          >\r\n                            <span>{`填空${option}`}</span>\r\n                            <input\r\n                              type=\"text\"\r\n                              readOnly\r\n                              disabled\r\n                              style={{\r\n                                border: \"1px solid #ccc\",\r\n                                display: \"block\",\r\n                              }}\r\n                            />\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                }\r\n              >\r\n                <span\r\n                  className=\"iconfont icon-chakan\"\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    width: 30,\r\n                    textAlign: \"center\",\r\n                    fontSize: 20,\r\n                    top: \"50%\",\r\n                    transform: \"translateY(-50%)\",\r\n                    right: -60,\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                ></span>\r\n              </Popover>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* <div className=\"list-title\">信息题</div>\r\n        <div className=\"list-content\">\r\n          {msgList.map((item) => (\r\n            <Button\r\n              key={item.icon}\r\n              size=\"small\"\r\n              style={{ width: \"110px\", height: \"30px\", fontSize: \"14px\" }}\r\n            >\r\n              <i\r\n                style={{ fontStyle: \"normal\" }}\r\n                className={`iconfont ${item.icon}`}\r\n              ></i>\r\n              <span className=\"itemName\">{item.name}</span>\r\n            </Button>\r\n          ))}\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(QuestionTypeList);\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { Component } from \"react\";\r\n// import \"./index.css\";\r\nimport {\r\n  Input,\r\n  Empty,\r\n  Collapse,\r\n  Modal,\r\n  message,\r\n  Popover,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport { CaretRightOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addNewType,\r\n  copyFromStore,\r\n  getQuesStore,\r\n  updateStoreList,\r\n} from \"../../../apis/examEdit\";\r\nimport { getTypeName } from \"../../../views/examination\";\r\nimport action from \"../../../store/actions\";\r\ninterface IProps {\r\n  login_id?: number;\r\n  typeList?: IStoreTypeItem[];\r\n  question_store?: IQuestionOriginItem[];\r\n  init: (backToList?: () => void) => void;\r\n  exam_id?: number;\r\n  scrollToBottom?: () => void;\r\n}\r\ninterface IWindowQuestion extends IQuesData {\r\n  isShow: boolean;\r\n}\r\nexport interface IWindowStoreTypeItem extends IStoreTypeItem {\r\n  isEdit: boolean;\r\n  question_list: IWindowQuestion[];\r\n}\r\ninterface IState {\r\n  question_store: IQuestionOriginItem[];\r\n  newTypeState: boolean;\r\n  newTypeName: string;\r\n  manageState: boolean;\r\n  keywords: string;\r\n  searchResult: IQuesData[];\r\n  focusIndex: number;\r\n  storeWindowList: IWindowStoreTypeItem[];\r\n  // store_type: IStoreTypeItem[];\r\n  // common_store:object[]\r\n}\r\nclass QuestionStore extends Component<IProps, IState> {\r\n  state = {\r\n    question_store: [],\r\n    // store_type: [],\r\n    // common_store:[]\r\n    newTypeState: false,\r\n    newTypeName: \"\",\r\n    manageState: false,\r\n    keywords: \"\",\r\n    searchResult: [],\r\n    focusIndex: 0,\r\n    storeWindowList: [],\r\n  };\r\n  setStoreData = async () => {\r\n    const { login_id = -1 } = this.props;\r\n    const response: IStoreResponse = await getQuesStore({\r\n      creator_id: login_id,\r\n    });\r\n    const { question_store } = response;\r\n    this.setState({ question_store });\r\n  };\r\n  get reduceStoreData() {\r\n    const { question_store = [] } = this.props;\r\n    // const question_store: IQuestionOriginItem[]  = this.state.question_store;\r\n    const {\r\n      // login_id,\r\n      typeList = [],\r\n    } = this.props;\r\n    if (typeList.length > 0) {\r\n      const temp = typeList.map((type: IStoreTypeItem) => ({\r\n        ...type,\r\n        question_list: question_store\r\n          .filter((item: IQuestionOriginItem) => +item.store_type === type.id)\r\n          .map((item: IQuestionOriginItem) => {\r\n            const {\r\n              id,\r\n              creator_id,\r\n              question_name,\r\n              question_image,\r\n              question_score,\r\n              question_type,\r\n              store_type,\r\n              answer,\r\n            } = item;\r\n            return {\r\n              id,\r\n              creator_id,\r\n              question_name,\r\n              question_image,\r\n              question_score,\r\n              question_type,\r\n              store_type,\r\n              answer,\r\n              option_list: Object.keys(item)\r\n                .filter(\r\n                  (key) =>\r\n                    key.indexOf(\"option\") !== -1 && key.indexOf(\"image\") === -1\r\n                )\r\n                .map((key: string, index: number) => ({\r\n                  [`option${index + 1}`]: item[key],\r\n                }))\r\n                .filter((option) => Object.values(option)[0]),\r\n            };\r\n          }),\r\n      }));\r\n      return temp;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  getTypeName = getTypeName;\r\n  seachStore = (e: { target: { value: string } }) => {\r\n    const { reduceStoreData } = this;\r\n    this.setState({ keywords: e.target.value }, () => {\r\n      const result: IQuesData[] = [];\r\n      const { keywords } = this.state;\r\n      reduceStoreData.reduce((prev, next) => {\r\n        next.question_list.forEach((item) => {\r\n          if (item.question_name.indexOf(keywords) !== -1) prev.push(item);\r\n        });\r\n        return prev;\r\n      }, result);\r\n      this.setState({\r\n        searchResult: result,\r\n      });\r\n    });\r\n  };\r\n  throttling = (callback: () => void, wait: number) => {\r\n    if (!this.timer) {\r\n      this.timer = setTimeout(() => {\r\n        callback();\r\n        this.timer = null;\r\n      }, wait);\r\n    }\r\n  };\r\n  timer: NodeJS.Timeout | null = null;\r\n  componentDidMount() {\r\n    this.setStoreData();\r\n  }\r\n  render() {\r\n    const { reduceStoreData, seachStore } = this;\r\n    const {\r\n      newTypeState,\r\n      newTypeName,\r\n      manageState,\r\n      keywords,\r\n      searchResult,\r\n      focusIndex,\r\n    } = this.state;\r\n    const storeWindowList: IWindowStoreTypeItem[] = this.state.storeWindowList;\r\n    const { exam_id = -1 } = this.props;\r\n    const { Panel } = Collapse;\r\n    // const storeWindowList = JSON.parse(JSON.stringify(reduceStoreData));\r\n    return (\r\n      <div className=\"question-store\">\r\n        <div className=\"seach-in-store\">\r\n          <Input\r\n            placeholder=\"搜索题目\"\r\n            value={keywords}\r\n            onChange={seachStore}\r\n            style={{\r\n              background:\r\n                \"url(http://192.168.5.104:5008/img/search-icon.png) 8px 8px / 18px 18px no-repeat white\",\r\n              paddingLeft: 30,\r\n              height: 35,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"store-module person\">\r\n          <h2>个人题库</h2>\r\n          <div className=\"operation\">\r\n            <span\r\n              className=\"new-store\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                this.setState({ newTypeState: true });\r\n              }}\r\n            >\r\n              新建分类\r\n            </span>\r\n            <Modal\r\n              title=\"新建题库分类\"\r\n              visible={newTypeState}\r\n              centered\r\n              cancelText=\"取消\"\r\n              okText=\"确定\"\r\n              onOk={async () => {\r\n                const { login_id = -1 } = this.props;\r\n                const addRes = await addNewType({\r\n                  type_name: newTypeName,\r\n                  creator_id: login_id,\r\n                });\r\n                // console.log(addRes);\r\n                if (addRes.code === \"1001\") {\r\n                  this.setState({ newTypeState: false });\r\n                  this.props.init();\r\n                } else if (addRes.code === \"1002\") {\r\n                  message.warning(addRes.msg);\r\n                }\r\n              }}\r\n              onCancel={() => {\r\n                this.setState({ newTypeState: false });\r\n              }}\r\n            >\r\n              <p>\r\n                分类名称<span style={{ color: \"red\" }}>*</span>\r\n              </p>\r\n              <Input\r\n                showCount\r\n                maxLength={10}\r\n                onChange={(e) => {\r\n                  this.setState({ newTypeName: e.currentTarget.value });\r\n                }}\r\n              ></Input>\r\n            </Modal>\r\n            <span\r\n              className=\"store-manage\"\r\n              // style={{ cursor: \"not-allowed\" }}\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  manageState: true,\r\n                  focusIndex: 0,\r\n                  storeWindowList: this.reduceStoreData.map((item) => ({\r\n                    ...item,\r\n                    isEdit: false,\r\n                    question_list: item.question_list.map((item) => ({\r\n                      ...item,\r\n                      isShow: false,\r\n                    })),\r\n                  })),\r\n                });\r\n              }}\r\n            >\r\n              管理\r\n            </span>\r\n            <Modal\r\n              style={{ minWidth: 900 }}\r\n              bodyStyle={\r\n                storeWindowList.length > 0\r\n                  ? { minHeight: 500, padding: 0 }\r\n                  : {\r\n                    minHeight: 500,\r\n                    padding: 0,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }\r\n              }\r\n              title={\r\n                <p style={{ marginBottom: 0 }}>\r\n                  <span>个人题库</span>\r\n                </p>\r\n              }\r\n              visible={manageState}\r\n              centered\r\n              maskClosable={false}\r\n              cancelText=\"取消\"\r\n              okText=\"保存\"\r\n              onOk={async () => {\r\n                const { login_id = -1 } = this.props;\r\n                // console.log(storeWindowList);\r\n                const updateRes = await updateStoreList({\r\n                  creator_id: login_id,\r\n                  storeWindowList,\r\n                });\r\n                // console.log(updateRes.code);\r\n                if (updateRes.code === \"1001\") {\r\n                  this.setStoreData();\r\n                }\r\n                this.setState({ manageState: false });\r\n              }}\r\n              onCancel={() => {\r\n                this.setState({ manageState: false });\r\n              }}\r\n            >\r\n              {storeWindowList.length > 0 ? (\r\n                <div className=\"store-manage-window\">\r\n                  <div className=\"store-type-list\">\r\n                    <ul>\r\n                      {storeWindowList.map(\r\n                        (item: IWindowStoreTypeItem, index: number) => (\r\n                          <li\r\n                            key={item.id}\r\n                            className={focusIndex === index ? \"focus\" : \"\"}\r\n                            onClick={() => {\r\n                              this.setState({ focusIndex: index });\r\n                            }}\r\n                          >\r\n                            {item.isEdit ? (\r\n                              <Input\r\n                                size=\"small\"\r\n                                value={item.type_name}\r\n                                onChange={(e) => {\r\n                                  item.type_name = e.currentTarget.value;\r\n                                  this.setState({ storeWindowList });\r\n                                }}\r\n                                autoFocus={true}\r\n                                onBlur={() => {\r\n                                  storeWindowList[index].isEdit = false;\r\n                                  this.setState({ storeWindowList });\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <>\r\n                                <span className=\"store-name\">\r\n                                  {item.type_name}\r\n                                </span>\r\n                                <span className=\"store-count\">\r\n                                  {item.question_list?.length}\r\n                                </span>\r\n                                <Popover\r\n                                  placement=\"right\"\r\n                                  overlayInnerStyle={{ padding: 0 }}\r\n                                  overlayClassName=\"store-manage-window-type-operation\"\r\n                                  content={\r\n                                    <ul\r\n                                      className=\"store-manage-window-type-operation-list\"\r\n                                      style={{ marginBottom: 0 }}\r\n                                    >\r\n                                      <li\r\n                                        onClick={() => {\r\n                                          item.isEdit = true;\r\n                                          this.setState({ storeWindowList });\r\n                                        }}\r\n                                      >\r\n                                        重命名\r\n                                      </li>\r\n                                      <Popconfirm\r\n                                        placement=\"right\"\r\n                                        title=\"删除后将删除分组内所有题目\"\r\n                                        onConfirm={() => {\r\n                                          storeWindowList.splice(index, 1);\r\n                                          this.setState({ storeWindowList });\r\n                                        }}\r\n                                        okText=\"确定\"\r\n                                        cancelText=\"取消\"\r\n                                      >\r\n                                        <li>删除</li>\r\n                                      </Popconfirm>\r\n                                    </ul>\r\n                                  }\r\n                                  trigger=\"hover\"\r\n                                >\r\n                                  <span className=\"store-operation iconfont icon-more\"></span>\r\n                                </Popover>\r\n                              </>\r\n                            )}\r\n                          </li>\r\n                        )\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      storeWindowList[focusIndex].question_list.length > 0\r\n                        ? \"store-question-list\"\r\n                        : \"store-question-list empty\"\r\n                    }\r\n                  >\r\n                    {storeWindowList[focusIndex].question_list.length > 0 ? (\r\n                      <ul>\r\n                        {storeWindowList[focusIndex].question_list?.map(\r\n                          (item: IWindowQuestion, index: number) => (\r\n                            <li key={item.id} className=\"question-item\">\r\n                              <div className=\"question-type\">\r\n                                {getTypeName(item.question_type)}\r\n                              </div>\r\n                              <div className=\"question-name\">\r\n                                {item.question_name}\r\n                              </div>\r\n                              {item.isShow ? (\r\n                                <div\r\n                                  className=\"option\"\r\n                                  style={\r\n                                    item.question_type === \"4\" ||\r\n                                    item.question_type === \"5\"\r\n                                      ? { paddingLeft: 0, marginTop: 10 }\r\n                                      : { marginTop: 18 }\r\n                                  }\r\n                                >\r\n                                  {item.question_type === \"1\" ||\r\n                                  item.question_type === \"2\" ||\r\n                                  item.question_type === \"3\" ? (\r\n                                      item.option_list.map((option, index) => (\r\n                                        <p key={index}>\r\n                                          <input\r\n                                            type={\r\n                                              item.question_type === \"2\"\r\n                                                ? \"checkbox\"\r\n                                                : \"radio\"\r\n                                            }\r\n                                            disabled\r\n                                            readOnly\r\n                                            style={{ marginRight: 10 }}\r\n                                          />\r\n                                          <span>\r\n                                            {option[`option${index + 1}`]}\r\n                                          </span>\r\n                                          {item.question_type !== \"2\" &&\r\n                                        item.answer === `${index}` ? (\r\n                                              <span\r\n                                                style={{\r\n                                                  paddingLeft: 10,\r\n                                                  color: \"#00bf6f\",\r\n                                                }}\r\n                                              >\r\n                                            (正确答案)\r\n                                              </span>\r\n                                            ) : (\r\n                                              \"\"\r\n                                            )}\r\n                                          {item.question_type === \"2\" &&\r\n                                        item.answer.indexOf(`${index}`) !==\r\n                                          -1 ? (\r\n                                              <span\r\n                                                style={{\r\n                                                  paddingLeft: 10,\r\n                                                  color: \"#00bf6f\",\r\n                                                }}\r\n                                              >\r\n                                            (正确答案)\r\n                                              </span>\r\n                                            ) : (\r\n                                              \"\"\r\n                                            )}\r\n                                        </p>\r\n                                      ))\r\n                                    ) : item.question_type === \"4\" ? (\r\n                                      item.option_list.map((option, index) => (\r\n                                        <p\r\n                                          key={index}\r\n                                          style={{\r\n                                            flexDirection: \"column\",\r\n                                            alignItems: \"flex-start\",\r\n                                          }}\r\n                                        >\r\n                                          <span style={{ paddingLeft: 10 }}>\r\n                                            {option[`option${index + 1}`]}\r\n                                          </span>\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            style={{\r\n                                              border: \"1px solid #eaeaea\",\r\n                                              display: \"block\",\r\n                                              margin: \"5px 0 0\",\r\n                                            }}\r\n                                          />\r\n                                        </p>\r\n                                      ))\r\n                                    ) : item.question_type === \"5\" ? (\r\n                                      <p>\r\n                                        <textarea\r\n                                          name=\"\"\r\n                                          id=\"\"\r\n                                          cols={21}\r\n                                          rows={2}\r\n                                        ></textarea>\r\n                                      </p>\r\n                                    ) : (\r\n                                      <></>\r\n                                    )}\r\n                                </div>\r\n                              ) : (\r\n                                \"\"\r\n                              )}\r\n                              <div\r\n                                className=\"show-flag hidden\"\r\n                                onClick={() => {\r\n                                  item.isShow = !item.isShow;\r\n                                  this.setState({ storeWindowList });\r\n                                }}\r\n                              >\r\n                                <span style={{ cursor: \"pointer\" }}>\r\n                                  {item.isShow ? \"收起全部\" : \"展开全部\"}\r\n                                </span>\r\n                                <span\r\n                                  className={\r\n                                    item.isShow\r\n                                      ? \"iconfont icon-paixu-shang\"\r\n                                      : \"iconfont icon-paixu-xia\"\r\n                                  }\r\n                                ></span>\r\n                              </div>\r\n                              <span\r\n                                className=\"iconfont icon-shanchu\"\r\n                                onClick={() => {\r\n                                  storeWindowList[\r\n                                    focusIndex\r\n                                  ].question_list.splice(index, 1);\r\n                                  this.setState({ storeWindowList });\r\n                                }}\r\n                              ></span>\r\n                            </li>\r\n                          )\r\n                        )}\r\n                      </ul>\r\n                    ) : (\r\n                      <Empty description=\"暂无内容\" />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <Empty description=\"暂无内容\" />\r\n              )}\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n        <div className=\"store-list-module person\">\r\n          {keywords ? (\r\n            <>\r\n              {searchResult.length > 0 ? (\r\n                <ul>\r\n                  {searchResult.map((result: IQuesData) => (\r\n                    <li\r\n                      className=\"question-item-search\"\r\n                      key={result.id}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        padding: \"2px 2px 2px 10px\",\r\n                      }}\r\n                    >\r\n                      <span\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={async (e) => {\r\n                          e.stopPropagation();\r\n                          const copyRes = await copyFromStore({\r\n                            exam_id,\r\n                            id: result.id ? result.id : -1,\r\n                          });\r\n                          // console.log(copyRes);\r\n                          if (copyRes.code === \"1001\") {\r\n                            this.props.init(() => {\r\n                              if (this.props.scrollToBottom) {\r\n                                this.props.scrollToBottom();\r\n                              }\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {result.question_name.indexOf(keywords) === 0 ? (\r\n                          <>\r\n                            <span className=\"highLight\">{keywords}</span>\r\n                            <span>\r\n                              {result.question_name.replace(keywords, ``)}\r\n                            </span>\r\n                          </>\r\n                        ) : result.question_name.indexOf(keywords) +\r\n                            keywords.length >=\r\n                          result.question_name.length ? (\r\n                            <>\r\n                              <span>\r\n                                {result.question_name.replace(keywords, ``)}\r\n                              </span>\r\n                              <span className=\"highLight\">{keywords}</span>\r\n                            </>\r\n                          ) : (\r\n                            <>\r\n                              {result.question_name.split(keywords)[0]}\r\n                              <span className=\"highLight\">{keywords}</span>\r\n                              {\r\n                                result.question_name.split(keywords)[\r\n                                  result.question_name.split(keywords).length - 1\r\n                                ]\r\n                              }\r\n                            </>\r\n                          )}\r\n                      </span>\r\n                      <Popover\r\n                        placement=\"right\"\r\n                        trigger=\"hover\"\r\n                        overlayClassName=\"store-question-preview\"\r\n                        content={\r\n                          <div className=\"preview-question\">\r\n                            <div className=\"preview-title\">\r\n                              {result.question_name}\r\n                            </div>\r\n                            {result.question_type === \"5\" ? (\r\n                              <textarea cols={21} rows={2}></textarea>\r\n                            ) : (\r\n                              <ul className=\"preview-option\">\r\n                                {result.option_list.map((option, index) => (\r\n                                  <li\r\n                                    key={index}\r\n                                    style={{\r\n                                      display: `${\r\n                                        result.question_type !== \"4\"\r\n                                          ? \"flex\"\r\n                                          : \"block\"\r\n                                      }`,\r\n                                      alignItems: \"center\",\r\n                                      padding: \"3px 0\",\r\n                                    }}\r\n                                  >\r\n                                    {result.question_type === \"1\" ||\r\n                                    result.question_type === \"2\" ||\r\n                                    result.question_type === \"3\" ? (\r\n                                        <>\r\n                                          <input\r\n                                            style={{ marginRight: 5 }}\r\n                                            readOnly\r\n                                            disabled\r\n                                            type={\r\n                                              result.question_type === \"2\"\r\n                                                ? \"checkbox\"\r\n                                                : \"radio\"\r\n                                            }\r\n                                          />\r\n                                          <span>\r\n                                            {option[`option${index + 1}`]}\r\n                                          </span>\r\n                                          {index === +result.answer ||\r\n                                        result.answer.indexOf(`${index}`) !==\r\n                                          -1 ? (\r\n                                              <span\r\n                                                style={{\r\n                                                  color: \"rgb(0, 191, 111)\",\r\n                                                  fontSize: 12,\r\n                                                  paddingLeft: 5,\r\n                                                }}\r\n                                              >\r\n                                            （正确答案）\r\n                                              </span>\r\n                                            ) : (\r\n                                              \"\"\r\n                                            )}\r\n                                        </>\r\n                                      ) : (\r\n                                        \"\"\r\n                                      )}\r\n                                    {result.question_type === \"4\" ? (\r\n                                      <>\r\n                                        <span>\r\n                                          {option[`option${index + 1}`]}\r\n                                        </span>\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          readOnly\r\n                                          disabled\r\n                                          style={{\r\n                                            border: \"1px solid #ccc\",\r\n                                            display: \"block\",\r\n                                          }}\r\n                                        />\r\n                                      </>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            )}\r\n                          </div>\r\n                        }\r\n                      >\r\n                        <span\r\n                          className=\"view iconfont icon-chakan\"\r\n                          style={{ cursor: \"pointer\" }}\r\n                        ></span>\r\n                      </Popover>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <Empty description=\"暂无搜索内容，可以换个词试试\" />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {reduceStoreData.length > 0 ? (\r\n                <Collapse\r\n                  bordered={false}\r\n                  // defaultActiveKey={[\"1\"]}\r\n                  expandIcon={({ isActive }) => (\r\n                    <CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n                  )}\r\n                  className=\"site-collapse-custom-collapse\"\r\n                >\r\n                  {reduceStoreData.map((store_type) => (\r\n                    <Panel\r\n                      key={store_type.id}\r\n                      header={store_type.type_name}\r\n                      extra={<span>{store_type.question_list.length}</span>}\r\n                      className=\"site-collapse-custom-panel\"\r\n                    >\r\n                      <div className=\"store-question-list\">\r\n                        {store_type.question_list.map((question) => (\r\n                          <div\r\n                            style={{ cursor: \"auto\" }}\r\n                            className=\"question-item\"\r\n                            key={question.id}\r\n                          >\r\n                            <span\r\n                              style={{ cursor: \"pointer\" }}\r\n                              onClick={async (e) => {\r\n                                e.stopPropagation();\r\n                                const copyRes = await copyFromStore({\r\n                                  exam_id,\r\n                                  id: question.id,\r\n                                });\r\n                                // console.log(copyRes);\r\n                                if (copyRes.code === \"1001\") {\r\n                                  this.props.init(() => {\r\n                                    if (this.props.scrollToBottom) {\r\n                                      this.props.scrollToBottom();\r\n                                    }\r\n                                  });\r\n                                }\r\n                              }}\r\n                            >\r\n                              {question.question_name}\r\n                            </span>\r\n                            <Popover\r\n                              placement=\"right\"\r\n                              trigger=\"hover\"\r\n                              overlayClassName=\"store-question-preview\"\r\n                              content={\r\n                                <div className=\"preview-question\">\r\n                                  <div className=\"preview-title\">\r\n                                    {question.question_name}\r\n                                  </div>\r\n                                  {question.question_type === \"5\" ? (\r\n                                    <textarea cols={21} rows={2}></textarea>\r\n                                  ) : (\r\n                                    <ul className=\"preview-option\">\r\n                                      {question.option_list.map(\r\n                                        (option, index) => (\r\n                                          <li\r\n                                            key={index}\r\n                                            style={{\r\n                                              display: `${\r\n                                                question.question_type !== \"4\"\r\n                                                  ? \"flex\"\r\n                                                  : \"block\"\r\n                                              }`,\r\n                                              alignItems: \"center\",\r\n                                              padding: \"3px 0\",\r\n                                            }}\r\n                                          >\r\n                                            {question.question_type === \"1\" ||\r\n                                            question.question_type === \"2\" ||\r\n                                            question.question_type === \"3\" ? (\r\n                                                <>\r\n                                                  <input\r\n                                                    style={{ marginRight: 5 }}\r\n                                                    readOnly\r\n                                                    disabled\r\n                                                    type={\r\n                                                      question.question_type ===\r\n                                                    \"2\"\r\n                                                        ? \"checkbox\"\r\n                                                        : \"radio\"\r\n                                                    }\r\n                                                  />\r\n                                                  <span>\r\n                                                    {option[`option${index + 1}`]}\r\n                                                  </span>\r\n                                                  {index === +question.answer ||\r\n                                                question.answer.indexOf(\r\n                                                  `${index}`\r\n                                                ) !== -1 ? (\r\n                                                      <span\r\n                                                        style={{\r\n                                                          color: \"rgb(0, 191, 111)\",\r\n                                                          fontSize: 12,\r\n                                                          paddingLeft: 5,\r\n                                                        }}\r\n                                                      >\r\n                                                    （正确答案）\r\n                                                      </span>\r\n                                                    ) : (\r\n                                                      \"\"\r\n                                                    )}\r\n                                                </>\r\n                                              ) : (\r\n                                                \"\"\r\n                                              )}\r\n                                            {question.question_type === \"4\" ? (\r\n                                              <>\r\n                                                <span>\r\n                                                  {option[`option${index + 1}`]}\r\n                                                </span>\r\n                                                <input\r\n                                                  type=\"text\"\r\n                                                  readOnly\r\n                                                  disabled\r\n                                                  style={{\r\n                                                    border: \"1px solid #ccc\",\r\n                                                    display: \"block\",\r\n                                                  }}\r\n                                                />\r\n                                              </>\r\n                                            ) : (\r\n                                              \"\"\r\n                                            )}\r\n                                          </li>\r\n                                        )\r\n                                      )}\r\n                                    </ul>\r\n                                  )}\r\n                                </div>\r\n                              }\r\n                            >\r\n                              <span\r\n                                className=\"view iconfont icon-chakan\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                              ></span>\r\n                            </Popover>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </Panel>\r\n                  ))}\r\n                </Collapse>\r\n              ) : (\r\n                <Empty description=\"暂无内容\" />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(QuestionStore);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport action from \"../../../store/actions\";\r\n\r\ninterface IProps {\r\n  questionList?: IQuesData[];\r\n  scrollToActiveQues?: (index: number) => void;\r\n}\r\n\r\nclass ExamOutline extends Component<IProps> {\r\n  render() {\r\n    const { questionList, scrollToActiveQues } = this.props;\r\n    return (\r\n      <div className=\"outline\">\r\n        <ul>\r\n          {questionList?.map((item, index: number) => (\r\n            <li\r\n              key={item.id}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                scrollToActiveQues ? scrollToActiveQues(index) : \"\";\r\n              }}\r\n            >{`${index + 1}. ${item.question_name}`}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(ExamOutline);\r\n","import React, { Component } from \"react\";\r\nimport \"./index.less\";\r\nimport QuestionTypeList from \"./children/question-type-list\";\r\nimport QuestionStore from \"./children/question-store\";\r\nimport ExamOutline from \"./children/exam-outline\";\r\ninterface IProps {\r\n  init: (backToList?: () => void) => void;\r\n  // [key: string]: string;\r\n}\r\ninterface IState {\r\n  activeTab: number;\r\n  tabList: string[];\r\n}\r\nexport default class ExamLeftNav extends Component<IProps, IState> {\r\n  state = {\r\n    activeTab: 0,\r\n    tabList: [\"题型\", \"题库\", \"大纲\"],\r\n  };\r\n  changeTab = (index: number) => {\r\n    this.setState({ activeTab: index });\r\n  };\r\n  get navBody() {\r\n    const { activeTab } = this.state;\r\n    switch (activeTab) {\r\n    case 0:\r\n      return <QuestionTypeList />;\r\n    case 1:\r\n      return <QuestionStore init={this.props.init} />;\r\n    case 2:\r\n      return <ExamOutline />;\r\n    default:\r\n      <QuestionTypeList />;\r\n    }\r\n  }\r\n  render() {\r\n    const { activeTab, tabList } = this.state;\r\n    const { changeTab, navBody } = this;\r\n    return (\r\n      <div className=\"left-nav-box\">\r\n        <div className=\"tab-nav\">\r\n          {tabList.map((item, index) => (\r\n            <span\r\n              key={index}\r\n              className={index === activeTab ? \"active\" : \"\"}\r\n              onClick={() => {\r\n                changeTab(index);\r\n              }}\r\n            >\r\n              {item}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div className=\"nav-body\">{navBody}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./index.less\";\r\nimport { Select, InputNumber, Switch, Checkbox } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n// import { IQuesData } from \"../../views/examination\";\r\nimport {\r\n  changeQuestionType,\r\n  changeQuestionScore,\r\n  changeQuestionAnswer,\r\n} from \"../../apis/examEdit\";\r\nimport action from \"../../store/actions\";\r\ninterface IProps {\r\n  exam_id?: number;\r\n  question_focus?: number;\r\n  ques_type?: string;\r\n  setQuesType: (payload: { ques_type: string }) => void;\r\n  setFocusMsg: (payload: IFocusQuestion) => void;\r\n  changeShowSerial?: (payload: { showSerial: boolean }) => void;\r\n  init: () => void;\r\n  focusMSG?: {\r\n    id: number;\r\n    question_name?: string;\r\n    question_type?: string;\r\n    question_score?: number;\r\n    answer?: string;\r\n    option_list: IOptionItem[];\r\n  };\r\n  showSerial?: boolean;\r\n}\r\ninterface IState {\r\n  typeList: string[];\r\n}\r\nclass ExamRightNav extends Component<IProps, IState> {\r\n  state = {\r\n    typeList: [\"单选题\", \"多选题\", \"判断题\", \"多项填空\", \"简答题\"],\r\n  };\r\n  changeType = async (ques_type: string) => {\r\n    const { focusMSG, setQuesType, init, setFocusMsg, exam_id } = this.props;\r\n    const { getType } = this;\r\n    setQuesType({ ques_type });\r\n    const changeTypeRes = await changeQuestionType({\r\n      exam_id: exam_id ? exam_id : -1,\r\n      id: focusMSG ? (focusMSG.id ? focusMSG.id : -1) : -1,\r\n      type: getType(ques_type),\r\n    });\r\n    // console.log(changeTypeRes);\r\n    if (changeTypeRes.code === \"1001\") {\r\n      const option_list = focusMSG?.option_list || [];\r\n      setFocusMsg({\r\n        ...focusMSG,\r\n        id: focusMSG?.id ? focusMSG?.id : -1,\r\n        option_list,\r\n        question_type: getType(ques_type),\r\n        answer:\r\n          getType(ques_type) === \"1\" ||\r\n          getType(ques_type) === \"2\" ||\r\n          getType(ques_type) === \"3\"\r\n            ? \"0\"\r\n            : \"\",\r\n      });\r\n      init();\r\n    }\r\n  };\r\n  changeScore = async (question_score: number) => {\r\n    const { setFocusMsg, focusMSG, exam_id } = this.props;\r\n    setFocusMsg({\r\n      ...focusMSG,\r\n      id: focusMSG?.id ? focusMSG.id : -1,\r\n      option_list: focusMSG?.option_list ? focusMSG?.option_list : [],\r\n      question_score,\r\n    });\r\n    this.debounce(async () => {\r\n      await changeQuestionScore({\r\n        exam_id: exam_id ? exam_id : -1,\r\n        id: focusMSG?.id ? focusMSG.id : -1,\r\n        score: question_score,\r\n      });\r\n    }, 300);\r\n  };\r\n  changeShowSerial = (showSerial: boolean) => {\r\n    this.props.changeShowSerial\r\n      ? this.props.changeShowSerial({ showSerial })\r\n      : \"\";\r\n  };\r\n  getType = (type: string) => {\r\n    switch (type) {\r\n    case \"单选题\":\r\n      return \"1\";\r\n    case \"多选题\":\r\n      return \"2\";\r\n    case \"判断题\":\r\n      return \"3\";\r\n    case \"多项填空\":\r\n      return \"4\";\r\n    case \"简答题\":\r\n      return \"5\";\r\n    default:\r\n      return \"1\";\r\n    }\r\n  };\r\n  timer: NodeJS.Timeout | null = null;\r\n  debounce = (callback: () => void, time: number) => {\r\n    // console.log(this.timer);\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n    }\r\n    this.timer = setTimeout(() => {\r\n      callback();\r\n    }, time);\r\n  };\r\n  render() {\r\n    const { Option } = Select;\r\n    const { typeList } = this.state;\r\n    const { changeType, changeScore, changeShowSerial } = this;\r\n    const {\r\n      ques_type,\r\n      question_focus,\r\n      focusMSG,\r\n      exam_id,\r\n      setFocusMsg,\r\n      init,\r\n      showSerial,\r\n    } = this.props;\r\n    const indexType = \"ABCDEFGHIJ\";\r\n    const option_list = focusMSG?.option_list\r\n      ? focusMSG?.option_list.filter((item) => !!item.option_name)\r\n      : [];\r\n    // console.log(focusMSG);\r\n    return (\r\n      <div className=\"exam-right-box\">\r\n        <div className=\"title\" style={{ borderBottom: \"1px solid #d8d8d8\" }}>\r\n          题目设置\r\n        </div>\r\n        {question_focus === -1 ? (\r\n          \"\"\r\n        ) : (\r\n          <div className=\"question-info\">\r\n            <h2 className=\"type\">{ques_type}</h2>\r\n            <p className=\"set\">整题设置</p>\r\n            <div className=\"changeType\">\r\n              <span>切换题型</span>\r\n              <Select\r\n                style={{ width: 100, float: \"right\" }}\r\n                onChange={changeType}\r\n                value={ques_type}\r\n                size=\"small\"\r\n              >\r\n                {typeList.map((item, index) => (\r\n                  <Option value={item} key={index}>\r\n                    {item}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            {ques_type === \"单选题\" ||\r\n            ques_type === \"多选题\" ||\r\n            ques_type === \"判断题\" ? (\r\n                <div className=\"answer\">\r\n                  <p>答案</p>\r\n                  <div className=\"answer-option\">\r\n                    {ques_type === \"单选题\" || ques_type === \"判断题\" ? (\r\n                      <Select\r\n                        size=\"small\"\r\n                        value={focusMSG?.answer}\r\n                        // defaultValue=\"A.选项1\"\r\n                        onChange={async (value) => {\r\n                          const changeAnswerRes = await changeQuestionAnswer({\r\n                            exam_id: exam_id ? exam_id : -1,\r\n                            id: focusMSG ? (focusMSG.id ? focusMSG.id : -1) : -1,\r\n                            answer: value,\r\n                          });\r\n                          if (changeAnswerRes.code === \"1001\") {\r\n                            setFocusMsg({\r\n                              ...focusMSG,\r\n                              id: focusMSG?.id ? focusMSG?.id : -1,\r\n                              option_list: focusMSG?.option_list\r\n                                ? focusMSG?.option_list\r\n                                : [],\r\n                              answer: changeAnswerRes.answer,\r\n                            });\r\n                            init();\r\n                          }\r\n                        }}\r\n                        style={{ width: 223 }}\r\n                      >\r\n                        {option_list.length > 0 ? (\r\n                          option_list.map((item, index: number) => (\r\n                            <Option\r\n                              value={`${index}`}\r\n                              key={`${index}_${item.option_name}`}\r\n                            >\r\n                              {`${showSerial ? `${indexType[index]}.` : \"\"}${\r\n                                item.option_name\r\n                              }`}\r\n                            </Option>\r\n                          ))\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Select>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    {ques_type === \"多选题\" ? (\r\n                      <>\r\n                        {option_list.length > 0 ? (\r\n                          option_list.map((item, index) => (\r\n                            <div key={`${index}_${item.option_name}`}>\r\n                              <Checkbox\r\n                                checked={\r\n                                  focusMSG?.answer?.indexOf(`${index}`) !== -1\r\n                                }\r\n                                onChange={async () => {\r\n                                  const answerArr = focusMSG?.answer?.split(\",\");\r\n                                  const i = answerArr\r\n                                    ? answerArr.indexOf(`${index}`)\r\n                                    : -1;\r\n                                  // console.log(answerArr?[i]);\r\n                                  // answerArr[i]\r\n                                  if (i === -1) {\r\n                                    answerArr?.push(`${index}`);\r\n                                  } else {\r\n                                    answerArr?.splice(i, 1);\r\n                                  }\r\n                                  // answerArr?.sort((a, b) => +a - +b).join(\",\");\r\n                                  // .concat(`${index}`);\r\n                                  // console.log();\r\n                                  const changeAnswerRes =\r\n                                  await changeQuestionAnswer({\r\n                                    exam_id: exam_id ? exam_id : -1,\r\n                                    id: focusMSG\r\n                                      ? focusMSG.id\r\n                                        ? focusMSG.id\r\n                                        : -1\r\n                                      : -1,\r\n                                    answer: answerArr\r\n                                      ? answerArr\r\n                                        .sort((a, b) => +a - +b)\r\n                                        .join(\",\")\r\n                                      : \"0\",\r\n                                  });\r\n                                  if (changeAnswerRes.code === \"1001\") {\r\n                                    setFocusMsg({\r\n                                      ...focusMSG,\r\n                                      id: focusMSG?.id ? focusMSG?.id : -1,\r\n                                      option_list: focusMSG?.option_list\r\n                                        ? focusMSG?.option_list\r\n                                        : [],\r\n                                      answer: changeAnswerRes.answer,\r\n                                    });\r\n                                    init();\r\n                                  }\r\n                                }}\r\n                              >{`${showSerial ? `${indexType[index]}.` : \"\"}${\r\n                                  item.option_name\r\n                                }`}</Checkbox>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            <div className=\"score\">\r\n              <span>此题分值</span>\r\n              <div>\r\n                <InputNumber\r\n                  min={1}\r\n                  max={100}\r\n                  size=\"small\"\r\n                  // defaultValue={5}\r\n                  value={focusMSG?.question_score}\r\n                  style={{ width: 62, height: 26 }}\r\n                  onChange={changeScore}\r\n                />\r\n                <span className=\"padding\">分</span>\r\n              </div>\r\n            </div>\r\n            {ques_type === \"单选题\" ||\r\n            ques_type === \"多选题\" ||\r\n            ques_type === \"判断题\" ? (\r\n                <div className=\"option-type\">\r\n                  <p style={{ marginBottom: 5 }}>\r\n                    <span>选项显示序号</span>\r\n                    <Switch\r\n                      checked={showSerial}\r\n                      size=\"small\"\r\n                      onClick={changeShowSerial}\r\n                    />\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(ExamRightNav);\r\n","const canvasSupported = isCanvasSupported();\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64 to raw binary data held in a string\r\n  let byteString, mimestring;\r\n\r\n  if (dataURI.split(\",\")[0].indexOf(\"base64\") !== -1) {\r\n    byteString = atob(dataURI.split(\",\")[1]);\r\n  } else {\r\n    byteString = decodeURI(dataURI.split(\",\")[1]);\r\n  }\r\n\r\n  mimestring = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\r\n\r\n  const content = [];\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    content[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([new Uint8Array(content)], { type: mimestring });\r\n}\r\nfunction imgScale(src, scale, cbk) {\r\n  if (!src) return cbk(false);\r\n  const _canvas = document.createElement(\"canvas\");\r\n  const tImg = new Image();\r\n  tImg.onload = function () {\r\n    const _context = _canvas.getContext(\"2d\");\r\n    _canvas.width = tImg.width;\r\n    _canvas.height = tImg.height;\r\n    _context.drawImage(tImg, 0, 0);\r\n    const type = \"image/jpeg\";\r\n    src = _canvas.toDataURL(type, scale);\r\n    const blob = dataURItoBlob(src);\r\n    cbk(blob);\r\n  };\r\n  tImg.src = src;\r\n}\r\nfunction isCanvasSupported() {\r\n  const elem = document.createElement(\"canvas\");\r\n  return !!(elem.getContext && elem.getContext(\"2d\"));\r\n}\r\nexport const support = canvasSupported;\r\nexport function zip (files, opt, cbk) {\r\n  opt = opt || {};\r\n  const scale = opt.scale;\r\n  if (!canvasSupported) return cbk(files);\r\n  if (!scale || 1 == scale) return cbk(files);\r\n  let files_count = files.length,\r\n    ret = [];\r\n  for (let i = 0, j = files.length; i < j; i++) {\r\n    const fReader = new FileReader();\r\n    fReader.onload = function (e) {\r\n      const result = e.target.result;\r\n      imgScale(result, scale, function (file) {\r\n        file && ret.push(file);\r\n        files_count--;\r\n        if (files_count <= 0) cbk && cbk(ret);\r\n      });\r\n    };\r\n    fReader.readAsDataURL(files[i]);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Upload,\r\n  message,\r\n  Modal,\r\n  Popover,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  RcFile,\r\n  UploadChangeParam,\r\n  UploadFile,\r\n} from \"antd/lib/upload/interface\";\r\n// import { IQuesData } from \"../../../views/examination\";\r\nimport {\r\n  deleteQuestion,\r\n  addNewType,\r\n  addQuesToStore,\r\n  cancelCollect,\r\n  removeImage,\r\n  addOption,\r\n  removeOption,\r\n  copyFromTemp,\r\n} from \"../../../apis/examEdit\";\r\nimport * as compress from \"../../../utils/compress\";\r\nimport action from \"../../../store/actions\";\r\n\r\ninterface IProps {\r\n  exam_id?: number;\r\n  login_id?: number;\r\n  index: number;\r\n  type: string;\r\n  question_data: IQuesData;\r\n  focusMSG?: IFocusQuestion;\r\n  hiddenHolder?: IQuesData[];\r\n  setHiddenHolder?: (payload: { hiddenHolder: IQuesData[] }) => void;\r\n  setFocusMsg: (payload: {\r\n    id: number;\r\n    question_name?: string;\r\n    option_list?: Array<{ [key: string]: string }>;\r\n  }) => void;\r\n  updateQuesList?: (payload: {\r\n    id: number;\r\n    index: number;\r\n    imgUrl: string;\r\n  }) => void;\r\n  showSerial?: boolean;\r\n  typeList?: ITypeList;\r\n  setQuesFocus: (payload: { index: number }) => void;\r\n  init: (backToList?: () => void) => void;\r\n  scrollToBottom?: () => void;\r\n}\r\ninterface IState {\r\n  defaultData: IQuesData;\r\n  imageUid: string;\r\n  fileType: string;\r\n  acceptFileType: string;\r\n  modalState: boolean;\r\n  addNewTypeStatus: boolean;\r\n  newTypeName: string;\r\n  popVisi: boolean;\r\n}\r\ndeclare type BeforeUploadValueType = void | boolean | string | Blob | File;\r\ninterface IMyInfo extends UploadFile<object> {\r\n  id: number;\r\n  index: number;\r\n  code: string;\r\n}\r\nclass Choice extends Component<IProps, IState> {\r\n  state = {\r\n    defaultData: {\r\n      id: -1,\r\n      question_name: \"请选择一个选项\",\r\n      question_image: \"\",\r\n      question_type: \"\",\r\n      question_score: 5,\r\n      store_type: -1,\r\n      answer: \"0\",\r\n      option_list: [\r\n        { option_name: \"选项1\", option_image: \"\" },\r\n        { option_name: \"选项2\", option_image: \"\" },\r\n        { option_name: \"选项3\", option_image: \"\" },\r\n        { option_name: \"选项4\", option_image: \"\" },\r\n      ],\r\n    },\r\n    imageUid: \"\",\r\n    fileType: \"\",\r\n    acceptFileType: \".jpg,.jpeg,.gif,.png,.bmp,.webp\",\r\n    modalState: false,\r\n    addNewTypeStatus: false,\r\n    newTypeName: \"\",\r\n    popVisi: false,\r\n  };\r\n  handleVisibleChange = (popVisi: boolean) => {\r\n    this.setState({ popVisi });\r\n  };\r\n  addStoreAndClose = async (store_type: number) => {\r\n    const { question_data, login_id = -1, init } = this.props;\r\n    const addQuesRes = await addQuesToStore({\r\n      id: question_data.id || -1,\r\n      creator_id: login_id,\r\n      store_type_id: store_type,\r\n    });\r\n    // console.log(addQuesRes.code);\r\n    if (addQuesRes.code === \"1001\") {\r\n      init();\r\n      message.success(\"收藏成功\");\r\n      this.setState({ popVisi: false });\r\n    }\r\n  };\r\n  getQuesType = (type: string) => {\r\n    switch (type) {\r\n    case \"1\":\r\n      return \"radio\";\r\n    case \"2\":\r\n      return \"checkbox\";\r\n    case \"3\":\r\n      return \"radio\";\r\n    default:\r\n      return \"\";\r\n    }\r\n  };\r\n  select = (e: { target: { select: () => void } }) => {\r\n    e.target.select();\r\n  };\r\n  imageUploadBefore = (\r\n    file: RcFile\r\n  ): BeforeUploadValueType | Promise<BeforeUploadValueType> =>\r\n    new Promise((resolve, reject) => {\r\n      this.setState({ imageUid: file.uid, fileType: file.type }, () => {\r\n        const { acceptFileType } = this.state;\r\n        if (\r\n          acceptFileType.indexOf(\r\n            file.type.slice(file.type.indexOf(\"/\") + 1)\r\n          ) === -1\r\n        ) {\r\n          message.info(\"暂不支持该文件格式\");\r\n          reject();\r\n          return;\r\n        }\r\n        if (file.size > 1024 * 1024 * 2) {\r\n          if (compress.support) {\r\n            compress.zip(\r\n              [file],\r\n              { scale: 0.92 },\r\n              function (scaleFile: RcFile[]) {\r\n                if (scaleFile[0].size > 1024 * 1024 * 2) {\r\n                  message.info(\"文件过大，请重新选择\");\r\n                  reject();\r\n                  return;\r\n                } else {\r\n                  resolve(scaleFile[0]);\r\n                  return;\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            message.info(\"文件大小不能超过2M\");\r\n            reject();\r\n            return;\r\n          }\r\n        } else {\r\n          // console.log(\"upload\");\r\n          resolve(file);\r\n        }\r\n      });\r\n    });\r\n  imageUploadChange = (info: UploadChangeParam<UploadFile<IMyInfo>>): void => {\r\n    if (info.file?.status === \"done\") {\r\n      const { type, uid } = info.file;\r\n      const imgUrl = `${type?.replace(\"image/\", `/upload/${uid}.`)}`;\r\n      if (this.props.updateQuesList && info.file.response?.code === \"1001\") {\r\n        this.props.updateQuesList({\r\n          id: info.file.response?.id ? info.file.response?.id : -1,\r\n          index: info.file.response?.index ? info.file.response?.index : -1,\r\n          imgUrl,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  deleteSure = async () => {\r\n    const { focusMSG, exam_id = -1 } = this.props;\r\n    // console.log(focusMSG, exam_id);\r\n    const deleteRes = await deleteQuestion({\r\n      exam_id,\r\n      id: focusMSG?.id ? focusMSG?.id : -1,\r\n    });\r\n    // console.log(deleteRes.code);\r\n    if (deleteRes.code === \"1001\") {\r\n      this.setState({ modalState: false });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      getQuesType,\r\n      select,\r\n      imageUploadBefore,\r\n      imageUploadChange,\r\n      deleteSure,\r\n      handleVisibleChange,\r\n      addStoreAndClose,\r\n    } = this;\r\n    const {\r\n      imageUid,\r\n      fileType,\r\n      acceptFileType,\r\n      modalState,\r\n      addNewTypeStatus,\r\n      newTypeName,\r\n      popVisi,\r\n    } = this.state;\r\n    const {\r\n      login_id = -1,\r\n      exam_id = -1,\r\n      index,\r\n      type,\r\n      focusMSG,\r\n      setFocusMsg,\r\n      hiddenHolder = [],\r\n      setHiddenHolder,\r\n      showSerial,\r\n      typeList = [],\r\n      init,\r\n    } = this.props;\r\n    const indexType = \"ABCDEFGHIJ\";\r\n    const data = this.props.question_data || this.state.defaultData;\r\n    const typeListContent = (\r\n      <div className=\"type-window\">\r\n        {typeList.length > 0 ? (\r\n          <ul>\r\n            {typeList.map((item) => (\r\n              <li key={item.id}>\r\n                <span>{item.type_name}</span>\r\n                <span\r\n                  className=\"add-type\"\r\n                  onClick={() => {\r\n                    addStoreAndClose(item.id);\r\n                  }}\r\n                >\r\n                  添加\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {addNewTypeStatus ? (\r\n          <div className=\"new-type-name\">\r\n            <Input\r\n              style={{ marginTop: 5, height: 26, fontSize: 14, paddingLeft: 7 }}\r\n              showCount\r\n              maxLength={10}\r\n              placeholder=\"请输入分组名称\"\r\n              value={newTypeName}\r\n              onChange={(e) => {\r\n                this.setState({ newTypeName: e.currentTarget.value });\r\n              }}\r\n            />\r\n            <div\r\n              className=\"new-type-btn\"\r\n              style={{ textAlign: \"right\", cursor: \"default\" }}\r\n            >\r\n              <span\r\n                className=\"cancel\"\r\n                style={{ marginRight: 10, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.setState({ addNewTypeStatus: false });\r\n                }}\r\n              >\r\n                取消\r\n              </span>\r\n              <span\r\n                className=\"create\"\r\n                style={{ cursor: \"pointer\", color: \"#2672ff\" }}\r\n                onClick={async () => {\r\n                  const addRes = await addNewType({\r\n                    type_name: newTypeName,\r\n                    creator_id: login_id,\r\n                  });\r\n                  // console.log(addRes);\r\n                  if (addRes.code === \"1001\") {\r\n                    this.setState({ addNewTypeStatus: false });\r\n                    this.props.init();\r\n                  } else if (addRes.code === \"1002\") {\r\n                    message.warning(addRes.msg);\r\n                  }\r\n                }}\r\n              >\r\n                创建\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div\r\n          className=\"add-new-type\"\r\n          onClick={() => {\r\n            this.setState({ addNewTypeStatus: true });\r\n          }}\r\n        >\r\n          <span className=\"iconfont icon-tianjia\"></span>\r\n          <span>新建分类</span>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"ques-content\">\r\n        <div className=\"title\">\r\n          <div className=\"text-wrap\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"title-text\"\r\n              defaultValue={data.question_name}\r\n              onBlur={(e) => {\r\n                setFocusMsg({\r\n                  ...focusMSG,\r\n                  id: focusMSG?.id ? focusMSG.id : -1,\r\n                  option_list: focusMSG?.option_list\r\n                    ? focusMSG.option_list\r\n                    : [],\r\n                  question_name: e.currentTarget.value,\r\n                });\r\n              }}\r\n              onFocus={select}\r\n            />\r\n            <div className=\"option-tools\">\r\n              <Upload\r\n                name=\"file\"\r\n                data={{\r\n                  type: \"question\",\r\n                  index: -1,\r\n                  id: data.id,\r\n                  imageUid: imageUid,\r\n                  imageType: fileType,\r\n                }}\r\n                maxCount={1}\r\n                accept={acceptFileType}\r\n                action=\"/api/examEdit/uploadImage\"\r\n                headers={{ authorization: \"authorization-text\" }}\r\n                beforeUpload={imageUploadBefore}\r\n                onChange={imageUploadChange}\r\n              >\r\n                <span className=\"iconfont icon-tupian\" title=\"插入图片\"></span>\r\n              </Upload>\r\n\r\n              {/* <span className=\"iconfont icon-jianshao\" title=\"移除此项\"></span> */}\r\n            </div>\r\n            {data.question_image ? (\r\n              <div>\r\n                <div\r\n                  className=\"img-container\"\r\n                  style={{ maxWidth: 900, display: \"inline-block\" }}\r\n                >\r\n                  <img\r\n                    style={{ marginLeft: 0, maxWidth: \"100%\" }}\r\n                    src={`http://192.168.5.104:5008${data.question_image}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <Popconfirm\r\n                    placement=\"right\"\r\n                    title=\"确定删除该图片？\"\r\n                    onConfirm={async () => {\r\n                      const removeRes = await removeImage({\r\n                        id: data.id ? data.id : -1,\r\n                        index: -1,\r\n                      });\r\n                      // console.log(removeRes);\r\n                      if (removeRes.code === \"1001\") {\r\n                        init();\r\n                      }\r\n                    }}\r\n                    // onCancel={cancel}\r\n                    okText=\"删除\"\r\n                    cancelText=\"取消\"\r\n                  >\r\n                    <span\r\n                      className=\"iconfont icon-shanchu remove\"\r\n                      title=\"删除图片\"\r\n                    ></span>\r\n                  </Popconfirm>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"operation\">\r\n              {data.id_in_store && data.id_in_store > 0 ? (\r\n                <span\r\n                  className=\"iconfont icon-favorite isInStore\"\r\n                  title=\"取消收藏\"\r\n                  onClick={async (e) => {\r\n                    if (data.id_in_store && data.id_in_store > 0) {\r\n                      e.stopPropagation();\r\n                      const cancelRes = await cancelCollect({\r\n                        id: data.id ? data.id : -1,\r\n                        id_in_store: data.id_in_store,\r\n                      });\r\n                      // console.log(cancelRes);\r\n                      if (cancelRes.code === \"1001\") {\r\n                        message.success(\"取消收藏\");\r\n                        init();\r\n                      }\r\n                    }\r\n                  }}\r\n                ></span>\r\n              ) : (\r\n                <Popover\r\n                  placement=\"bottom\"\r\n                  content={typeListContent}\r\n                  trigger=\"click\"\r\n                  style={{ height: 500 }}\r\n                  visible={popVisi}\r\n                  onVisibleChange={handleVisibleChange}\r\n                >\r\n                  <span\r\n                    className=\"iconfont icon-favorite\"\r\n                    title=\"收藏至题库\"\r\n                  ></span>\r\n                </Popover>\r\n              )}\r\n              <span\r\n                className=\"iconfont icon-fuzhi1\"\r\n                title=\"复制题目\"\r\n                onClick={async () => {\r\n                  const copyRes = await copyFromTemp({\r\n                    exam_id,\r\n                    id: data.id ? data.id : -1,\r\n                  });\r\n                  // console.log(copyRes);\r\n                  if (copyRes.code === \"1001\") {\r\n                    this.props.init(() => {\r\n                      if (this.props.scrollToBottom) {\r\n                        this.props.scrollToBottom();\r\n                      }\r\n                    });\r\n                  }\r\n                }}\r\n              ></span>\r\n              <span\r\n                className=\"iconfont icon-shanchu\"\r\n                title=\"删除题目\"\r\n                onClick={() => {\r\n                  this.setState({ modalState: true });\r\n                }}\r\n              ></span>\r\n            </div>\r\n            <Modal\r\n              title=\"删除题目确认\"\r\n              centered\r\n              visible={modalState}\r\n              onOk={deleteSure}\r\n              onCancel={() => {\r\n                this.setState({ modalState: false });\r\n              }}\r\n              afterClose={() => {\r\n                this.props.setQuesFocus({ index: -1 });\r\n                this.props.init();\r\n              }}\r\n              okText=\"确定\"\r\n              cancelText=\"取消\"\r\n            >\r\n              <p>确定要删除吗？</p>\r\n            </Modal>\r\n          </div>\r\n          <span className=\"must-fill normal\">\r\n            <span className=\"red\">*</span>\r\n            <span className=\"index\">{index + 1}</span>\r\n          </span>\r\n        </div>\r\n        {data.option_list\r\n          ? data.option_list\r\n            .filter((item) => item.option_name !== null)\r\n            .map((item, i) => (\r\n              <div className=\"option-item\" key={`${item}_${index}_${i}`}>\r\n                <input\r\n                  type={getQuesType(type)}\r\n                  className=\"showInp\"\r\n                  disabled\r\n                  name={`radio${index}`}\r\n                  id={`radio${index}_${i}`}\r\n                />\r\n                <label htmlFor={`${getQuesType(type)}${index}_${i}`}>\r\n                  <input\r\n                    type=\"text\"\r\n                    // defaultValue={item.option_name}\r\n                    value={item.option_name}\r\n                    className={`inputOption${\r\n                      showSerial ? \" showSerial\" : \"\"\r\n                    }`}\r\n                    onFocus={select}\r\n                    onInput={(e) => {\r\n                      // if(e.currentTarget.value===\"\") return;\r\n                      hiddenHolder[index].option_list[i].option_name =\r\n                          e.currentTarget.value;\r\n                      setHiddenHolder\r\n                        ? setHiddenHolder({ hiddenHolder })\r\n                        : \"\";\r\n                      if (focusMSG) {\r\n                        focusMSG.option_list[i].option_name =\r\n                            e.currentTarget.value;\r\n                      }\r\n                      setFocusMsg({\r\n                        ...focusMSG,\r\n                        id: focusMSG?.id ? focusMSG.id : -1,\r\n                        option_list: focusMSG?.option_list\r\n                          ? focusMSG.option_list\r\n                          : [],\r\n                      });\r\n                    }}\r\n                  />\r\n                  <div className=\"hiddenHolder\">\r\n                    <span className=\"serial\">\r\n                      {showSerial ? `${indexType[i]}.` : \"\"}\r\n                    </span>\r\n                    {hiddenHolder[index].option_list[i] ? (\r\n                      <span className=\"placeHolder\">\r\n                        {hiddenHolder[index].option_list[i].option_name}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {data.answer.indexOf(`${i}`) !== -1 ? (\r\n                      <span\r\n                        style={{\r\n                          color: \"#00bf6f\",\r\n                          fontSize: 14,\r\n                          float: \"right\",\r\n                        }}\r\n                      >\r\n                          （正确答案）\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  {type !== \"3\" ? (\r\n                    <div className=\"option-tools\">\r\n                      <Upload\r\n                        name=\"file\"\r\n                        data={{\r\n                          type: \"option\",\r\n                          index: i,\r\n                          id: data.id,\r\n                          imageUid: imageUid,\r\n                          imageType: fileType,\r\n                        }}\r\n                        maxCount={1}\r\n                        accept={acceptFileType}\r\n                        action=\"/api/examEdit/uploadImage\"\r\n                        headers={{ authorization: \"authorization-text\" }}\r\n                        beforeUpload={imageUploadBefore}\r\n                        onChange={imageUploadChange}\r\n                      >\r\n                        <span\r\n                          className=\"iconfont icon-tupian\"\r\n                          title=\"插入图片\"\r\n                        ></span>\r\n                      </Upload>\r\n                      <span\r\n                        className=\"iconfont icon-jianshao\"\r\n                        title=\"移除此项\"\r\n                        onClick={async () => {\r\n                          const { id = -1 } = data;\r\n                          const removeRes = await removeOption({\r\n                            id,\r\n                            index: i,\r\n                          });\r\n                            // console.log(removeRes);\r\n                          if (removeRes.code === \"1001\") {\r\n                            const { option_list } = data;\r\n                            option_list.splice(i, 1);\r\n                            setFocusMsg({\r\n                              ...focusMSG,\r\n                              id,\r\n                              option_list,\r\n                            });\r\n                            init();\r\n                          }\r\n                        }}\r\n                      ></span>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </label>\r\n                {item.option_image ? (\r\n                  <div\r\n                    className=\"img-container\"\r\n                    style={{\r\n                      maxWidth: 900,\r\n                      display: \"inline-block\",\r\n                      marginLeft: 51,\r\n                    }}\r\n                  >\r\n                    <img\r\n                      style={{ marginLeft: 0, maxWidth: \"100%\" }}\r\n                      src={`http://192.168.5.104:5008${item.option_image}`}\r\n                      alt=\"\"\r\n                    />\r\n                    <Popconfirm\r\n                      placement=\"right\"\r\n                      title=\"确定删除该图片？\"\r\n                      onConfirm={async () => {\r\n                        const removeRes = await removeImage({\r\n                          id: data.id ? data.id : -1,\r\n                          index: i,\r\n                        });\r\n                        if (removeRes.code === \"1001\") {\r\n                          init();\r\n                        }\r\n                      }}\r\n                      okText=\"删除\"\r\n                      cancelText=\"取消\"\r\n                    >\r\n                      <span\r\n                        className=\"iconfont icon-shanchu remove\"\r\n                        title=\"删除图片\"\r\n                      ></span>\r\n                    </Popconfirm>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n        {data.question_type !== \"3\" ? (\r\n          <div className=\"addOption\">\r\n            <Button\r\n              style={{ margin: \"5px 0 0 50px\" }}\r\n              type=\"primary\"\r\n              ghost\r\n              onClick={async () => {\r\n                const { id = -1 } = data;\r\n                if (data.option_list.length >= 10) {\r\n                  message.warning(\"最多添加10个选项\");\r\n                } else {\r\n                  const addRes = await addOption({ id });\r\n                  if (addRes.code === \"1001\") {\r\n                    // console.log(addRes.optionListRes);\r\n                    const optionList = addRes.optionListRes\r\n                      .filter(\r\n                        (item, index) => item[`option${index + 1}`] !== null\r\n                      )\r\n                      .map((item, index) => ({\r\n                        [`option_name`]: item[`option${index + 1}`],\r\n                        [`option_image`]: item[`option${index + 1}_image`],\r\n                      }));\r\n                    // console.log(optionList);\r\n                    setFocusMsg({\r\n                      ...focusMSG,\r\n                      id,\r\n                      option_list: optionList,\r\n                    });\r\n                    init();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              添加选项\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(Choice);\r\n","import React, { Component } from \"react\";\r\n// import './index.less';\r\nimport {\r\n  Upload,\r\n  message,\r\n  Modal,\r\n  Popover,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  RcFile,\r\n  UploadChangeParam,\r\n  UploadFile,\r\n} from \"antd/lib/upload/interface\";\r\n// import { IQuesData } from \"../../../views/examination\";\r\nimport {\r\n  deleteQuestion,\r\n  addNewType,\r\n  addQuesToStore,\r\n  cancelCollect,\r\n  removeImage,\r\n  addOption,\r\n  removeOption,\r\n  copyFromTemp,\r\n} from \"../../../apis/examEdit\";\r\nimport * as compress from \"../../../utils/compress\";\r\nimport action from \"../../../store/actions\";\r\n\r\ninterface IProps {\r\n  exam_id?: number;\r\n  login_id?: number;\r\n  index: number;\r\n  type?: string;\r\n  question_data: IQuesData;\r\n  focusMSG?: IFocusQuestion;\r\n  setFocusMsg: (payload: {\r\n    id: number;\r\n    question_name?: string;\r\n    option_list?: Array<{ [key: string]: string }>;\r\n  }) => void;\r\n  updateQuesList?: (payload: {\r\n    id: number;\r\n    index: number;\r\n    imgUrl: string;\r\n  }) => void;\r\n  typeList?: ITypeList;\r\n  setQuesFocus: (payload: { index: number }) => void;\r\n  init: (backToList?: () => void) => void;\r\n  scrollToBottom?: () => void;\r\n}\r\ninterface IState {\r\n  defaultData: IQuesData;\r\n  imageUid: string;\r\n  fileType: string;\r\n  acceptFileType: string;\r\n  modalState: boolean;\r\n  addNewTypeStatus: boolean;\r\n  newTypeName: string;\r\n  popVisi: boolean;\r\n}\r\ndeclare type BeforeUploadValueType = void | boolean | string | Blob | File;\r\ninterface IMyInfo extends UploadFile<object> {\r\n  id: number;\r\n  index: number;\r\n  code: string;\r\n}\r\nclass Gapfilling extends Component<IProps, IState> {\r\n  state = {\r\n    defaultData: {\r\n      id: -1,\r\n      question_name: \"请填写以下内容\",\r\n      question_image: \"\",\r\n      question_type: \"\",\r\n      question_score: 10,\r\n      store_type: -1,\r\n      answer: \"\",\r\n      option_list: [\r\n        { option_name: \"填空1\", option_image: \"\" },\r\n        { option_name: \"填空2\", option_image: \"\" },\r\n      ],\r\n    },\r\n    imageUid: \"\",\r\n    fileType: \"\",\r\n    acceptFileType: \".jpg,.jpeg,.gif,.png,.bmp,.webp\",\r\n    modalState: false,\r\n    addNewTypeStatus: false,\r\n    newTypeName: \"\",\r\n    popVisi: false,\r\n  };\r\n  handleVisibleChange = (popVisi: boolean) => {\r\n    this.setState({ popVisi });\r\n  };\r\n  addStoreAndClose = async (store_type: number) => {\r\n    const { question_data, login_id = -1, init } = this.props;\r\n    const addQuesRes = await addQuesToStore({\r\n      id: question_data.id || -1,\r\n      creator_id: login_id,\r\n      store_type_id: store_type,\r\n    });\r\n    // console.log(addQuesRes.code);\r\n    if (addQuesRes.code === \"1001\") {\r\n      init();\r\n      message.success(\"收藏成功\");\r\n      this.setState({ popVisi: false });\r\n    }\r\n  };\r\n  select = (e: { target: { select: () => void } }) => {\r\n    e.target.select();\r\n  };\r\n  imageUploadBefore = (\r\n    file: RcFile\r\n  ): BeforeUploadValueType | Promise<BeforeUploadValueType> =>\r\n    new Promise((resolve, reject) => {\r\n      this.setState({ imageUid: file.uid, fileType: file.type }, () => {\r\n        const { acceptFileType } = this.state;\r\n        if (\r\n          acceptFileType.indexOf(\r\n            file.type.slice(file.type.indexOf(\"/\") + 1)\r\n          ) === -1\r\n        ) {\r\n          message.info(\"暂不支持该文件格式\");\r\n          reject();\r\n          return;\r\n        }\r\n        if (file.size > 1024 * 1024 * 2) {\r\n          if (compress.support) {\r\n            compress.zip(\r\n              [file],\r\n              { scale: 0.92 },\r\n              function (scaleFile: RcFile[]) {\r\n                if (scaleFile[0].size > 1024 * 1024 * 2) {\r\n                  message.info(\"文件过大，请重新选择\");\r\n                  reject();\r\n                  return;\r\n                } else {\r\n                  resolve(scaleFile[0]);\r\n                  return;\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            message.info(\"文件大小不能超过2M\");\r\n            reject();\r\n            return;\r\n          }\r\n        } else {\r\n          // console.log(\"upload\");\r\n          resolve(file);\r\n        }\r\n      });\r\n    });\r\n  imageUploadChange = (info: UploadChangeParam<UploadFile<IMyInfo>>): void => {\r\n    if (info.file?.status === \"done\") {\r\n      const { type, uid } = info.file;\r\n      const imgUrl = `${type?.replace(\"image/\", `/upload/${uid}.`)}`;\r\n      if (this.props.updateQuesList && info.file.response?.code === \"1001\") {\r\n        this.props.updateQuesList({\r\n          id: info.file.response?.id ? info.file.response?.id : -1,\r\n          index: info.file.response?.index ? info.file.response?.index : -1,\r\n          imgUrl,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  deleteSure = async () => {\r\n    const { focusMSG, exam_id = -1 } = this.props;\r\n    // console.log(focusMSG, exam_id);\r\n    const deleteRes = await deleteQuestion({\r\n      exam_id,\r\n      id: focusMSG?.id ? focusMSG?.id : -1,\r\n    });\r\n    // console.log(deleteRes.code);\r\n    if (deleteRes.code === \"1001\") {\r\n      this.setState({ modalState: false });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      select,\r\n      imageUploadBefore,\r\n      imageUploadChange,\r\n      deleteSure,\r\n      handleVisibleChange,\r\n      addStoreAndClose,\r\n    } = this;\r\n    const {\r\n      imageUid,\r\n      fileType,\r\n      acceptFileType,\r\n      modalState,\r\n      addNewTypeStatus,\r\n      newTypeName,\r\n      popVisi,\r\n    } = this.state;\r\n    const {\r\n      exam_id = -1,\r\n      login_id = -1,\r\n      index,\r\n      focusMSG,\r\n      setFocusMsg,\r\n      typeList = [],\r\n      init,\r\n    } = this.props;\r\n    const data = this.props.question_data || this.state.defaultData;\r\n    const typeListContent = (\r\n      <div className=\"type-window\">\r\n        {typeList.length > 0 ? (\r\n          <ul>\r\n            {typeList.map((item) => (\r\n              <li key={item.id}>\r\n                <span>{item.type_name}</span>\r\n                <span\r\n                  className=\"add-type\"\r\n                  onClick={() => {\r\n                    addStoreAndClose(item.id);\r\n                  }}\r\n                >\r\n                  添加\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {addNewTypeStatus ? (\r\n          <div className=\"new-type-name\">\r\n            <Input\r\n              style={{ marginTop: 5, height: 26, fontSize: 14, paddingLeft: 7 }}\r\n              showCount\r\n              maxLength={10}\r\n              placeholder=\"请输入分组名称\"\r\n              value={newTypeName}\r\n              onChange={(e) => {\r\n                this.setState({ newTypeName: e.currentTarget.value });\r\n              }}\r\n            />\r\n            <div\r\n              className=\"new-type-btn\"\r\n              style={{ textAlign: \"right\", cursor: \"default\" }}\r\n            >\r\n              <span\r\n                className=\"cancel\"\r\n                style={{ marginRight: 10, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.setState({ addNewTypeStatus: false });\r\n                }}\r\n              >\r\n                取消\r\n              </span>\r\n              <span\r\n                className=\"create\"\r\n                style={{ cursor: \"pointer\", color: \"#2672ff\" }}\r\n                onClick={async () => {\r\n                  const addRes = await addNewType({\r\n                    type_name: newTypeName,\r\n                    creator_id: login_id,\r\n                  });\r\n                  // console.log(addRes);\r\n                  if (addRes.code === \"1001\") {\r\n                    this.setState({ addNewTypeStatus: false });\r\n                    this.props.init();\r\n                  } else if (addRes.code === \"1002\") {\r\n                    message.warning(addRes.msg);\r\n                  }\r\n                }}\r\n              >\r\n                创建\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div\r\n          className=\"add-new-type\"\r\n          onClick={() => {\r\n            this.setState({ addNewTypeStatus: true });\r\n          }}\r\n        >\r\n          <span className=\"iconfont icon-tianjia\"></span>\r\n          <span>新建分类</span>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"ques-content\">\r\n        <div className=\"title\">\r\n          <div className=\"text-wrap\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"title-text\"\r\n              defaultValue={data.question_name}\r\n              onFocus={select}\r\n              onBlur={(e) => {\r\n                setFocusMsg({\r\n                  ...focusMSG,\r\n                  id: focusMSG?.id ? focusMSG.id : -1,\r\n                  option_list: focusMSG?.option_list\r\n                    ? focusMSG.option_list\r\n                    : [],\r\n                  question_name: e.currentTarget.value,\r\n                });\r\n              }}\r\n            />\r\n            <div className=\"option-tools\">\r\n              <Upload\r\n                name=\"file\"\r\n                data={{\r\n                  type: \"question\",\r\n                  index: -1,\r\n                  id: data.id,\r\n                  imageUid: imageUid,\r\n                  imageType: fileType,\r\n                }}\r\n                maxCount={1}\r\n                accept={acceptFileType}\r\n                action=\"/api/examEdit/uploadImage\"\r\n                headers={{ authorization: \"authorization-text\" }}\r\n                beforeUpload={imageUploadBefore}\r\n                onChange={imageUploadChange}\r\n              >\r\n                <span className=\"iconfont icon-tupian\" title=\"插入图片\"></span>\r\n              </Upload>\r\n            </div>\r\n            {data.question_image ? (\r\n              <div>\r\n                <div\r\n                  className=\"img-container\"\r\n                  style={{ maxWidth: 900, display: \"inline-block\" }}\r\n                >\r\n                  <img\r\n                    style={{ marginLeft: 0, maxWidth: \"100%\" }}\r\n                    src={`http://192.168.5.104:5008${data.question_image}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <Popconfirm\r\n                    placement=\"right\"\r\n                    title=\"确定删除该图片？\"\r\n                    onConfirm={async () => {\r\n                      const removeRes = await removeImage({\r\n                        id: data.id ? data.id : -1,\r\n                        index: -1,\r\n                      });\r\n                      // console.log(removeRes);\r\n                      if (removeRes.code === \"1001\") {\r\n                        init();\r\n                      }\r\n                    }}\r\n                    // onCancel={cancel}\r\n                    okText=\"删除\"\r\n                    cancelText=\"取消\"\r\n                  >\r\n                    <span\r\n                      className=\"iconfont icon-shanchu remove\"\r\n                      title=\"删除图片\"\r\n                    ></span>\r\n                  </Popconfirm>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"operation\">\r\n              {data.id_in_store && data.id_in_store > 0 ? (\r\n                <span\r\n                  className=\"iconfont icon-favorite isInStore\"\r\n                  title=\"取消收藏\"\r\n                  onClick={async (e) => {\r\n                    if (data.id_in_store && data.id_in_store > 0) {\r\n                      e.stopPropagation();\r\n                      const cancelRes = await cancelCollect({\r\n                        id: data.id ? data.id : -1,\r\n                        id_in_store: data.id_in_store,\r\n                      });\r\n                      // console.log(cancelRes);\r\n                      if (cancelRes.code === \"1001\") {\r\n                        message.success(\"取消收藏\");\r\n                        init();\r\n                      }\r\n                    }\r\n                  }}\r\n                ></span>\r\n              ) : (\r\n                <Popover\r\n                  placement=\"bottom\"\r\n                  content={typeListContent}\r\n                  trigger=\"click\"\r\n                  style={{ height: 500 }}\r\n                  visible={popVisi}\r\n                  onVisibleChange={handleVisibleChange}\r\n                >\r\n                  <span\r\n                    className=\"iconfont icon-favorite\"\r\n                    title=\"收藏至题库\"\r\n                  ></span>\r\n                </Popover>\r\n              )}\r\n              <span\r\n                className=\"iconfont icon-fuzhi1\"\r\n                title=\"复制题目\"\r\n                onClick={async () => {\r\n                  const copyRes = await copyFromTemp({exam_id,id:data.id?data.id:-1});\r\n                  // console.log(copyRes);\r\n                  if (copyRes.code === \"1001\") {\r\n                    this.props.init(() => {\r\n                      if (this.props.scrollToBottom) {\r\n                        this.props.scrollToBottom();\r\n                      }\r\n                    });\r\n                  }\r\n                }}\r\n              ></span>\r\n              <span\r\n                className=\"iconfont icon-shanchu\"\r\n                title=\"删除题目\"\r\n                onClick={() => {\r\n                  this.setState({ modalState: true });\r\n                }}\r\n              ></span>\r\n            </div>\r\n            <Modal\r\n              title=\"删除题目确认\"\r\n              centered\r\n              visible={modalState}\r\n              onOk={deleteSure}\r\n              onCancel={() => {\r\n                this.setState({ modalState: false });\r\n              }}\r\n              afterClose={() => {\r\n                this.props.setQuesFocus({ index: -1 });\r\n                this.props.init();\r\n              }}\r\n              okText=\"确定\"\r\n              cancelText=\"取消\"\r\n            >\r\n              <p>确定要删除吗？</p>\r\n            </Modal>\r\n          </div>\r\n          <span className=\"must-fill normal\">\r\n            <span className=\"red\">*</span>\r\n            <span className=\"index\">{index + 1}</span>\r\n          </span>\r\n        </div>\r\n        {data.option_list.map((item, i) => (\r\n          <div className=\"option-item\" key={`${item}_${index}_${i}`}>\r\n            <div className=\"container\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"showInp filling\"\r\n                // defaultValue={item.option_name}\r\n                value={item.option_name}\r\n                onFocus={select}\r\n                style={{ width: 800 }}\r\n                onChange={(e) => {\r\n                  if (focusMSG) {\r\n                    focusMSG.option_list[i].option_name = e.currentTarget.value;\r\n                  }\r\n                  setFocusMsg({\r\n                    ...focusMSG,\r\n                    id: focusMSG?.id ? focusMSG.id : -1,\r\n                    option_list: focusMSG?.option_list\r\n                      ? focusMSG.option_list\r\n                      : [],\r\n                  });\r\n                }}\r\n              />\r\n              <div className=\"option-tools\">\r\n                <span\r\n                  className=\"iconfont icon-jianshao\"\r\n                  title=\"移除此项\"\r\n                  onClick={async () => {\r\n                    const { id = -1 } = data;\r\n                    const removeRes = await removeOption({\r\n                      id,\r\n                      index: i,\r\n                    });\r\n                      // console.log(removeRes);\r\n                    if (removeRes.code === \"1001\") {\r\n                      const { option_list } = data;\r\n                      option_list.splice(i, 1);\r\n                      setFocusMsg({\r\n                        ...focusMSG,\r\n                        id,\r\n                        option_list,\r\n                      });\r\n                      init();\r\n                    }\r\n                  }}\r\n                ></span>\r\n              </div>\r\n            </div>\r\n            <div className=\"filling\">\r\n              <input\r\n                style={{ width: 800 }}\r\n                type=\"text\"\r\n                className=\"inputOption\"\r\n                disabled\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"addOption\">\r\n          <Button\r\n            style={{ margin: \"5px 0 0 50px\" }}\r\n            type=\"primary\"\r\n            ghost\r\n            onClick={async () => {\r\n              const { id = -1 } = data;\r\n              if (data.option_list.length >= 10) {\r\n                message.warning(\"最多添加10个选项\");\r\n              } else {\r\n                const addRes = await addOption({ id });\r\n                if (addRes.code === \"1001\") {\r\n                  // console.log(addRes.optionListRes);\r\n                  const optionList = addRes.optionListRes.filter(\r\n                    (item, index) => item[`option${index+1}`] !== null\r\n                  ).map((item,index)=>({\r\n                    [`option_name`]:item[`option${index+1}`],\r\n                    [`option_image`]:item[`option${index+1}_image`]\r\n                  }));\r\n                  // console.log(optionList);\r\n                  setFocusMsg({\r\n                    ...focusMSG,\r\n                    id,\r\n                    option_list:optionList,\r\n                  });\r\n                  init();\r\n                }\r\n              }\r\n            }}\r\n          >\r\n              添加选项\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(Gapfilling);\r\n","import React, { Component } from \"react\";\r\n// import \"./index.less\";\r\nimport { Upload, message, Modal, Popover, Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  RcFile,\r\n  UploadChangeParam,\r\n  UploadFile,\r\n} from \"antd/lib/upload/interface\";\r\n// import { IQuesData } from \"../../../views/examination\";\r\nimport {\r\n  deleteQuestion,\r\n  addNewType,\r\n  addQuesToStore,\r\n  cancelCollect,\r\n  copyFromTemp,\r\n} from \"../../../apis/examEdit\";\r\nimport * as compress from \"../../../utils/compress\";\r\nimport action from \"../../../store/actions\";\r\n\r\ninterface IProps {\r\n  exam_id?: number;\r\n  login_id?: number;\r\n  index: number;\r\n  type?: string;\r\n  question_data: IQuesData;\r\n  focusMSG?: IFocusQuestion;\r\n  setFocusMsg: (payload: {\r\n    id: number;\r\n    question_name?: string;\r\n    option_list?: Array<{ [key: string]: string }>;\r\n  }) => void;\r\n  updateQuesList?: (payload: {\r\n    id: number;\r\n    index: number;\r\n    imgUrl: string;\r\n  }) => void;\r\n  typeList?: ITypeList;\r\n  setQuesFocus: (payload: { index: number }) => void;\r\n  init: (backToList?: () => void) => void;\r\n  scrollToBottom?: () => void;\r\n}\r\ninterface IState {\r\n  defaultData: IQuesData;\r\n  imageUid: string;\r\n  fileType: string;\r\n  acceptFileType: string;\r\n  modalState: boolean;\r\n  addNewTypeStatus: boolean;\r\n  newTypeName: string;\r\n  popVisi: boolean;\r\n}\r\ndeclare type BeforeUploadValueType = void | boolean | string | Blob | File;\r\ninterface IMyInfo extends UploadFile<object> {\r\n  id: number;\r\n  index: number;\r\n  code: string;\r\n}\r\nclass ShortAnswer extends Component<IProps, IState> {\r\n  state = {\r\n    defaultData: {\r\n      id: -1,\r\n      question_name: \"请简要阐述你的观点\",\r\n      question_image: \"\",\r\n      question_type: \"\",\r\n      question_score: 10,\r\n      store_type: -1,\r\n      answer: \"\",\r\n      option_list: [],\r\n    },\r\n    imageUid: \"\",\r\n    fileType: \"\",\r\n    acceptFileType: \".jpg,.jpeg,.gif,.png,.bmp,.webp\",\r\n    modalState: false,\r\n    addNewTypeStatus: false,\r\n    newTypeName: \"\",\r\n    popVisi: false,\r\n  };\r\n  handleVisibleChange = (popVisi: boolean) => {\r\n    this.setState({ popVisi });\r\n  };\r\n  addStoreAndClose = async (store_type: number) => {\r\n    const { question_data, login_id = -1, init } = this.props;\r\n    const addQuesRes = await addQuesToStore({\r\n      id: question_data.id || -1,\r\n      creator_id: login_id,\r\n      store_type_id: store_type,\r\n    });\r\n    if (addQuesRes.code === \"1001\") {\r\n      init();\r\n      message.success(\"收藏成功\");\r\n      this.setState({ popVisi: false });\r\n    }\r\n  };\r\n  select = (e: { target: { select: () => void } }) => {\r\n    e.target.select();\r\n  };\r\n  imageUploadBefore = (\r\n    file: RcFile\r\n  ): BeforeUploadValueType | Promise<BeforeUploadValueType> =>\r\n    new Promise((resolve, reject) => {\r\n      this.setState({ imageUid: file.uid, fileType: file.type }, () => {\r\n        const { acceptFileType } = this.state;\r\n        if (\r\n          acceptFileType.indexOf(\r\n            file.type.slice(file.type.indexOf(\"/\") + 1)\r\n          ) === -1\r\n        ) {\r\n          message.info(\"暂不支持该文件格式\");\r\n          reject();\r\n          return;\r\n        }\r\n        if (file.size > 1024 * 1024 * 2) {\r\n          if (compress.support) {\r\n            // console.log(true);\r\n            compress.zip(\r\n              [file],\r\n              { scale: 0.92 },\r\n              function (scaleFile: RcFile[]) {\r\n                if (scaleFile[0].size > 1024 * 1024 * 2) {\r\n                  message.info(\"文件过大，请重新选择\");\r\n                  reject();\r\n                  return;\r\n                } else {\r\n                  resolve(scaleFile[0]);\r\n                  return;\r\n                }\r\n              }\r\n            );\r\n          } else {\r\n            message.info(\"文件大小不能超过2M\");\r\n            reject();\r\n            return;\r\n          }\r\n        } else {\r\n          // console.log(\"upload\");\r\n          resolve(file);\r\n        }\r\n      });\r\n    });\r\n  imageUploadChange = (info: UploadChangeParam<UploadFile<IMyInfo>>): void => {\r\n    if (info.file?.status === \"done\") {\r\n      const { type, uid } = info.file;\r\n      const imgUrl = `${type?.replace(\"image/\", `/upload/${uid}.`)}`;\r\n      if (this.props.updateQuesList && info.file.response?.code === \"1001\") {\r\n        this.props.updateQuesList({\r\n          id: info.file.response?.id ? info.file.response?.id : -1,\r\n          index: info.file.response?.index ? info.file.response?.index : -1,\r\n          imgUrl,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  deleteSure = async () => {\r\n    const { focusMSG, exam_id = -1 } = this.props;\r\n    // console.log(focusMSG, exam_id);\r\n    const deleteRes = await deleteQuestion({\r\n      exam_id,\r\n      id: focusMSG?.id ? focusMSG?.id : -1,\r\n    });\r\n    // console.log(deleteRes.code);\r\n    if (deleteRes.code === \"1001\") {\r\n      this.setState({ modalState: false });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      select,\r\n      imageUploadBefore,\r\n      imageUploadChange,\r\n      deleteSure,\r\n      handleVisibleChange,\r\n      addStoreAndClose,\r\n    } = this;\r\n    const {\r\n      imageUid,\r\n      fileType,\r\n      acceptFileType,\r\n      modalState,\r\n      addNewTypeStatus,\r\n      newTypeName,\r\n      popVisi,\r\n    } = this.state;\r\n    const {\r\n      exam_id = -1,\r\n      login_id = -1,\r\n      index,\r\n      focusMSG,\r\n      setFocusMsg,\r\n      typeList = [],\r\n      init,\r\n    } = this.props;\r\n    const data = this.props.question_data || this.state.defaultData;\r\n    const typeListContent = (\r\n      <div className=\"type-window\">\r\n        {typeList.length > 0 ? (\r\n          <ul>\r\n            {typeList.map((item) => (\r\n              <li key={item.id}>\r\n                <span>{item.type_name}</span>\r\n                <span\r\n                  className=\"add-type\"\r\n                  onClick={() => {\r\n                    addStoreAndClose(item.id);\r\n                  }}\r\n                >\r\n                  添加\r\n                </span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {addNewTypeStatus ? (\r\n          <div className=\"new-type-name\">\r\n            <Input\r\n              style={{ marginTop: 5, height: 26, fontSize: 14, paddingLeft: 7 }}\r\n              showCount\r\n              maxLength={10}\r\n              placeholder=\"请输入分组名称\"\r\n              value={newTypeName}\r\n              onChange={(e) => {\r\n                this.setState({ newTypeName: e.currentTarget.value });\r\n              }}\r\n            />\r\n            <div\r\n              className=\"new-type-btn\"\r\n              style={{ textAlign: \"right\", cursor: \"default\" }}\r\n            >\r\n              <span\r\n                className=\"cancel\"\r\n                style={{ marginRight: 10, cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  this.setState({ addNewTypeStatus: false });\r\n                }}\r\n              >\r\n                取消\r\n              </span>\r\n              <span\r\n                className=\"create\"\r\n                style={{ cursor: \"pointer\", color: \"#2672ff\" }}\r\n                onClick={async () => {\r\n                  const addRes = await addNewType({\r\n                    type_name: newTypeName,\r\n                    creator_id: login_id,\r\n                  });\r\n                  // console.log(addRes);\r\n                  if (addRes.code === \"1001\") {\r\n                    this.setState({ addNewTypeStatus: false });\r\n                    this.props.init();\r\n                  } else if (addRes.code === \"1002\") {\r\n                    message.warning(addRes.msg);\r\n                  }\r\n                }}\r\n              >\r\n                创建\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div\r\n          className=\"add-new-type\"\r\n          onClick={() => {\r\n            this.setState({ addNewTypeStatus: true });\r\n          }}\r\n        >\r\n          <span className=\"iconfont icon-tianjia\"></span>\r\n          <span>新建分类</span>\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"ques-content\">\r\n        <div className=\"title\">\r\n          <div className=\"text-wrap\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"title-text\"\r\n              defaultValue={data.question_name}\r\n              onFocus={select}\r\n              onBlur={(e) => {\r\n                setFocusMsg({\r\n                  ...focusMSG,\r\n                  id: focusMSG?.id ? focusMSG.id : -1,\r\n                  option_list: focusMSG?.option_list\r\n                    ? focusMSG.option_list\r\n                    : [],\r\n                  question_name: e.currentTarget.value,\r\n                });\r\n              }}\r\n            />\r\n            <div className=\"option-tools\">\r\n              <Upload\r\n                name=\"file\"\r\n                data={{\r\n                  type: \"question\",\r\n                  index: -1,\r\n                  id: data.id,\r\n                  imageUid: imageUid,\r\n                  imageType: fileType,\r\n                }}\r\n                maxCount={1}\r\n                accept={acceptFileType}\r\n                action=\"/api/examEdit/uploadImage\"\r\n                headers={{ authorization: \"authorization-text\" }}\r\n                beforeUpload={imageUploadBefore}\r\n                onChange={imageUploadChange}\r\n              >\r\n                <span className=\"iconfont icon-tupian\" title=\"插入图片\"></span>\r\n              </Upload>\r\n            </div>\r\n            {data.question_image ? (\r\n              <div>\r\n                <div\r\n                  className=\"img-container\"\r\n                  style={{ maxWidth: 900, display: \"inline-block\" }}\r\n                >\r\n                  <img\r\n                    style={{ marginLeft: 0, maxWidth: \"100%\" }}\r\n                    src={`http://192.168.5.104:5008${data.question_image}`}\r\n                    alt=\"\"\r\n                  />\r\n                  <span\r\n                    className=\"iconfont icon-shanchu remove\"\r\n                    title=\"删除图片\"\r\n                  ></span>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"operation\">\r\n              {data.id_in_store && data.id_in_store > 0 ? (\r\n                <span\r\n                  className=\"iconfont icon-favorite isInStore\"\r\n                  title=\"取消收藏\"\r\n                  onClick={async (e) => {\r\n                    if (data.id_in_store && data.id_in_store > 0) {\r\n                      e.stopPropagation();\r\n                      const cancelRes = await cancelCollect({\r\n                        id: data.id ? data.id : -1,\r\n                        id_in_store: data.id_in_store,\r\n                      });\r\n                      // console.log(cancelRes);\r\n                      if(cancelRes.code===\"1001\"){\r\n                        message.success(\"取消收藏\");\r\n                        init();\r\n                      }\r\n                    }\r\n                  }}\r\n                ></span>\r\n              ) : (\r\n                <Popover\r\n                  placement=\"bottom\"\r\n                  content={typeListContent}\r\n                  trigger=\"click\"\r\n                  style={{ height: 500 }}\r\n                  visible={popVisi}\r\n                  onVisibleChange={handleVisibleChange}\r\n                >\r\n                  <span\r\n                    className=\"iconfont icon-favorite\"\r\n                    title=\"收藏至题库\"\r\n                  ></span>\r\n                </Popover>\r\n              )}\r\n              <span\r\n                className=\"iconfont icon-fuzhi1\"\r\n                title=\"复制题目\"\r\n                onClick={async () => {\r\n                  const copyRes = await copyFromTemp({exam_id,id:data.id?data.id:-1});\r\n                  // console.log(copyRes);\r\n                  if (copyRes.code === \"1001\") {\r\n                    this.props.init(() => {\r\n                      if (this.props.scrollToBottom) {\r\n                        this.props.scrollToBottom();\r\n                      }\r\n                    });\r\n                  }\r\n                }}\r\n              ></span>\r\n              <span\r\n                className=\"iconfont icon-shanchu\"\r\n                title=\"删除题目\"\r\n                onClick={() => {\r\n                  this.setState({ modalState: true });\r\n                }}\r\n              ></span>\r\n            </div>\r\n            <Modal\r\n              title=\"删除题目确认\"\r\n              centered\r\n              visible={modalState}\r\n              onOk={deleteSure}\r\n              onCancel={() => {\r\n                this.setState({ modalState: false });\r\n              }}\r\n              afterClose={() => {\r\n                this.props.setQuesFocus({ index: -1 });\r\n                this.props.init();\r\n              }}\r\n              okText=\"确定\"\r\n              cancelText=\"取消\"\r\n            >\r\n              <p>确定要删除吗？</p>\r\n            </Modal>\r\n          </div>\r\n          <span className=\"must-fill normal\">\r\n            <span className=\"red\">*</span>\r\n            <span className=\"index\">{index + 1}</span>\r\n          </span>\r\n        </div>\r\n        <textarea\r\n          style={{\r\n            border: \"1px solid #d8d8d8\",\r\n            margin: \"10px 0px 0px 50px\",\r\n            resize: \"none\",\r\n          }}\r\n          name=\"\"\r\n          id=\"\"\r\n          cols={60}\r\n          rows={5}\r\n          disabled\r\n        ></textarea>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(ShortAnswer);\r\n","import React, { Component } from \"react\";\r\nimport { Button, message, TimePicker } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport QRcode from \"qrcode.react\";\r\nimport { getIssueStatus, issueExam } from \"../../apis/examEdit\";\r\nimport action from \"../../store/actions\";\r\nimport moment from \"moment\";\r\n\r\ninterface IProps {\r\n  exam_id?: number;\r\n  examHostLink?: string;\r\n  setExamStatus?: (payload: { examStatus: boolean }) => void;\r\n}\r\ntype PickerValue = moment.Moment | null | undefined;\r\ninterface IState {\r\n  issueState: boolean;\r\n  examLinkRandom: string;\r\n  // duration: string;\r\n  duration: PickerValue;\r\n}\r\nclass IssueProject extends Component<IProps, IState> {\r\n  state = {\r\n    issueState: false,\r\n    examLinkRandom: \"\",\r\n    // duration: \"\",\r\n    duration: null,\r\n  };\r\n  async componentDidMount() {\r\n    const {\r\n      exam_id,\r\n      setExamStatus = () => {\r\n        (\"\");\r\n      },\r\n    } = this.props;\r\n    const statusRes = await getIssueStatus({ exam_id: exam_id ? exam_id : -1 });\r\n    // console.log(statusRes);\r\n    if (statusRes.code === \"1001\" && statusRes.isStart === 1) {\r\n      setExamStatus({ examStatus: true });\r\n      this.setState({ issueState: true, examLinkRandom: statusRes.examLink });\r\n    } else {\r\n      setExamStatus({ examStatus: false });\r\n    }\r\n  }\r\n  render() {\r\n    const { issueState, examLinkRandom } = this.state;\r\n    const duration:PickerValue =this.state.duration;\r\n    const {\r\n      exam_id,\r\n      examHostLink,\r\n      setExamStatus = () => {\r\n        (\"\");\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className=\"exam-content\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"issue-box\">\r\n          {!issueState ? (\r\n            <div\r\n              className=\"not-issue\"\r\n              style={{ margin: \"0 auto\", paddingTop: 240, textAlign: \"center\" }}\r\n            >\r\n              <div className=\"title\">开启发布后，即可分享考试</div>\r\n              <div>\r\n                <div style={{display:\"inline-block\"}}>\r\n                  <span>考试时长：</span>\r\n                  <TimePicker\r\n                    placeholder=\"设置考试时长\"\r\n                    value={duration}\r\n                    minuteStep={15}\r\n                    secondStep={10}\r\n                    // renderExtraFooter={() => <></>}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        duration: moment(\r\n                          `${e?.hours()}:${e?.minutes()}:${e?.seconds()}`,\r\n                          \"HH:mm:ss\"\r\n                        ),\r\n                      });\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                style={{ width: 160, height: 40, marginTop: 20 }}\r\n                onClick={async () => {\r\n                  // console.log(duration);\r\n                  if (!duration) {\r\n                    message.warning({\r\n                      content: \"请设置考试时长\",\r\n                      duration: 0.7,\r\n                    });\r\n                    return;\r\n                  }\r\n                  const issueRes = await issueExam({\r\n                    exam_id: exam_id ? exam_id : -1,duration\r\n                  });\r\n                  if (issueRes.code === \"1001\") {\r\n                    setExamStatus({ examStatus: true });\r\n                    this.setState({\r\n                      issueState: true,\r\n                      examLinkRandom: `${issueRes.examLink}`,\r\n                    });\r\n                  } else {\r\n                    message.error(\"网络出错\");\r\n                  }\r\n                }}\r\n              >\r\n                开始发布\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"issued\"\r\n              style={{ margin: \"0 auto\", paddingTop: 100 }}\r\n            >\r\n              <div className=\"container\">\r\n                <div className=\"title\">\r\n                  <span className=\"title-text\">项目分享</span>\r\n                  <span className=\"describe\">\r\n                    （项目发布后，链接与二维码始终不变）\r\n                  </span>\r\n                </div>\r\n                <div className=\"issue-share\">\r\n                  <div className=\"link\">\r\n                    <h3>分享链接</h3>\r\n                    <div className=\"link-text\">\r\n                      <input\r\n                        type=\"text\"\r\n                        readOnly\r\n                        disabled\r\n                        value={`${examHostLink}/${examLinkRandom}`}\r\n                      />\r\n                      <Button\r\n                        type=\"primary\"\r\n                        style={{\r\n                          width: 80,\r\n                          height: 40,\r\n                          borderBottomColor: \"#2672ff\",\r\n                          borderRadius: \"0 3px 3px 0\",\r\n                          fontSize: 16,\r\n                        }}\r\n                        onClick={() => {\r\n                          message.success({\r\n                            content: \"已复制到剪切板\",\r\n                            duration: 0.8,\r\n                            style: {\r\n                              position: \"relative\",\r\n                              top: 50,\r\n                            },\r\n                          });\r\n                          copy(`${examHostLink}/${examLinkRandom}`);\r\n                        }}\r\n                      >\r\n                        复制\r\n                      </Button>\r\n                      <Button\r\n                        style={{\r\n                          width: 80,\r\n                          height: 40,\r\n                          borderRadius: \"3px\",\r\n                          marginLeft: 10,\r\n                          borderColor: \"#2672ff\",\r\n                          color: \"#2672ff\",\r\n                          fontSize: 16,\r\n                        }}\r\n                        onClick={() => {\r\n                          window.open(`${examHostLink}/${examLinkRandom}`);\r\n                        }}\r\n                      >\r\n                        打开\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"code\"\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <h3 style={{ marginBottom: 10 }}>扫码分享答题页</h3>\r\n                    <QRcode value={`${examHostLink}/${examLinkRandom}`} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(IssueProject);\r\n","import React, { Component } from 'react';\r\n// import './index.css'\r\nimport { connect } from 'react-redux';\r\n\r\nclass DataReport extends Component {\r\n  render() {\r\n    return (\r\n      <div className='exam-content'>\r\n        数据报表\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(state=>state)(DataReport);","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Popover, Steps, Button, message, Tooltip } from \"antd\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport ExamLeftNav from \"../../components/exam-left-nav\";\r\nimport ExamRightNav from \"../../components/exam-right-nav\";\r\nimport Choices from \"../../components/question-store/choices\";\r\nimport GapFilling from \"../../components/question-store/gap-filling\";\r\nimport ShortAnswer from \"../../components/question-store/short-answer\";\r\nimport IssueProject from \"./issue-project\";\r\nimport DataReport from \"./data-report\";\r\nimport {\r\n  getExam,\r\n  quesEditItem,\r\n  getQuesStore,\r\n  editExamMSG,\r\n} from \"../../apis/examEdit\";\r\nimport { IStep } from \"../../store/reducers/examEdit\";\r\nimport action from \"../../store/actions\";\r\nimport \"./index.less\";\r\ninterface IProps extends RouteComponentProps {\r\n  exam_id: number;\r\n  login_id: number;\r\n  setExamId: (payload: { exam_id: number }) => void;\r\n  setOriginList: (payload: { questionList: Array<IQuesData> }) => void;\r\n  questionListOrigin: IQuesData[];\r\n  questionList: IQuesData[];\r\n  steps: IStep[];\r\n  current: number;\r\n  setStepStatus: (payload: { index: number }) => void;\r\n  question_focus: number;\r\n  setQuesFocus: (payload: { index: number }) => void;\r\n  setQuesType: (payload: { ques_type: string }) => void;\r\n  focusMSG: IFocusQuestion;\r\n  setFocusMsg: (payload: IFocusQuestion) => void;\r\n  examHostLink?: string;\r\n  setTypeList: (payload: { typeList: ITypeList }) => void;\r\n  setQuestionStore: (payload: {\r\n    question_store: IQuestionOriginItem[];\r\n  }) => void;\r\n  examStatus: boolean;\r\n}\r\ninterface IState {\r\n  examTitle?: string;\r\n  welcomeHolder?: string;\r\n  focusTemp: number;\r\n}\r\nexport interface IQuestionItem {\r\n  isMessage?: boolean;\r\n  questionType?: string;\r\n  questionName?: string;\r\n}\r\nexport const getTypeName = (type: string) => {\r\n  switch (type) {\r\n  case \"1\":\r\n    return \"单选题\";\r\n  case \"2\":\r\n    return \"多选题\";\r\n  case \"3\":\r\n    return \"判断题\";\r\n  case \"4\":\r\n    return \"多项填空\";\r\n  case \"5\":\r\n    return \"简答题\";\r\n  default:\r\n    return \"单选题\";\r\n  }\r\n};\r\nclass Examination extends Component<IProps, IState> {\r\n  state = {\r\n    examTitle: \"\",\r\n    welcomeHolder: \"\",\r\n    focusTemp: -1,\r\n  };\r\n  init = async (backToList?: () => void) => {\r\n    const {\r\n      current,\r\n      setOriginList,\r\n      setStepStatus,\r\n      exam_id,\r\n      login_id = -1,\r\n      setTypeList,\r\n      setQuestionStore,\r\n    } = this.props;\r\n    const res: IExamListResponse = await getExam({ exam_id });\r\n    if (res && res.examItem && res.examItem.id) {\r\n      this.setState({\r\n        examTitle: res.examItem.exam_name || \"考试标题\",\r\n        welcomeHolder: res.examItem.welcome || \"点击编辑欢迎语\",\r\n      });\r\n    }\r\n    const typeListRes = await getQuesStore({ creator_id: login_id });\r\n    // console.log(typeListRes);\r\n    if (typeListRes.code === \"1001\") {\r\n      // console.log(typeListRes);\r\n      setQuestionStore({ question_store: typeListRes.question_store });\r\n      setTypeList({ typeList: typeListRes.store_type });\r\n    }\r\n    setOriginList({\r\n      questionList: res.question_list,\r\n    });\r\n    setStepStatus({ index: current });\r\n    if (backToList) {\r\n      backToList();\r\n    }\r\n  };\r\n  get totalScore() {\r\n    const { questionList } = this.props;\r\n    return questionList.reduce(\r\n      (prev, next) => (prev += next.question_score),\r\n      0\r\n    );\r\n  }\r\n  getQuesType = (index: number, type: string, IQuesData: IQuesData) => {\r\n    switch (type) {\r\n    case \"1\":\r\n      return (\r\n        <Choices\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    case \"2\":\r\n      return (\r\n        <Choices\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    case \"3\":\r\n      return (\r\n        <Choices\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    case \"4\":\r\n      return (\r\n        <GapFilling\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    case \"5\":\r\n      return (\r\n        <ShortAnswer\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    default:\r\n      return (\r\n        <Choices\r\n          index={index}\r\n          type={type}\r\n          question_data={IQuesData}\r\n          init={this.init}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  getTypeName = getTypeName;\r\n  componentDidMount() {\r\n    this.init();\r\n  }\r\n  render() {\r\n    const { Step } = Steps;\r\n    const {\r\n      exam_id,\r\n      steps,\r\n      setStepStatus,\r\n      current, // 步骤条进度 0编辑项目 1发布项目 2数据报表\r\n      setQuesFocus,\r\n      question_focus,\r\n      setQuesType,\r\n      focusMSG,\r\n      setFocusMsg,\r\n      questionList,\r\n      examStatus,\r\n    } = this.props;\r\n    const { examTitle, welcomeHolder, focusTemp } = this.state;\r\n    const { getQuesType, getTypeName, totalScore } = this;\r\n    return (\r\n      <div\r\n        className=\"exam-page\"\r\n        onClick={async () => {\r\n          const editRes = await quesEditItem({ ...focusMSG, exam_id });\r\n          if (editRes.code === \"1001\") {\r\n            this.init();\r\n          }\r\n          setQuesFocus({ index: -1 });\r\n        }}\r\n      >\r\n        <div\r\n          className=\"exam-header\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          <Tooltip\r\n            placement=\"bottomLeft\"\r\n            title=\"返回项目列表\"\r\n            arrowPointAtCenter\r\n          >\r\n            <span\r\n              className=\"backToList iconfont icon-houtui1\"\r\n              onClick={async (e) => {\r\n                e.stopPropagation();\r\n                if (current !== 0 || !focusMSG || focusMSG.id < 0) {\r\n                  this.props.history.push(\"/layout/home/list\");\r\n                  return;\r\n                }\r\n                const editRes = await quesEditItem({ ...focusMSG, exam_id });\r\n                setQuesFocus({ index: -1 });\r\n                if (editRes.code === \"1001\") {\r\n                  this.init(() => {\r\n                    this.props.history.push(\"/layout/home/list\");\r\n                  });\r\n                }\r\n              }}\r\n            ></span>\r\n          </Tooltip>\r\n          <div className=\"exam-title-msg\">{examTitle}</div>\r\n          <div className=\"exam-step\" style={{ marginLeft: 130 }}>\r\n            <Steps\r\n              type=\"navigation\"\r\n              current={current}\r\n              className=\"site-navigation-steps\"\r\n            >\r\n              {steps.map((item: IStep, index: number) => (\r\n                <Step\r\n                  status={item.status}\r\n                  title={item.title}\r\n                  key={item.current}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    if (this.props.examHostLink && index === 0 && examStatus) {\r\n                      message.warning({\r\n                        content: \"无法修改收集中的项目,请停止发布\",\r\n                        duration: 0.7,\r\n                        style: {\r\n                          position: \"relative\",\r\n                          top: 50,\r\n                        },\r\n                      });\r\n                    } else {\r\n                      setStepStatus({ index });\r\n                    }\r\n                  }}\r\n                />\r\n              ))}\r\n            </Steps>\r\n          </div>\r\n          <div\r\n            className=\"save-issue\"\r\n            style={{\r\n              paddingLeft: `${current !== 0 ? \"184.38px\" : \"0\"}`,\r\n            }}\r\n          >\r\n            {current === 0 ? (\r\n              <>\r\n                <Button\r\n                  style={{\r\n                    borderColor: \"#2672ff\",\r\n                    color: \"#2672ff\",\r\n                    marginRight: 10,\r\n                  }}\r\n                >\r\n                  保存\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{\r\n                    marginRight: 10,\r\n                  }}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setStepStatus({ index: 1 });\r\n                  }}\r\n                >\r\n                  发布并分享\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <Popover\r\n              placement=\"bottomRight\"\r\n              content={\r\n                <span\r\n                  className=\"home-logout\"\r\n                  onClick={() => {\r\n                    this.props.history.push(\"/login\");\r\n                  }}\r\n                >\r\n                  退出登录\r\n                </span>\r\n              }\r\n              trigger=\"hover\"\r\n            >\r\n              <span className=\"iconfont icon-wode2\"></span>\r\n            </Popover>\r\n          </div>\r\n        </div>\r\n        {current === 0 ? (\r\n          <div className=\"exam-content\">\r\n            <div className=\"left-nav\">\r\n              <ExamLeftNav init={this.init} />\r\n            </div>\r\n            <div className=\"exam-body\">\r\n              <div className=\"inner\">\r\n                <div className=\"exam-titleAndWelcome\">\r\n                  <div className=\"title-wrap\">\r\n                    <div\r\n                      className=\"title-text\"\r\n                      contentEditable=\"true\"\r\n                      dangerouslySetInnerHTML={{ __html: examTitle }}\r\n                      onBlur={async (e) => {\r\n                        const editRes = await editExamMSG({\r\n                          exam_id,\r\n                          examTitle: e.currentTarget.innerText,\r\n                          welcomeHolder,\r\n                        });\r\n                        // console.log(editRes);\r\n                        if (editRes.code === \"1001\") {\r\n                          this.init();\r\n                        }\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"welcome-wrap\">\r\n                    <div\r\n                      className=\"title-text\"\r\n                      contentEditable=\"true\"\r\n                      dangerouslySetInnerHTML={{ __html: welcomeHolder }}\r\n                      onBlur={async (e) => {\r\n                        // const editRes =\r\n                        await editExamMSG({\r\n                          exam_id,\r\n                          examTitle,\r\n                          welcomeHolder: e.currentTarget.innerText,\r\n                        });\r\n                        // console.log(editRes);\r\n                        // console.log(exam_id, e.currentTarget.innerText);\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"total-score\">\r\n                    <h3>总分</h3>\r\n                    <p>{totalScore}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"msg-question-list\">\r\n                  <div className=\"question-item\">\r\n                    <div className=\"ques-content\">\r\n                      <div className=\"title\">\r\n                        姓名\r\n                        <span className=\"must-fill\">\r\n                          <span className=\"red\">*</span>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"text\" className=\"showInp\" disabled />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"question-item\">\r\n                    <div className=\"ques-content\">\r\n                      <div className=\"title\">\r\n                        手机\r\n                        <span className=\"must-fill\">\r\n                          <span className=\"red\">*</span>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"text\" className=\"showInp\" disabled />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"question-item\">\r\n                    <div className=\"ques-content\">\r\n                      <div className=\"title\">\r\n                        班级\r\n                        <span className=\"must-fill\">\r\n                          <span className=\"red\">*</span>\r\n                        </span>\r\n                      </div>\r\n                      <input type=\"text\" className=\"showInp\" disabled />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"normal-question-list\">\r\n                  {questionList.map((item: IQuesData, index: number) => (\r\n                    <div\r\n                      className={`question-item${\r\n                        question_focus === item.id ? \" question_focus\" : \"\"\r\n                      }`}\r\n                      key={item.id}\r\n                      onClick={async (e) => {\r\n                        e.stopPropagation();\r\n                        if (focusTemp !== item.id && focusTemp !== -1) {\r\n                          const editQues = await quesEditItem({\r\n                            ...focusMSG,\r\n                            exam_id,\r\n                          });\r\n                          if (editQues.code === \"1001\") {\r\n                            this.init();\r\n                          }\r\n                          setFocusMsg({\r\n                            ...item,\r\n                            id: item.id ? item.id : -1,\r\n                          });\r\n                        } else if (focusTemp === -1) {\r\n                          setFocusMsg({\r\n                            ...item,\r\n                            id: item.id ? item.id : -1,\r\n                          });\r\n                        }\r\n                        setQuesFocus({ index: item.id ? item.id : -1 });\r\n                        setQuesType({\r\n                          ques_type: getTypeName(item.question_type),\r\n                        });\r\n                        this.setState({ focusTemp: item.id ? item.id : -1 });\r\n                      }}\r\n                    >\r\n                      {getQuesType(index, item.question_type, item)}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"right-nav\"\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              <ExamRightNav init={this.init} />\r\n            </div>\r\n          </div>\r\n        ) : current === 1 ? (\r\n          <IssueProject />\r\n        ) : current === 2 ? (\r\n          <DataReport />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(Examination);\r\n"],"names":["getExam","data","axios","url","method","insertQuestion","addNewProject","copyProject","getExamList","getQuesStore","quesEditItem","changeQuestionType","changeQuestionScore","changeQuestionAnswer","deleteQuestion","getIssueStatus","issueExam","addNewType","addQuesToStore","cancelCollect","removeImage","addOption","removeOption","editExamMSG","stopIssue","copyFromStore","copyFromTemp","updateStoreList","removeExam","demo","demoTest","payload","type","TYPE","examEdit","setOriginList","setStepStatus","setQuesFocus","setQuesType","setExamId","updateQuesList","setFocusMsg","changeShowSerial","setHiddenHolder","setLoginId","setTypeList","setQuestionStore","setExamStatus","scrollToBottom","document","documentElement","scrollTo","behavior","top","scrollHeight","scrollToActiveQues","index","querySelector","getBoundingClientRect","scrollTop","request","baseURL","timeout","interceptors","use","config","Error","response","res","err","status","console","error","QuestionTypeList","state","typeList","name","icon","question_type","msgList","addQuestion","exam_id","props","creator_id","login_id","code","examRes","questionList","question_list","this","className","map","item","style","position","size","marginLeft","width","height","fontSize","textAlign","onClick","e","stopPropagation","fontStyle","placement","trigger","overlayClassName","content","cols","rows","option","display","alignItems","padding","marginRight","readOnly","disabled","border","transform","right","cursor","Component","connect","action","QuestionStore","question_store","newTypeState","newTypeName","manageState","keywords","searchResult","focusIndex","storeWindowList","setStoreData","setState","getTypeName","seachStore","reduceStoreData","target","value","result","reduce","prev","next","forEach","question_name","indexOf","push","throttling","callback","wait","timer","setTimeout","length","filter","store_type","id","question_image","question_score","answer","option_list","Object","keys","key","values","Panel","Collapse","placeholder","onChange","background","paddingLeft","title","visible","centered","cancelText","okText","onOk","type_name","addRes","init","message","msg","onCancel","color","showCount","maxLength","currentTarget","isEdit","isShow","minWidth","bodyStyle","minHeight","justifyContent","marginBottom","maskClosable","autoFocus","onBlur","overlayInnerStyle","onConfirm","splice","marginTop","flexDirection","margin","description","replace","split","bordered","expandIcon","isActive","CaretRightOutlined","rotate","header","extra","question","ExamOutline","ExamLeftNav","activeTab","tabList","changeTab","navBody","ExamRightNav","changeType","ques_type","focusMSG","getType","changeScore","debounce","score","showSerial","time","clearTimeout","Option","Select","question_focus","indexType","option_name","borderBottom","float","changeAnswerRes","checked","answerArr","i","sort","a","b","join","min","max","canvasSupported","elem","createElement","getContext","isCanvasSupported","imgScale","src","scale","cbk","_canvas","tImg","Image","onload","_context","drawImage","blob","dataURI","byteString","mimestring","atob","decodeURI","charCodeAt","Blob","Uint8Array","dataURItoBlob","toDataURL","support","zip","files","opt","files_count","ret","j","fReader","FileReader","file","readAsDataURL","Choice","defaultData","option_image","imageUid","fileType","acceptFileType","modalState","addNewTypeStatus","popVisi","handleVisibleChange","addStoreAndClose","question_data","store_type_id","getQuesType","select","imageUploadBefore","Promise","resolve","reject","uid","slice","compress","scaleFile","imageUploadChange","info","imgUrl","deleteSure","hiddenHolder","typeListContent","defaultValue","onFocus","imageType","maxCount","accept","headers","authorization","beforeUpload","maxWidth","alt","id_in_store","onVisibleChange","afterClose","htmlFor","onInput","ghost","optionList","optionListRes","Gapfilling","ShortAnswer","resize","IssueProject","issueState","examLinkRandom","duration","statusRes","isStart","examStatus","examLink","examHostLink","paddingTop","borderBottomColor","borderRadius","copy","borderColor","window","open","minuteStep","secondStep","moment","hours","minutes","seconds","issueRes","DataReport","Examination","examTitle","welcomeHolder","focusTemp","backToList","current","examItem","exam_name","welcome","typeListRes","IQuesData","Step","Steps","steps","totalScore","arrowPointAtCenter","history","editRes","contentEditable","dangerouslySetInnerHTML","__html","innerText"],"sourceRoot":""}