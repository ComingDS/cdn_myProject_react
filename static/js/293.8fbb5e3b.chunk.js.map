{"version":3,"file":"static/js/293.8fbb5e3b.chunk.js","mappings":"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","sources":["apis/examEdit.ts","store/actions/index.ts","store/actions/demo.ts","store/actions/examEdit.ts","utils/request.ts","views/home/children/exam-list/index.tsx","../node_modules/antd/es/_util/getRenderPropValue.js","../node_modules/antd/es/popconfirm/index.js","../node_modules/antd/es/popover/index.js"],"sourcesContent":["import axios from \"../utils/request\";\r\nimport { IWindowStoreTypeItem } from \"../components/exam-left-nav/children/question-store\";\r\n\r\nexport const getExam = (data: {\r\n  exam_id?: number;\r\n}): Promise<IExamListResponse> =>\r\n  axios.request({\r\n    url: \"/examEdit/getExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const insertQuestion = (data: {\r\n  question_type: string;\r\n  exam_id?: number;\r\n  creator_id?: number;\r\n}): Promise<{ code: string }> =>\r\n  axios.request({\r\n    url: \"/examEdit/insertQuestion\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addNewProject = (data: {\r\n  creator_id: number;\r\n}): Promise<{ code: string; exam_id: number }> =>\r\n  axios.request({\r\n    url: \"/examEdit/addNewProject\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyProject = (data: {\r\n  exam_id: number;\r\n  creator_id: number;\r\n}): Promise<{ code: string; insertId: number }> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyProject\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getExamList = (data: {\r\n  creator_id: number;\r\n}): Promise<{ code: string; examList: IExamItem[] }> =>\r\n  axios.request({\r\n    url: \"/examEdit/getExamList\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getQuesStore = (data: {\r\n  creator_id: number;\r\n}): Promise<IStoreResponse> =>\r\n  axios.request({\r\n    url: \"/examEdit/getQuesStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\ninterface IReqData extends IFocusQuestion {\r\n  exam_id: number;\r\n}\r\nexport const quesEditItem = (data: IReqData): Promise<{ code: string }> =>\r\n  axios.request({\r\n    url: \"/examEdit/quesEditItem\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionType = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  type: string;\r\n}): Promise<{\r\n  code: string;\r\n  optionArray: Array<{ option_name: string; option_image: string }>;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionType\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionScore = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  score: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionScore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const changeQuestionAnswer = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n  answer: string;\r\n}): Promise<{\r\n  code: string;\r\n  answer: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/changeQuestionAnswer\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const deleteQuestion = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/deleteQuestion\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const getIssueStatus = (data: {\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  isStart: number;\r\n  examLink: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/getIssueStatus\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\ntype PickerValue = moment.Moment | null | undefined;\r\nexport const issueExam = (data: {\r\n  exam_id: number;\r\n  duration: PickerValue;\r\n}): Promise<{\r\n  code: string;\r\n  examLink: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/issueExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addNewType = (data: {\r\n  type_name: string;\r\n  creator_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addNewType\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addQuesToStore = (data: {\r\n  id: number;\r\n  creator_id: number;\r\n  store_type_id: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addQuesToStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const cancelCollect = (data: {\r\n  id: number;\r\n  id_in_store: number;\r\n}): Promise<{\r\n  code: string;\r\n  msg: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/cancelCollect\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeImage = (data: {\r\n  id: number;\r\n  index: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeImage\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const addOption = (data: {\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n  optionListRes: IOptionItem[];\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/addOption\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeOption = (data: {\r\n  id: number;\r\n  index: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeOption\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const editExamMSG = (data: {\r\n  exam_id: number;\r\n  examTitle: string;\r\n  welcomeHolder: string;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/editExamMSG\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const stopIssue = (data: {\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/stopIssue\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyFromStore = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyFromStore\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const copyFromTemp = (data: {\r\n  exam_id: number;\r\n  id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/copyFromTemp\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const updateStoreList = (data: {\r\n  creator_id: number;\r\n  storeWindowList: IWindowStoreTypeItem[];\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/updateStoreList\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\nexport const removeExam = (data: {\r\n  creator_id: number;\r\n  exam_id: number;\r\n}): Promise<{\r\n  code: string;\r\n}> =>\r\n  axios.request({\r\n    url: \"/examEdit/removeExam\",\r\n    method: \"POST\",\r\n    data,\r\n  });\r\n","import demo from \"./demo\";\r\nimport examEdit from \"./examEdit\";\r\nconst action = {\r\n  demo,\r\n  examEdit,\r\n};\r\n\r\nexport default action;\r\n","import * as TYPE from \"../action-types\";\n\nconst action = {\n  demoTest(payload: object) {\n    return {\n      type: TYPE.DEMO,\n      payload,\n    };\n  },\n};\n\nexport default action;","import * as TYPE from \"../action-types\";\r\n\r\nconst action = {\r\n  setOriginList(payload: object) {\r\n    return {\r\n      type: TYPE.SETORIGINLIST,\r\n      payload,\r\n    };\r\n  },\r\n  setStepStatus(payload: object) {\r\n    return {\r\n      type: TYPE.SETSTEPSTATUE,\r\n      payload,\r\n    };\r\n  },\r\n  setQuesFocus(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESFOCUS,\r\n      payload,\r\n    };\r\n  },\r\n  // setFocusMsg(payload: object) {\r\n  //   return {\r\n  //     type: TYPE.SETFOCUSMSG,\r\n  //     payload,\r\n  //   };\r\n  // },\r\n  setQuesType(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESTYPE,\r\n      payload,\r\n    };\r\n  },\r\n  setExamId(payload: object) {\r\n    return {\r\n      type: TYPE.SETEXAMID,\r\n      payload,\r\n    };\r\n  },\r\n  updateQuesList(payload: object) {\r\n    return {\r\n      type: TYPE.UPDATEQUESLIST,\r\n      payload,\r\n    };\r\n  },\r\n  setFocusMsg(payload: object) {\r\n    return {\r\n      type: TYPE.SETFOCUSMSG,\r\n      payload,\r\n    };\r\n  },\r\n  changeShowSerial(payload: object) {\r\n    return {\r\n      type: TYPE.CHANGESHOWSERIAL,\r\n      payload,\r\n    };\r\n  },\r\n  setHiddenHolder(payload: object) {\r\n    return {\r\n      type: TYPE.SETHIDDENHOLDER,\r\n      payload,\r\n    };\r\n  },\r\n  setLoginId(payload: object) {\r\n    return {\r\n      type: TYPE.SETLOGINID,\r\n      payload,\r\n    };\r\n  },\r\n  setTypeList(payload: object) {\r\n    return {\r\n      type: TYPE.SETTYPELIST,\r\n      payload,\r\n    };\r\n  },\r\n  setQuestionStore(payload: object) {\r\n    return {\r\n      type: TYPE.SETQUESTIONSTORE,\r\n      payload,\r\n    };\r\n  },\r\n  setExamStatus(payload: object) {\r\n    return {\r\n      type: TYPE.SETEXAMSTATUS,\r\n      payload,\r\n    };\r\n  },\r\n  scrollToBottom() {\r\n    document.documentElement.scrollTo({\r\n      behavior: \"smooth\",\r\n      top: document.documentElement.scrollHeight,\r\n    });\r\n    return {\r\n      type: \"\",\r\n      payload: {},\r\n    };\r\n  },\r\n  scrollToActiveQues(index: number) {\r\n    const top = document\r\n      .querySelector(\r\n        `.normal-question-list .question-item:nth-child(${index + 1})`\r\n      )\r\n      ?.getBoundingClientRect().top;\r\n    // console.log(index, top);\r\n    document.documentElement.scrollTo({\r\n      behavior: \"smooth\",\r\n      top: top ? top - 75 + document.documentElement.scrollTop : 0,\r\n    });\r\n    return {\r\n      type: \"\",\r\n      payload: {},\r\n    };\r\n  },\r\n};\r\n\r\nexport default action;\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\n// const host1=\"http://192.168.1.169:4000\";\r\n// const host_dev=\"http://localhost:4000\";\r\nconst api = \"/api\";\r\nconst request = axios.create({\r\n  baseURL: api,\r\n  timeout: 5000,\r\n});\r\nrequest.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    // const token = window.localStorage.getItem(\"token\");\r\n    // if (token && config.headers) {\r\n    //   config.headers.Authorization = `Bearer ${token}`;\r\n    // }\r\n    return config;\r\n  },\r\n  () => {\r\n    throw new Error(\"发起请求出错\");\r\n  }\r\n);\r\nrequest.interceptors.response.use(\r\n  (res) => {\r\n    return res.data;\r\n  },\r\n  (err) => {\r\n    if (err && err.response && err.response.status) {\r\n      const status = err.response.status;\r\n      switch (status) {\r\n      case 504:\r\n      case 500:\r\n      case 404:\r\n        console.error(\"服务器异常\");\r\n        break;\r\n      case 401:\r\n        console.error(\"未授权\");\r\n        break;\r\n      case 403:\r\n        console.error(\"无权访问\");\r\n        break;\r\n      case 422:\r\n        console.error(\"参数出错\");\r\n        break;\r\n      default:\r\n        console.error(\"未知错误\");\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nexport default request;\r\n","import React, { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n  Select,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Table,\r\n  Space,\r\n  Popover,\r\n  Popconfirm,\r\n  Modal,\r\n} from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { getExamList, removeExam, stopIssue } from \"../../../../apis/examEdit\";\r\nimport action from \"../../../../store/actions\";\r\nimport { ColumnsType } from \"antd/es/table\";\r\nimport \"./index.less\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  status?: number;\r\n  login_id: number;\r\n  setExamId: (payload: { exam_id: number }) => void;\r\n  setStepStatus: (payload: { index: number }) => void;\r\n}\r\n\r\ninterface IState {\r\n  listType: string;\r\n  originList: IExamItem[];\r\n  examList: IExamItem[];\r\n  update_time: string;\r\n  status: string;\r\n  keywords: string;\r\n}\r\nconst { confirm } = Modal;\r\nclass ExamList extends Component<IProps, IState> {\r\n  state = {\r\n    listType: \"grid\",\r\n    originList: [],\r\n    examList: [],\r\n    update_time: \"\",\r\n    status: \"\",\r\n    keywords: \"\",\r\n  };\r\n  changeListType = (type: string) => {\r\n    this.setState({ listType: type });\r\n  };\r\n  changeUpdateTime = (value: string) => {\r\n    // console.log(value);\r\n\r\n    this.setState({ update_time: value });\r\n  };\r\n  changeStatus = (value: string) => {\r\n    this.setState({ status: value });\r\n  };\r\n  searchProject = (e: { currentTarget: { value: string } }) => {\r\n    this.setState({ keywords: e.currentTarget.value });\r\n  };\r\n  get getExamList() {\r\n    const { originList, update_time, status, keywords } = this.state;\r\n    let { examList } = this.state;\r\n    switch (update_time) {\r\n    case \"all\":\r\n      examList = originList;\r\n      break;\r\n    case \"week\":\r\n      examList = originList.filter(\r\n        (item: IExamItem) =>\r\n          new Date(\r\n            new Date().getTime() - new Date(item.update_time).getTime()\r\n          ).getTime() <\r\n            7 * 24 * 60 * 60 * 1000\r\n      );\r\n      // console.log(examList);\r\n\r\n      break;\r\n    case \"month\":\r\n      examList = originList.filter(\r\n        (item: IExamItem) =>\r\n          new Date(\r\n            new Date().getTime() - new Date(item.update_time).getTime()\r\n          ).getTime() <\r\n            30 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    case \"year\":\r\n      examList = originList.filter(\r\n        (item: IExamItem) =>\r\n          new Date(\r\n            new Date().getTime() - new Date(item.update_time).getTime()\r\n          ).getTime() <\r\n            365 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    default:\r\n    }\r\n    switch (status) {\r\n    case \"wait\":\r\n      examList = examList.filter((item: IExamItem) => item.isStart === 0);\r\n      break;\r\n    case \"underway\":\r\n      examList = examList.filter((item: IExamItem) => item.isStart === 1);\r\n      break;\r\n    case \"end\":\r\n      examList = examList.filter((item: IExamItem) => item.isStart === 2);\r\n      break;\r\n    case \"all\":\r\n      examList = examList.slice();\r\n      break;\r\n    default:\r\n      examList = examList.slice();\r\n    }\r\n    if (keywords) {\r\n      examList = examList.filter(\r\n        (item: IExamItem) => item.exam_name.indexOf(keywords) !== -1\r\n      );\r\n    }\r\n    return examList;\r\n  }\r\n  addPro = () => {\r\n    this.props.history.push(\"/layout/addPro\");\r\n  };\r\n  updateList = async () => {\r\n    const examListRes = await getExamList({ creator_id: this.props.login_id });\r\n    if (examListRes && examListRes.code === \"1001\" && examListRes.examList) {\r\n      const tempList = examListRes.examList\r\n        .sort(\r\n          (a, b) =>\r\n            new Date(b.update_time).getTime() -\r\n            new Date(a.update_time).getTime()\r\n        )\r\n        .filter((item) => item.isDelete !== 1);\r\n      this.setState({ originList: tempList, examList: tempList });\r\n    }\r\n  };\r\n  async componentDidMount() {\r\n    this.updateList();\r\n  }\r\n  setUpdateTime(time: Date) {\r\n    const targetTime = new Date(time);\r\n    const nowTime = new Date();\r\n    const year = nowTime.getFullYear() - targetTime.getFullYear();\r\n    const month = nowTime.getMonth() - targetTime.getMonth();\r\n    const date = nowTime.getDate() - targetTime.getDate();\r\n    const hour = nowTime.getHours() - targetTime.getHours();\r\n    const minutes = nowTime.getMinutes() - targetTime.getMinutes();\r\n    return (\r\n      <span>\r\n        {year > 0\r\n          ? `${year}年前`\r\n          : month > 0\r\n            ? `${month}个月前`\r\n            : date > 0\r\n              ? `${date}天前`\r\n              : hour > 0\r\n                ? `${hour}小时前`\r\n                : minutes > 0\r\n                  ? `${minutes}分钟前`\r\n                  : `刚刚`}\r\n      </span>\r\n    );\r\n  }\r\n  showDeleteConfirm = (record: IExamItem) => {\r\n    const { login_id } = this.props;\r\n    const { updateList } = this;\r\n    confirm({\r\n      title: `确定要删除${record.exam_name}这场考试吗？`,\r\n      icon: <ExclamationCircleOutlined />,\r\n      centered: true,\r\n      style:{zIndex:9999},\r\n      okText: \"确定\",\r\n      okType: \"danger\",\r\n      cancelText: \"取消\",\r\n      async onOk() {\r\n        const res = await removeExam({\r\n          exam_id: record.id,\r\n          creator_id: login_id,\r\n        });\r\n        if (res.code === \"1001\") {\r\n          updateList();\r\n        } else {\r\n          message.warning(\"出错了\");\r\n        }\r\n      },\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      changeListType,\r\n      changeUpdateTime,\r\n      changeStatus,\r\n      addPro,\r\n      setUpdateTime,\r\n      searchProject,\r\n      showDeleteConfirm,\r\n      getExamList,\r\n    } = this;\r\n    const { setExamId, setStepStatus } = this.props;\r\n    const { listType } = this.state;\r\n    // const examList: IExamItem[] = this.state.examList;\r\n    const { Option } = Select;\r\n    const columns: ColumnsType<IExamItem> = [\r\n      {\r\n        title: \"标题\",\r\n        dataIndex: \"exam_name\",\r\n        key: \"exam_name\",\r\n      },\r\n      {\r\n        title: \"收集状态\",\r\n        dataIndex: \"isStart\",\r\n        key: \"isStart\",\r\n        align: \"center\",\r\n        render: (state: number) => (\r\n          <span\r\n            style={{\r\n              color: `${\r\n                state === 0\r\n                  ? \"#ffbe3a\"\r\n                  : state === 1\r\n                    ? \"rgb(0, 191, 111)\"\r\n                    : \"#ccc\"\r\n              }`,\r\n            }}\r\n          >\r\n            {state === 0 ? \"未发布\" : state === 1 ? \"收集中\" : \"已结束\"}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"收到数据\",\r\n        dataIndex: \"data_count\",\r\n        key: \"data_count\",\r\n        align: \"center\",\r\n        render: (count: number) => <span>{count ? count : 0}份数据</span>,\r\n      },\r\n      {\r\n        title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        key: \"create_time\",\r\n        align: \"center\",\r\n        render: (time: Date) => (\r\n          <span>{new Date(time).toLocaleDateString().replace(/\\//g, \"-\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"更新时间\",\r\n        dataIndex: \"update_time\",\r\n        key: \"update_time\",\r\n        align: \"center\",\r\n        render: (time: Date) => <span>{this.setUpdateTime(time)}</span>,\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        key: \"action\",\r\n        width: 230,\r\n        render: (\r\n          _text:\r\n            | boolean\r\n            | React.ReactChild\r\n            | React.ReactFragment\r\n            | React.ReactPortal\r\n            | null\r\n            | undefined,\r\n          record: IExamItem\r\n        ) => (\r\n          <Space>\r\n            <span\r\n              style={{\r\n                display: \"flex\",\r\n                color: \"#2672ff\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  marginRight: 10,\r\n                  lineHeight: \"31px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  if (record.isStart === 1) {\r\n                    message.warning({\r\n                      content: \"无法修改收集中的项目,请停止发布\",\r\n                      duration: 0.7,\r\n                      style: {\r\n                        position: \"relative\",\r\n                        top: 50,\r\n                      },\r\n                    });\r\n                    return;\r\n                  }\r\n                  setExamId({ exam_id: record.id });\r\n                  setStepStatus({ index: 0 });\r\n                  this.props.history.push(\"/layout/examination\");\r\n                }}\r\n              >\r\n                编辑\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginRight: 10,\r\n                  lineHeight: \"31px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setExamId({ exam_id: record.id });\r\n                  setStepStatus({ index: 1 });\r\n                  this.props.history.push(\"/layout/examination\");\r\n                }}\r\n              >\r\n                发布\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginRight: 10,\r\n                  lineHeight: \"31px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  // console.log(record);\r\n                }}\r\n              >\r\n                数据\r\n              </span>\r\n              <Popover\r\n                placement=\"right\"\r\n                trigger=\"hover\"\r\n                overlayStyle={{zIndex:90}}\r\n                style={{ cursor: \"auto\" }}\r\n                overlayClassName=\"operation-more\"\r\n                content={\r\n                  <div>\r\n                    <div\r\n                      className=\"judge\"\r\n                      style={{\r\n                        color: `${record.isStart !== 1 ? \"#ccc\" : \"\"}`,\r\n                        cursor: `${\r\n                          record.isStart === 1 ? \"pointer\" : \"not-allowed\"\r\n                        }`,\r\n                      }}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        if (record.isStart === 1) {\r\n                          // console.log(record.id);\r\n                        }\r\n                      }}\r\n                    >\r\n                      人工评分\r\n                    </div>\r\n                    <div\r\n                      className=\"stop\"\r\n                      style={{\r\n                        color: `${record.isStart !== 1 ? \"#ccc\" : \"\"}`,\r\n                        cursor: `${\r\n                          record.isStart === 1 ? \"pointer\" : \"not-allowed\"\r\n                        }`,\r\n                      }}\r\n                    >\r\n                      {record.isStart === 1 ? (\r\n                        <Popconfirm\r\n                          title=\"确定停止发布吗？\"\r\n                          placement=\"right\"\r\n                          okText=\"确定\"\r\n                          cancelText=\"取消\"\r\n                          onConfirm={async () => {\r\n                            const stopRes = await stopIssue({\r\n                              exam_id: record.id,\r\n                            });\r\n                            // console.log(stopRes);\r\n                            if (stopRes.code === \"1001\") {\r\n                              this.updateList();\r\n                            }\r\n                          }}\r\n                        >\r\n                          <span>停止发布</span>\r\n                        </Popconfirm>\r\n                      ) : (\r\n                        <span>停止发布</span>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className=\"delete\"\r\n                      onClick={() => {\r\n                        if (record.isStart === 1) {\r\n                          message.warning({\r\n                            content: \"无法删除收集中的项目\",\r\n                            duration: 0.7,\r\n                          });\r\n                          return;\r\n                        }\r\n                        showDeleteConfirm(record);\r\n                      }}\r\n                    >\r\n                      删除项目\r\n                    </div>\r\n                  </div>\r\n                }\r\n              >\r\n                <span\r\n                  className=\"iconfont icon-more\"\r\n                  style={{ color: \"#888\", fontSize: 20, cursor: \"pointer\" }}\r\n                ></span>\r\n              </Popover>\r\n            </span>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className={`exam-list${listType === \"grid\" ? \"\" : \" list-table\"}`}>\r\n        <div className=\"header\">\r\n          <div className=\"title\">我的项目</div>\r\n          <div className=\"tools-nav\">\r\n            <div className=\"list-type\">\r\n              <span\r\n                className={`iconfont icon-24gl-appsBig${\r\n                  listType === \"grid\" ? \" active\" : \"\"\r\n                }`}\r\n                title=\"网格\"\r\n                onClick={() => {\r\n                  changeListType(\"grid\");\r\n                }}\r\n              ></span>\r\n              <span className=\"line\"></span>\r\n              <span\r\n                className={`iconfont icon-ziyuan${\r\n                  listType === \"list\" ? \" active\" : \"\"\r\n                }`}\r\n                title=\"列表\"\r\n                onClick={() => {\r\n                  changeListType(\"list\");\r\n                }}\r\n              ></span>\r\n            </div>\r\n            <Select\r\n              defaultValue=\"项目更新时间\"\r\n              style={{ width: 116, fontSize: \"12px\", marginRight: \"8px\" }}\r\n              onChange={changeUpdateTime}\r\n            >\r\n              <Option value=\"all\">项目更新时间</Option>\r\n              <Option value=\"week\">过去一周内</Option>\r\n              <Option value=\"month\">过去一个月内</Option>\r\n              <Option value=\"year\">过去一年内</Option>\r\n            </Select>\r\n            <Select\r\n              defaultValue=\"项目状态\"\r\n              style={{ width: 92, fontSize: \"12px\", marginRight: \"8px\" }}\r\n              onChange={changeStatus}\r\n            >\r\n              <Option value=\"all\">项目状态</Option>\r\n              <Option value=\"wait\">未发布</Option>\r\n              <Option value=\"underway\">收集中</Option>\r\n              <Option value=\"end\">已结束</Option>\r\n            </Select>\r\n            <Input\r\n              placeholder=\"项目搜索\"\r\n              onChange={searchProject}\r\n              style={{\r\n                width: 160,\r\n                padding: \"7px 34px\",\r\n                background:\r\n                  'white url(\"http://192.168.5.104:5008/img/search-icon.png\") no-repeat 8px 6px/18px 18px',\r\n                fontSize: \"12px\",\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              style={{\r\n                marginLeft: 10,\r\n                position: \"relative\",\r\n                top: 0.5,\r\n                display: `${listType === \"list\" ? \"inline-block\" : \"none\"}`,\r\n              }}\r\n              onClick={addPro}\r\n            >\r\n              新建项目\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"exam-content\">\r\n          {listType === \"grid\" ? (\r\n            <div className=\"list\">\r\n              <ul className=\"grid-list\">\r\n                <li className=\"add-pro\" onClick={addPro}>\r\n                  <span>\r\n                    <i className=\"iconfont icon-tianjia-\"></i>\r\n                    <i>新建项目</i>\r\n                  </span>\r\n                </li>\r\n                {getExamList.map((item: IExamItem) => (\r\n                  <li\r\n                    // className=\"project\"\r\n                    className={`${\r\n                      item.isStart !== 1 ? \"project\" : \"project not-allowed\"\r\n                    }`}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                      if (item.isStart === 1) {\r\n                        message.warning({\r\n                          content: \"无法修改收集中的项目,请停止发布\",\r\n                          duration: 0.7,\r\n                          style: {\r\n                            position: \"relative\",\r\n                            top: 50,\r\n                          },\r\n                        });\r\n                        return;\r\n                      }\r\n                      setExamId({ exam_id: item.id });\r\n                      setStepStatus({ index: 0 });\r\n                      this.props.history.push(\"/layout/examination\");\r\n                    }}\r\n                  >\r\n                    <p className=\"title\">{item.exam_name}</p>\r\n                    <p className=\"status\">\r\n                      {item.isStart === 1 ? (\r\n                        <span style={{ color: \"#00bf6f\" }}>收集中</span>\r\n                      ) : item.isStart === 2 ? (\r\n                        <span style={{ color: \"#ccc\" }}>已结束</span>\r\n                      ) : (\r\n                        \"未发布\"\r\n                      )}\r\n                    </p>\r\n                    {item.isStart === 1 ? (\r\n                      <span\r\n                        // src=\"http://192.168.5.104:5008/img/judge-man.png\"\r\n                        title=\"人工评分\"\r\n                        className=\"judge iconfont icon-pingjuan\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          if (item.isStart === 1) {\r\n                            // console.log(item.id);\r\n                          }\r\n                        }}\r\n                      ></span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    <p className=\"info\">\r\n                      <span>{item.data_count ? item.data_count : 0}份数据</span>\r\n                      <span className=\"time\">\r\n                        {setUpdateTime(item.update_time)}\r\n                      </span>\r\n                    </p>\r\n                    <div\r\n                      className=\"operate-bar\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                      }}\r\n                    >\r\n                      <p\r\n                        className={`${\r\n                          item.isStart !== 1 ? \"edit\" : \"edit not-allowed\"\r\n                        }`}\r\n                        onClick={() => {\r\n                          if (item.isStart === 1) {\r\n                            message.warning({\r\n                              content: \"无法修改收集中的项目,请停止发布\",\r\n                              duration: 0.7,\r\n                              style: {\r\n                                position: \"relative\",\r\n                                top: 50,\r\n                              },\r\n                            });\r\n                            return;\r\n                          }\r\n                          setExamId({ exam_id: item.id });\r\n                          setStepStatus({ index: 0 });\r\n                          this.props.history.push(\"/layout/examination\");\r\n                        }}\r\n                      >\r\n                        <span className=\"iconfont icon-bianji\"></span>\r\n                        <span>编辑</span>\r\n                      </p>\r\n                      <p\r\n                        className=\"issue\"\r\n                        onClick={() => {\r\n                          setExamId({ exam_id: item.id });\r\n                          setStepStatus({ index: 1 });\r\n                          this.props.history.push(\"/layout/examination\");\r\n                        }}\r\n                      >\r\n                        <span className=\"iconfont icon-fasong\"></span>\r\n                        <span>发布</span>\r\n                      </p>\r\n                      <p\r\n                        className=\"statistics\"\r\n                        onClick={() => {\r\n                          setExamId({ exam_id: item.id });\r\n                          setStepStatus({ index: 2 });\r\n                          this.props.history.push(\"/layout/examination\");\r\n                        }}\r\n                      >\r\n                        <span className=\"iconfont icon-tongji\"></span>\r\n                        <span>数据</span>\r\n                      </p>\r\n                      <div className=\"more\">\r\n                        <Popover\r\n                          placement=\"bottom\"\r\n                          trigger=\"click\"\r\n                          overlayStyle={{zIndex:90}}\r\n                          style={{ cursor: \"auto\" }}\r\n                          overlayClassName=\"operation-more\"\r\n                          content={\r\n                            <div>\r\n                              <div\r\n                                className=\"judge\"\r\n                                style={{\r\n                                  color: `${item.isStart !== 1 ? \"#ccc\" : \"\"}`,\r\n                                  cursor: `${\r\n                                    item.isStart === 1\r\n                                      ? \"pointer\"\r\n                                      : \"not-allowed\"\r\n                                  }`,\r\n                                }}\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  if (item.isStart === 1) {\r\n                                    // console.log(item.id);\r\n                                  }\r\n                                }}\r\n                              >\r\n                                人工评分\r\n                              </div>\r\n                              <div\r\n                                className=\"stop\"\r\n                                style={{\r\n                                  color: `${item.isStart !== 1 ? \"#ccc\" : \"\"}`,\r\n                                  cursor: `${\r\n                                    item.isStart === 1\r\n                                      ? \"pointer\"\r\n                                      : \"not-allowed\"\r\n                                  }`,\r\n                                }}\r\n                              >\r\n                                {item.isStart === 1 ? (\r\n                                  <Popconfirm\r\n                                    title=\"确定停止发布吗？\"\r\n                                    placement=\"right\"\r\n                                    okText=\"确定\"\r\n                                    cancelText=\"取消\"\r\n                                    onConfirm={async () => {\r\n                                      const stopRes = await stopIssue({\r\n                                        exam_id: item.id,\r\n                                      });\r\n                                      // console.log(stopRes);\r\n                                      if (stopRes.code === \"1001\") {\r\n                                        this.updateList();\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <span>停止发布</span>\r\n                                  </Popconfirm>\r\n                                ) : (\r\n                                  <span>停止发布</span>\r\n                                )}\r\n                              </div>\r\n                              <div\r\n                                className=\"delete\"\r\n                                onClick={() => {\r\n                                  if (item.isStart === 1) {\r\n                                    message.warning({\r\n                                      content: \"无法删除收集中的项目\",\r\n                                      duration: 0.7,\r\n                                    });\r\n                                    return;\r\n                                  }\r\n                                  showDeleteConfirm(item);\r\n                                }}\r\n                              >\r\n                                删除项目\r\n                              </div>\r\n                            </div>\r\n                          }\r\n                        >\r\n                          <span className=\"iconfont icon-more\"></span>\r\n                        </Popover>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {/* <Modal></Modal> */}\r\n            </div>\r\n          ) : (\r\n            <Table dataSource={getExamList} rowKey=\"id\" columns={columns} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface IMapStateToProps {\r\n  examEdit: object;\r\n}\r\nexport default connect(\r\n  (state: IMapStateToProps) => state.examEdit,\r\n  action.examEdit\r\n)(ExamList);\r\n","export var getRenderPropValue = function getRenderPropValue(propValue) {\n  if (!propValue) {\n    return null;\n  }\n\n  var isRenderFunction = typeof propValue === 'function';\n\n  if (isRenderFunction) {\n    return propValue();\n  }\n\n  return propValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport Tooltip from '../tooltip';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/button';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigContext } from '../config-provider';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { cloneElement } from '../_util/reactNode';\nimport { getTransitionName } from '../_util/motion';\nimport ActionButton from '../_util/ActionButton';\nimport useDestroyed from '../_util/hooks/useDestroyed';\nvar Popconfirm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var _useMergedState = useMergedState(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      visible = _useMergedState2[0],\n      setVisible = _useMergedState2[1];\n\n  var isDestroyed = useDestroyed();\n\n  var settingVisible = function settingVisible(value, e) {\n    var _a;\n\n    if (!isDestroyed()) {\n      setVisible(value);\n    }\n\n    (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, value, e);\n  };\n\n  var close = function close(e) {\n    settingVisible(false, e);\n  };\n\n  var onConfirm = function onConfirm(e) {\n    var _a;\n\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var onCancel = function onCancel(e) {\n    var _a;\n\n    settingVisible(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(_this, e);\n  };\n\n  var _onKeyDown = function onKeyDown(e) {\n    if (e.keyCode === KeyCode.ESC && visible) {\n      settingVisible(false, e);\n    }\n  };\n\n  var onVisibleChange = function onVisibleChange(value) {\n    var disabled = props.disabled;\n\n    if (disabled) {\n      return;\n    }\n\n    settingVisible(value);\n  };\n\n  var renderOverlay = function renderOverlay(prefixCls, popconfirmLocale) {\n    var okButtonProps = props.okButtonProps,\n        cancelButtonProps = props.cancelButtonProps,\n        title = props.title,\n        cancelText = props.cancelText,\n        okText = props.okText,\n        okType = props.okType,\n        icon = props.icon,\n        _props$showCancel = props.showCancel,\n        showCancel = _props$showCancel === void 0 ? true : _props$showCancel;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, icon, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message-title\")\n    }, getRenderPropValue(title))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-buttons\")\n    }, showCancel && /*#__PURE__*/React.createElement(Button, _extends({\n      onClick: onCancel,\n      size: \"small\"\n    }, cancelButtonProps), cancelText || popconfirmLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n      buttonProps: _extends(_extends({\n        size: 'small'\n      }, convertLegacyProps(okType)), okButtonProps),\n      actionFn: onConfirm,\n      close: close,\n      prefixCls: getPrefixCls('btn'),\n      quitOnNullishReturnValue: true,\n      emitEvent: true\n    }, okText || popconfirmLocale.okText)));\n  };\n\n  var customizePrefixCls = props.prefixCls,\n      placement = props.placement,\n      children = props.children,\n      overlayClassName = props.overlayClassName,\n      restProps = __rest(props, [\"prefixCls\", \"placement\", \"children\", \"overlayClassName\"]);\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var prefixClsConfirm = getPrefixCls('popconfirm', customizePrefixCls);\n  var overlayClassNames = classNames(prefixClsConfirm, overlayClassName);\n  var overlay = /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Popconfirm\",\n    defaultLocale: defaultLocale.Popconfirm\n  }, function (popconfirmLocale) {\n    return renderOverlay(prefixCls, popconfirmLocale);\n  });\n  var rootPrefixCls = getPrefixCls();\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, restProps, {\n    prefixCls: prefixCls,\n    placement: placement,\n    onVisibleChange: onVisibleChange,\n    visible: visible,\n    overlay: overlay,\n    overlayClassName: overlayClassNames,\n    ref: ref,\n    transitionName: getTransitionName(rootPrefixCls, 'zoom-big', props.transitionName)\n  }), cloneElement(children, {\n    onKeyDown: function onKeyDown(e) {\n      var _a, _b;\n\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n\n      _onKeyDown(e);\n    }\n  }));\n});\nPopconfirm.defaultProps = {\n  placement: 'top',\n  trigger: 'click',\n  okType: 'primary',\n  icon: /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n  disabled: false\n};\nexport default Popconfirm;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport { ConfigContext } from '../config-provider';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport { getTransitionName } from '../_util/motion';\nvar Popover = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var customizePrefixCls = _a.prefixCls,\n      title = _a.title,\n      content = _a.content,\n      otherProps = __rest(_a, [\"prefixCls\", \"title\", \"content\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var getOverlay = function getOverlay(prefixCls) {\n    if (!title && !content) return undefined;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, title && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-title\")\n    }, getRenderPropValue(title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inner-content\")\n    }, getRenderPropValue(content)));\n  };\n\n  var prefixCls = getPrefixCls('popover', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, otherProps, {\n    prefixCls: prefixCls,\n    ref: ref,\n    overlay: getOverlay(prefixCls),\n    transitionName: getTransitionName(rootPrefixCls, 'zoom-big', otherProps.transitionName)\n  }));\n});\nPopover.displayName = 'Popover';\nPopover.defaultProps = {\n  placement: 'top',\n  trigger: 'hover',\n  mouseEnterDelay: 0.1,\n  mouseLeaveDelay: 0.1,\n  overlayStyle: {}\n};\nexport default Popover;"],"names":["getExam","data","axios","url","method","insertQuestion","addNewProject","copyProject","getExamList","getQuesStore","quesEditItem","changeQuestionType","changeQuestionScore","changeQuestionAnswer","deleteQuestion","getIssueStatus","issueExam","addNewType","addQuesToStore","cancelCollect","removeImage","addOption","removeOption","editExamMSG","stopIssue","copyFromStore","copyFromTemp","updateStoreList","removeExam","demo","demoTest","payload","type","TYPE","examEdit","setOriginList","setStepStatus","setQuesFocus","setQuesType","setExamId","updateQuesList","setFocusMsg","changeShowSerial","setHiddenHolder","setLoginId","setTypeList","setQuestionStore","setExamStatus","scrollToBottom","document","documentElement","scrollTo","behavior","top","scrollHeight","scrollToActiveQues","index","querySelector","getBoundingClientRect","scrollTop","request","baseURL","timeout","interceptors","use","config","Error","response","res","err","status","console","error","confirm","Modal","ExamList","state","listType","originList","examList","update_time","keywords","changeListType","setState","changeUpdateTime","value","changeStatus","searchProject","e","currentTarget","addPro","props","history","push","updateList","creator_id","login_id","examListRes","code","tempList","sort","a","b","Date","getTime","filter","item","isDelete","showDeleteConfirm","record","title","exam_name","icon","ExclamationCircleOutlined","centered","style","zIndex","okText","okType","cancelText","onOk","exam_id","id","message","this","isStart","slice","indexOf","time","targetTime","nowTime","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minutes","getMinutes","setUpdateTime","Option","Select","columns","dataIndex","key","align","render","color","count","toLocaleDateString","replace","width","_text","display","justifyContent","marginRight","lineHeight","cursor","onClick","content","duration","position","placement","trigger","overlayStyle","overlayClassName","className","stopPropagation","onConfirm","fontSize","defaultValue","onChange","placeholder","padding","background","marginLeft","map","data_count","dataSource","rowKey","Component","connect","action","getRenderPropValue","propValue","_this","__rest","s","t","p","Object","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","length","propertyIsEnumerable","Popconfirm","React","ref","getPrefixCls","ConfigContext","_useMergedState","useMergedState","visible","defaultVisible","_useMergedState2","_slicedToArray","setVisible","isDestroyed","useDestroyed","settingVisible","_a","onVisibleChange","close","onCancel","customizePrefixCls","prefixCls","children","restProps","prefixClsConfirm","overlayClassNames","classNames","overlay","LocaleReceiver","componentName","defaultLocale","popconfirmLocale","okButtonProps","cancelButtonProps","_props$showCancel","showCancel","concat","Button","_extends","size","ActionButton","buttonProps","convertLegacyProps","actionFn","quitOnNullishReturnValue","emitEvent","renderOverlay","rootPrefixCls","Tooltip","disabled","transitionName","getTransitionName","cloneElement","onKeyDown","_b","keyCode","KeyCode","_onKeyDown","defaultProps","ExclamationCircleFilled","Popover","otherProps","getOverlay","displayName","mouseEnterDelay","mouseLeaveDelay"],"sourceRoot":""}